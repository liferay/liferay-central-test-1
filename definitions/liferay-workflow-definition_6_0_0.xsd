<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!--
  ~ Copyright (c) 2000-2010 Liferay, Inc. All rights reserved.
  ~
  ~ This library is free software; you can redistribute it and/or modify it under
  ~ the terms of the GNU Lesser General Public License as published by the Free
  ~ Software Foundation; either version 2.1 of the License, or (at your option)
  ~ any later version.
  ~
  ~ This library is distributed in the hope that it will be useful, but WITHOUT
  ~ ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
  ~ FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
  ~ details.
  ~
  ~
  ~ THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  ~ IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  ~ FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  ~ AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  ~ LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  ~ OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
  ~ SOFTWARE.
  -->
<xs:schema  xmlns="urn:liferay.com:liferay-workflow_6.0.0"
           targetNamespace="urn:liferay.com:liferay-workflow_6.0.0"
           xmlns:xs="http://www.w3.org/2001/XMLSchema" elementFormDefault="qualified">

	<xs:import namespace="http://www.w3.org/XML/1998/namespace"/>

	<xs:element name="workflow-definition">
		<xs:complexType>
			 <xs:choice minOccurs="0" maxOccurs="unbounded">
				<xs:element ref="name"/>
				<xs:element ref="description"/>
				<xs:element ref="version"/>
				<xs:group ref="nodes"/>
			</xs:choice>
		</xs:complexType>
	</xs:element>

	<xs:element name="name" type="xs:string"/>
	<xs:element name="description" type="xs:string"/>
	<xs:element name="version" type="xs:int"/>

	<xs:group name="nodes">
		<xs:choice>
			<xs:element ref="state"/>
			<xs:element ref="fork"/>
			<xs:element ref="task"/>
			<xs:element ref="join"/>
		</xs:choice>
	</xs:group>

	<xs:element name="state">
		<xs:complexType>
			<xs:sequence>
				<xs:element ref="description" minOccurs="0" maxOccurs="1"/>
				<xs:element ref="actions" minOccurs="0" maxOccurs="1"/>
				<xs:element ref="transitions" minOccurs="0" maxOccurs="1"/>
			</xs:sequence>
			<xs:attribute name="name" type="xs:string" use="required"/>
			<xs:attribute name="initial" type="xs:boolean" use="optional" default="false"/>
			<xs:attribute name="terminal" type="xs:boolean" use="optional" default="false"/>
		</xs:complexType>
	</xs:element>
	<xs:element name="fork">
		<xs:complexType>
			<xs:sequence>
				<xs:element ref="description" minOccurs="0" maxOccurs="1"/>
				<xs:element ref="actions" minOccurs="0" maxOccurs="1"/>
				<xs:element ref="transitions" minOccurs="1" maxOccurs="1"/>
			</xs:sequence>
			<xs:attribute name="name" type="xs:string" use="required"/>
		</xs:complexType>
	</xs:element>
	<xs:element name="task">
		<xs:complexType>
			<xs:sequence>
				<xs:element ref="description" minOccurs="0" maxOccurs="1"/>
				<xs:element ref="actions" minOccurs="0" maxOccurs="1"/>
				<xs:element ref="transitions" minOccurs="1" maxOccurs="1"/>
				<xs:element ref="assignments" minOccurs="1" maxOccurs="1"/>
			</xs:sequence>
			<xs:attribute name="name" type="xs:string" use="required"/>
		</xs:complexType>
	</xs:element>
	<xs:element name="join">
		<xs:complexType>
			<xs:sequence>
				<xs:element ref="description" minOccurs="0" maxOccurs="1"/>
				<xs:element ref="actions" minOccurs="0" maxOccurs="1"/>
				<xs:element ref="transitions" minOccurs="1" maxOccurs="1"/>
			</xs:sequence>
			<xs:attribute name="name" type="xs:string" use="required"/>
		</xs:complexType>
	</xs:element>

	<!-- actions to be taken either upon entry or prior to exiting a node -->
	<xs:element name="actions">
		<xs:complexType>
			<xs:sequence>
				<xs:element ref="action" maxOccurs="unbounded"/>
			</xs:sequence>
		</xs:complexType>
	</xs:element>
	<xs:element name="action">
		<xs:complexType>
			<xs:simpleContent>
				<xs:extension base="xs:string">
					<xs:attribute name="execution-order" type="xs:integer" use="optional" default="0"/>
					<xs:attribute name="name" type="xs:string" use="required"/>
					<xs:attribute name="language" use="required">
						<xs:simpleType>
							<xs:restriction base="xs:string">
								<xs:enumeration value="groovy"/>
								<xs:enumeration value="javascript"/>
								<xs:enumeration value="python"/>
								<xs:enumeration value="ruby"/>
							</xs:restriction>
						</xs:simpleType>
					</xs:attribute>
					<xs:attribute name="type" use="required">
						<xs:simpleType>
							<xs:restriction base="xs:string">
								<xs:enumeration value="onEntry"/>
								<xs:enumeration value="onExit"/>
							</xs:restriction>
						</xs:simpleType>
					</xs:attribute>
				</xs:extension>
			</xs:simpleContent>
		</xs:complexType>
	</xs:element>

	<!-- transitions between nodes -->
	<xs:element name="transitions">
		<xs:complexType>
			<xs:sequence>
				<xs:element ref="transition" maxOccurs="unbounded"/>
			</xs:sequence>
		</xs:complexType>
	</xs:element>
	<xs:element name="transition">
		<xs:complexType>
			<xs:simpleContent>
				<xs:extension base="xs:string">
					<xs:attribute name="name" type="xs:string" use="required "/>
					<xs:attribute name="target" type="xs:string" use="required"/>
					<xs:attribute name="default" type="xs:boolean" use="optional" default="true"/>
				</xs:extension>
			</xs:simpleContent>
		</xs:complexType>
	</xs:element>

	<!-- task assignments -->
	<xs:element name="assignments">
		<xs:complexType>
			<xs:choice maxOccurs="unbounded">
				<xs:element ref="role" minOccurs="0" maxOccurs="unbounded"/>
				<xs:element ref="user" minOccurs="0" maxOccurs="unbounded"/>
			</xs:choice>
		</xs:complexType>
	</xs:element>
	<xs:element name="role">
		<xs:complexType>
			<xs:simpleContent>
				<xs:extension base="xs:string">
					<xs:attribute name="roleId" type="xs:long" use="optional"/>
					<xs:attribute name="name" type="xs:string" use="optional"/>
					<xs:attribute name="default" type="xs:string" use="optional" default="true"/>
				</xs:extension>
			</xs:simpleContent>
		</xs:complexType>
	</xs:element>
	<xs:element name="user">
		<xs:complexType>
			<xs:simpleContent>
				<xs:extension base="xs:string">
					<xs:attribute name="email" type="xs:string" use="optional"/>
					<xs:attribute name="userId" type="xs:long" use="optional"/>
					<xs:attribute name="screenName" type="xs:string" use="required"/>
					<xs:attribute name="default" type="xs:string" use="optional" default="true"/>
				</xs:extension>
			</xs:simpleContent>
		</xs:complexType>
	</xs:element>

</xs:schema>
