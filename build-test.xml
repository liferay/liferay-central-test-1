<?xml version="1.0"?>

<project name="portal-test" basedir="." default="test" xmlns:antelope="antlib:ise.antelope.tasks">
	<import file="build.xml" />

	<property file="${project.dir}/test.${user.name}.properties" />
	<property file="${project.dir}/test.${env.COMPUTERNAME}.properties" />
	<property file="${project.dir}/test.properties" />

	<propertycopy name="db.host" from="db.${db.type}.host" silent="true" />
	<propertycopy name="db.driver" from="db.${db.type}.driver" silent="true" />
	<propertycopy name="db.schema" from="db.${db.type}.schema" silent="true" />
	<propertycopy name="db.url" from="db.${db.type}.url" silent="true" />
	<propertycopy name="db.username" from="db.${db.type}.username" silent="true" />
	<propertycopy name="db.password" from="db.${db.type}.password" silent="true" />

	<target name="deploy-simple-server-plugins">
		<property name="liferay.home" value="${simple.server.dir}/.." />

		<delete dir="${liferay.home}/data" />
		<delete dir="${liferay.home}/deploy" />

		<exec dir="${lp.plugins.dir}" executable="cmd.exe">
			<arg line="/c svn update" />
		</exec>

		<echo file="${lp.plugins.dir}/build.${user.name}.properties">app.server.dir=${simple.server.dir}
app.server.portal.dir=${simple.server.portal.dir}

plugins.includes=${plugins.includes}</echo>

		<ant dir="${lp.plugins.dir}/${plugin.types}" inheritAll="false">
			<target name="clean" />
			<target name="deploy" />
		</ant>

		<delete dir="${lp.plugins.dir}/dist" />
		<mkdir dir="${lp.plugins.dir}/dist" />
	</target>

	<target name="prepare-common">
		<antcall target="prepare-portal-ext-properties" inheritAll="false" />

		<exec executable="cmd.exe">
			<arg line="/c svn revert portal-web/docroot/WEB-INF/web.xml" />
		</exec>

		<replace
			file="portal-web/docroot/WEB-INF/web.xml"
			token="session-timeout&gt;30&lt;"
			value="session-timeout&gt;2&lt;"
		/>

		<antcall target="clean" />
		<antcall target="start" />
	</target>

	<target name="prepare-mysql-5.0">
		<echo file="test.${user.name}.properties">db.type=mysql-5.0</echo>

		<antcall target="prepare-common" />
	</target>

	<target name="prepare-oracle-10">
		<echo file="test.${user.name}.properties">db.type=oracle-10</echo>

		<antcall target="prepare-common" />
	</target>

	<target name="prepare-sql-server-2005">
		<echo file="test.${user.name}.properties">db.type=sql-server-2005</echo>

		<antcall target="prepare-common" />
	</target>

	<target name="prepare-portal-ext-properties">
		<echo file="portal-impl/src/portal-ext.properties"><![CDATA[jdbc.default.jndi.name=

jdbc.default.driverClassName=${db.driver}
jdbc.default.url=${db.url}
jdbc.default.username=${db.username}
jdbc.default.password=${db.password}

captcha.max.challenges=0

browser.launcher.url=

mail.session.jndi.name=

axis.servlet.hosts.allowed=

tunnel.servlet.hosts.allowed=]]></echo>
	</target>

	<target name="prepare-tomcat-6.0-mysql-5.0">
		<antcall target="prepare-mysql-5.0" />

		<ant antfile="build-dist.xml" target="build-dist-tomcat-6.0" />
	</target>

	<target name="rebuild-database">
		<if>
			<equals arg1="${sql.legacy.zip}" arg2="$${sql.legacy.zip}" />
			<then>
				<fail>
.

Please set "sql.legacy.zip" in test.properties to point to the legacy SQL ZIP
file.
				</fail>
			</then>
			<else>
				<if>
					<or>
						<not>
							<available file="sql/legacy" />
						</not>
						<not>
							<uptodate
								srcfile="${sql.legacy.zip}"
								targetfile="sql/legacy"
							/>
						</not>
					</or>
					<then>
						<delete dir="sql/legacy" failonerror="false" />

						<unzip src="${sql.legacy.zip}" dest="sql" />

						<touch>
							<fileset dir="sql/legacy" />
						</touch>
					</then>
				</if>

				<if>
					<equals arg1="${skip.rebuild-database}" arg2="$${skip.rebuild-database}" />
					<then>
						<if>
							<equals arg1="${db.type}" arg2="mysql-5.0" />
							<then>
								<antcall target="rebuild-database-mysql-5.0" />
							</then>
							<elseif>
								<equals arg1="${db.type}" arg2="oracle-10" />
								<then>
									<antcall target="rebuild-database-oracle-10" />
								</then>
							</elseif>
							<elseif>
								<equals arg1="${db.type}" arg2="sql-server-2005" />
								<then>
									<antcall target="rebuild-database-sql-server-2005" />
								</then>
							</elseif>
						</if>
					</then>
				</if>
			</else>
		</if>
	</target>

	<target name="rebuild-database-mysql-5.0">
		<ant dir="sql" target="rebuild-mysql" inheritAll="false" />
	</target>

	<target name="rebuild-database-oracle-10">
		<if>
			<or>
				<equals arg1="${sql.dir}" arg2="$${sql.dir}" />
				<equals arg1="${sql.file}" arg2="$${sql.file}" />
			</or>
			<then>
				<property name="sql.dir" value="sql\create\" />
				<property name="sql.file" value="create-oracle.sql" />
			</then>
		</if>

		<tstamp>
			<format property="tstamp.value" pattern="yyyyMMddkkmmssSSS" />
		</tstamp>

		<property name="temp.dir" value="temp\${db.oracle-10.username}\${tstamp.value}" />

		<exec executable="${plink.executable}">
			<arg line="-pw ${vm.password} ${vm.username}@${db.oracle-10.host} cmd.exe /c mkdir C:\${temp.dir}" />
		</exec>

		<exec executable="${pscp.executable}">
			<arg line="-pw ${vm.password} ${sql.dir}${sql.file} ${vm.username}@${db.oracle-10.host}:\${temp.dir}" />
		</exec>

		<exec executable="${plink.executable}">
			<arg line="-pw ${vm.password} ${vm.username}@${db.oracle-10.host} sqlplus system/password @C:\${temp.dir}\${sql.file} ${db.oracle-10.username} ${db.oracle-10.password}" />
		</exec>

		<exec executable="${plink.executable}">
			<arg line="-pw ${vm.password} ${vm.username}@${db.oracle-10.host} cmd.exe /c rmdir /q /s C:\${temp.dir}" />
		</exec>
	</target>

	<target name="rebuild-database-sql-server-2005">
		<if>
			<or>
				<equals arg1="${sql.dir}" arg2="$${sql.dir}" />
				<equals arg1="${sql.file}" arg2="$${sql.file}" />
			</or>
			<then>
				<property name="sql.dir" value="sql\create\" />
				<property name="sql.file" value="create-sql-server.sql" />
			</then>
		</if>

		<tstamp>
			<format property="tstamp.value" pattern="yyyyMMddkkmmssSSS" />
		</tstamp>

		<property name="temp.dir" value="temp\${db.sql-server-2005.schema}\${tstamp.value}\" />

		<copy file="${sql.dir}${sql.file}" tofile="${sql.file}" />

		<replace file="${sql.file}">
			<replacefilter token="drop database lportal;" value="drop database ${db.sql-server-2005.schema};"/>
			<replacefilter token="create database lportal;" value="create database ${db.sql-server-2005.schema};"/>
			<replacefilter token="use lportal;" value="use ${db.sql-server-2005.schema};"/>
		</replace>

		<exec executable="${plink.executable}">
			<arg line="-pw ${vm.password} ${vm.username}@${db.sql-server-2005.host} cmd.exe /c mkdir C:\${temp.dir}" />
		</exec>

		<exec executable="${pscp.executable}">
			<arg line="-pw ${vm.password} ${sql.file} ${vm.username}@${db.sql-server-2005.host}:\${temp.dir}" />
		</exec>

		<exec executable="${plink.executable}">
			<arg line="-pw ${vm.password} ${vm.username}@${db.sql-server-2005.host} osql -n -U ${db.sql-server-2005.username} -P ${db.sql-server-2005.password} -i C:\${temp.dir}\${sql.file}" />
		</exec>

		<exec executable="${plink.executable}">
			<arg line="-pw ${vm.password} ${vm.username}@${db.sql-server-2005.host} cmd.exe /c rmdir /q /s C:\${temp.dir}" />
		</exec>

		<delete file="${sql.file}" />
	</target>

	<target name="revert-test-properties">
		<exec executable="cmd.exe">
			<arg line="/c svn revert portal-impl/test/test-portal-impl.properties" />
		</exec>

		<exec executable="cmd.exe">
			<arg line="/c svn revert portal-web/test/test-portal-web.properties" />
		</exec>
	</target>

	<target name="prepare-vm-server">
		<ant antfile="build-dist.xml" target="build-dist-tomcat-6.0" />

		<delete dir="dist" />
		<mkdir dir="dist" />

		<ant antfile="build-dist.xml" target="zip-portal-war-2.4" />

		<echo>Copying ${vm.drive}\${vm.host}\${vm.host}.vmdk.${vm.vmdk.suffix} to ${vm.drive}\${vm.host}\${vm.host}.vmdk</echo>

		<exec executable="cmd">
			<arg line="/c copy /y ${vm.drive}\${vm.host}\${vm.host}.vmdk.${vm.vmdk.suffix} ${vm.drive}\${vm.host}\${vm.host}.vmdk" />
		</exec>

		<exec dir="${vm.drive}/${vm.host}" executable="${vmware-cmd.executable}">
			<arg line="${vm.drive}\${vm.host}\${vm.host}.vmx start" />
		</exec>

		<sleep seconds="30" />

		<echo file="hosts">127.0.0.1	localhost
127.0.0.1	liferay-b711dd9
127.0.0.1	www.able.com
127.0.0.1	www.baker.com
127.0.0.1	www.charlie.com
127.0.0.1	www.dog.com
127.0.0.1	www.easy.com
127.0.0.1	www.fox.com</echo>

		<exec executable="${pscp.executable}">
			<arg line="-pw ${vm.password} hosts dist\liferay-portal-${lp.version}.war tunnel-web\tunnel-web.war ${vm.username}@${vm.host}:/" />
		</exec>

		<delete file="hosts" />

		<exec executable="${plink.executable}">
			<arg line="-pw ${vm.password} ${vm.username}@${vm.host} cmd.exe /c move /y C:\hosts C:\WINDOWS\system32\drivers\etc\hosts" />
		</exec>

		<ant antfile="build-dist.xml" target="zip-portal-dependencies" />
	</target>

	<target name="run-selenium-test">
		<if>
			<equals arg1="${test.class}" arg2="PortalWebTestSuite" />
			<then>
				<ant dir="portal-impl" target="test-class" inheritAll="false">
					<property name="class" value="ServiceHttpTestSuite" />
				</ant>

				<ant dir="portal-impl" target="test-class" inheritAll="false">
					<property name="class" value="ServiceSoapTestSuite" />
				</ant>
			</then>
		</if>

		<ant dir="portal-web" target="test-class" inheritAll="false">
			<property name="class" value="${test.class}" />
		</ant>
	</target>

	<target name="run-simple-server">
		<antcall target="rebuild-database" inheritAll="false" />

		<delete includeemptydirs="true" failonerror="false">
			<fileset
				dir="${simple.server.deploy.dir}"
				includes="*-portlet/**,*-theme/**"
			/>
		</delete>

		<if>
			<not>
				<equals arg1="${portlet.plugins.includes}" arg2="$${portlet.plugins.includes}" />
			</not>
			<then>
				<antcall target="deploy-simple-server-plugins">
					<param name="plugin.types" value="portlets" />
					<param name="plugins.includes" value="${portlet.plugins.includes}" />
				</antcall>
			</then>
		</if>

		<if>
			<not>
				<equals arg1="${theme.plugins.includes}" arg2="$${theme.plugins.includes}" />
			</not>
			<then>
				<antcall target="deploy-simple-server-plugins">
					<param name="plugin.types" value="themes" />
					<param name="plugins.includes" value="${theme.plugins.includes}" />
				</antcall>
			</then>
		</if>

		<parallel>
			<exec dir="${simple.server.bin.dir}" executable="${simple.server.start.executable}" resolveexecutable="true">
				<arg line="${simple.server.start.executable.arg.line}" />
			</exec>

			<sequential>
				<waitfor>
					<http url="http://localhost:8080" />
				</waitfor>

				<if>
					<or>
						<not>
							<equals arg1="${portlet.plugins.includes}" arg2="$${portlet.plugins.includes}" />
						</not>
						<not>
							<equals arg1="${theme.plugins.includes}" arg2="$${theme.plugins.includes}" />
						</not>
					</or>
					<then>
						<sleep seconds="30" />
					</then>
				</if>

				<antcall target="run-selenium-test" />

				<exec dir="${simple.server.bin.dir}" executable="${simple.server.stop.executable}" resolveexecutable="true">
					<arg line="${simple.server.stop.executable.arg.line}" />
				</exec>
			</sequential>
		</parallel>
	</target>

	<target name="run-tomcat-6.0">
		<antcall target="run-simple-server">
			<param name="simple.server.dir" value="${app.server.tomcat.dir}" />
			<param name="simple.server.bin.dir" value="${app.server.tomcat.bin.dir}" />
			<param name="simple.server.deploy.dir" value="${app.server.tomcat.deploy.dir}" />
			<param name="simple.server.portal.dir" value="${app.server.tomcat.portal.dir}" />
			<param name="simple.server.start.executable" value="catalina${file.suffix.bat}" />
			<param name="simple.server.start.executable.arg.line" value="run" />
			<param name="simple.server.stop.executable" value="shutdown${file.suffix.bat}" />
		</antcall>
	</target>

	<target name="start-selenium">
		<java jar="lib/development/selenium-server.jar" fork="true" spawn="true">
			<arg line="-port 14444 -singleWindow" />
		</java>
	</target>

	<target name="stop-selenium">
		<antelope:post to="http://localhost:14444/selenium-server/driver/?cmd=shutDown" wantresponse="true" />
	</target>

	<target name="test">
		<antcall target="prepare-mysql-5.0" />

		<antcall target="rebuild-database" inheritAll="false" />

		<antcall target="revert-test-properties" />

		<ant dir="portal-impl" target="test-class" inheritAll="false">
			<property name="class" value="ServiceTestSuite" />
		</ant>

		<ant dir="portal-impl" target="test-class" inheritAll="false">
			<property name="class" value="PersistenceTestSuite" />
		</ant>

		<ant dir="portal-impl" target="test-class" inheritAll="false">
			<property name="class" value="MiscTestSuite" />
		</ant>

		<ant dir="portal-kernel" target="test" inheritAll="false" />

		<ant dir="util-java" target="test" inheritAll="false" />
	</target>

	<target name="test-database">
		<antcall target="prepare-tomcat-6.0-mysql-5.0" />

		<ant antfile="build-test-database-oracle.xml" target="test-database-oracle-10" inheritAll="false" />
		<ant antfile="build-test-database-sql-server.xml" target="test-database-sql-server-2005" inheritAll="false" />
	</target>

	<target name="test-tck">
		<antcall target="prepare-portal-ext-properties" />

		<echo file="portal-impl/src/portal-ext.properties" append="true">

tck.url=true</echo>

		<exec executable="cmd.exe">
			<arg line="/c svn revert portal-web/docroot/WEB-INF/web.xml" />
		</exec>

		<antcall target="clean" />
		<antcall target="start" />

		<ant antfile="build-dist.xml" target="build-dist-tomcat-6.0" />

		<delete dir="tools/tck" />

		<unzip src="tools/portlet-tck070508.zip" dest="tools/tck" />

		<replace file="tools/tck/bin/ts.jte">
			<replacefilter token="http://localhost:8080/pluto/tck" value="http://localhost:8080/c/portal/tck" />
		</replace>

		<echo file="tools/tck/bin/build.properties" append="true">

work.dir=${basedir.unix}/tools/tck/work</echo>

		<property name="liferay.home" value="${app.server.dir}/.." />

		<delete dir="${liferay.home}/data" />
		<delete dir="${liferay.home}/deploy" />

		<copy todir="${liferay.home}/deploy" flatten="true">
			<fileset
				dir="tools/tck"
				includes="**/*.war"
			/>
		</copy>

		<antcall target="rebuild-database" inheritAll="false" />

		<parallel>
			<exec dir="${app.server.tomcat.bin.dir}" executable="catalina${file.suffix.bat}" resolveexecutable="true">
				<arg line="run" />
			</exec>

			<sequential>
				<waitfor>
					<http url="http://localhost:8080" />
				</waitfor>

				<sleep seconds="60" />

				<exec dir="tools/tck/src/com" executable="${basedir}/tools/tck/bin/tsant.bat">
					<arg line="runclient" />
					<env key="TS_HOME" value="${basedir}\tools\tck" />
				</exec>

				<exec dir="${app.server.tomcat.bin.dir}" executable="shutdown${file.suffix.bat}" resolveexecutable="true" />
			</sequential>
		</parallel>

		<mkdir dir="portal-impl/test-results" />

		<java
			classname="com.liferay.portal.tools.TCKtoJUnitConverter"
			classpathref="project.classpath"
			fork="true"
			newenvironment="true"
		>
			<jvmarg value="-Dexternal-properties=com/liferay/portal/tools/dependencies/portal-tools.properties" />
			<arg value="tools/tck/work/jtData/harness.trace" />
			<arg value="portal-impl/test-results" />
		</java>
	</target>

	<target name="test-themes">
		<antcall target="prepare-tomcat-6.0-mysql-5.0" />

		<exec dir="${lp.plugins.dir}" executable="cmd.exe">
			<arg line="/c svn update" />
		</exec>

		<antcall target="revert-test-properties" />

		<antcall target="start-selenium" />

		<antcall target="run-tomcat-6.0">
			<param name="test.class" value="ThemesTestSuite" />
			<param name="theme.plugins.includes" value="08-gulona-theme,liferay-jedi-theme" />
		</antcall>

		<antcall target="stop-selenium" />
	</target>
</project>