##
## Start your application server with the system property
## "system.properties.load" set to true to load the external file called
## system.properties. This is given as a convenient way to ensure all properties
## are set for deployment. When the server starts, the portal will load
## system.properties and then system-ext.properties.
##
## Start your application server with the system property
## "system.properties.final" set to true if the properties of system.properties
## override all similar command line properties. If set to false, the properties
## of system.properties will be set if and only if those properties are not
## currently set.
##
## Some application servers require you to set the "file.encoding" and
## "user.timezone" on startup regardless of system.properties because the
## application server reads these properties before system.properties is ever
## loaded.
##

##
## Java
##

    #
    # The file encoding must be set to UTF-8 in order for the
    # internationalization to work correctly.
    #
    file.encoding=UTF-8

    #
    # Java uses the underlying operating system to generate images. If you are
    # using Unix and do not start the portal in a X Windows session, then Java
    # will not know how to generate images and you'll get lots of nasty
    # exceptions. Setting this property to true will fix that. Sometimes this
    # property cannot be set dynamically when the server starts and you'll need
    # to edit your start script to include this as a system property.
    #
    java.awt.headless=true

    #
    # Set the default locale used by Liferay. This locale is no longer set at
    # the VM level. See LEP-2584.
    #
    user.country=US
    user.language=en

    #
    # Set the default time zone used by Liferay. This time zone is no longer set
    # at the VM level. See LEP-2584.
    #
    user.timezone=UTC

##
## Logging
##

    #
    # Set any logger that implements org.apache.commons.logging.Log.
    #
    #org.apache.commons.logging.Log=org.apache.commons.logging.impl.Log4JLogger

    #
    # Set this to true if Log4j complains that it was not properly configured.
    #
    log4j.configure.on.startup=true

##
## Stream
##

    com.liferay.portal.kernel.util.StreamUtil.buffer.size=8192
    com.liferay.portal.kernel.util.StreamUtil.use.nio=false

##
## String Bundler
##

    #
    # String's immutable property is crucial for Java security, but it also can
    # cause performance bottlenecks. Most JDKs provide a package level String
    # constructor which allows creating mutable String objects for performance.
    # However, since String is final and its package is protected by a secure
    # class loader, the constructor must be accessed via reflection.
    # StringBundler will degrade gracefully if the contructor is not found.
    #
    # Set this property to tell StringBundler when to use the performance
    # workaround. It should be set to a high value so that the use of reflection
    # is balanced by the savings in garbage collection. Setting it to too low of
    # a value may actually do more harm than good.
    #
    # Set a value larger than 0 to enable this feature when using StringBundler
    # with an output length longer than the specified value. A reasonable value
    # is 32768 (32 kb) or 65536 (64 kb). The best value depends on how the
    # portal is used. See LPS-9126 for more information.
    #
    com.liferay.portal.kernel.util.StringBundler.unsafe.create.threshold=0

##
## Encryptor
##

    #
    # Set the security provider class.
    #
    com.liferay.util.Encryptor.provider.class=com.sun.crypto.provider.SunJCE

##
## HTTP
##

    #
    # See portal.properties for more HTTP settings.
    #

    #
    # Set the location of the HTTP proxy that the portal will use to fetch
    # external content.
    #
    # Set http.nonProxyHosts for hosts that will not be proxied. This is useful
    # for proxied environments where you need direct access to internal servers.
    # This should follow the same semantics as the java.net package.
    #
    #http.proxyHost=192.168.0.200
    #http.proxyPort=4480
    #http.nonProxyHosts=192.168.0.250

##
## Format
##

    #
    # Set the location of the class that implements
    # com.liferay.format.PhoneNumberFormat. This class will format phone
    # numbers.
    #
    com.liferay.util.format.PhoneNumberFormat=com.liferay.util.format.USAPhoneNumberFormat
    #com.liferay.util.format.PhoneNumberFormat=com.liferay.util.format.IdenticalPhoneNumberFormat

##
## Axis
##

    #
    # Urls that match the specified pattern will use the SimpleHTTPSender. Urls
    # that do not match the specified pattern will use Axis' default HTTPSender.
    #
    com.liferay.util.axis.SimpleHTTPSender.regexp.pattern=.*mappoint\.net.*

##
## Session Parameters
##

    #
    # Encrypt session parameters so that browsers cannot remember them.
    #
    com.liferay.util.servlet.SessionParameters=false

##
## iCal4j
##

    #
    # Set this to true to enable compatibility with Outlook generated ICS files.
    #
    ical4j.compatibility.outlook=true

    #
    # Set this to true to enable relaxed parsing of ICS files during import.
    #
    ical4j.parsing.relaxed=true

    #
    # Set this to true to enable relaxed unfolding of ICS files during import.
    #
    ical4j.unfolding.relaxed=true

    #
    # Set this to true to enable relaxed validation of ICS files during import.
    #
    ical4j.validation.relaxed=true

##
## Lucene
##

    #
    # Set a timeout to avoid lock errors.
    #
    #org.apache.lucene.writeLockTimeout=30000

##
## Quartz
##

    #
    # Make threads daemon so the JVM exits cleanly.
    #
    org.quartz.threadPool.makeThreadsDaemons=true