/**
 * Copyright (c) 2000-2011 Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.liferay.portlet.dynamicdatalists.service.base;

import com.liferay.counter.service.CounterLocalService;

import com.liferay.portal.kernel.bean.BeanReference;
import com.liferay.portal.kernel.bean.IdentifiableBean;
import com.liferay.portal.kernel.dao.jdbc.SqlUpdate;
import com.liferay.portal.kernel.dao.jdbc.SqlUpdateFactoryUtil;
import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.service.ResourceLocalService;
import com.liferay.portal.service.ResourceService;
import com.liferay.portal.service.UserLocalService;
import com.liferay.portal.service.UserService;
import com.liferay.portal.service.base.PrincipalBean;
import com.liferay.portal.service.persistence.ResourceFinder;
import com.liferay.portal.service.persistence.ResourcePersistence;
import com.liferay.portal.service.persistence.UserFinder;
import com.liferay.portal.service.persistence.UserPersistence;

import com.liferay.portlet.dynamicdatalists.service.DDLEntryItemLocalService;
import com.liferay.portlet.dynamicdatalists.service.DDLEntryLocalService;
import com.liferay.portlet.dynamicdatalists.service.DDLEntryService;
import com.liferay.portlet.dynamicdatalists.service.persistence.DDLEntryFinder;
import com.liferay.portlet.dynamicdatalists.service.persistence.DDLEntryItemPersistence;
import com.liferay.portlet.dynamicdatalists.service.persistence.DDLEntryPersistence;
import com.liferay.portlet.dynamicdatamapping.service.DDMStructureLocalService;
import com.liferay.portlet.dynamicdatamapping.service.DDMStructureService;
import com.liferay.portlet.dynamicdatamapping.service.persistence.DDMStructureFinder;
import com.liferay.portlet.dynamicdatamapping.service.persistence.DDMStructurePersistence;

import javax.sql.DataSource;

/**
 * The base implementation of the d d l entry remote service.
 *
 * <p>
 * This implementation exists only as a container for the default service methods generated by ServiceBuilder. All custom service methods should be put in {@link com.liferay.portlet.dynamicdatalists.service.impl.DDLEntryServiceImpl}.
 *
 * @author Brian Wing Shun Chan
 * @see com.liferay.portlet.dynamicdatalists.service.impl.DDLEntryServiceImpl
 * @see com.liferay.portlet.dynamicdatalists.service.DDLEntryServiceUtil
 * @generated
 */
public abstract class DDLEntryServiceBaseImpl extends PrincipalBean
	implements DDLEntryService, IdentifiableBean {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. Always use {@link com.liferay.portlet.dynamicdatalists.service.DDLEntryServiceUtil} to access the d d l entry remote service.
	 */

	/**
	 * Gets the d d l entry local service.
	 *
	 * @return the d d l entry local service
	 */
	public DDLEntryLocalService getDDLEntryLocalService() {
		return ddlEntryLocalService;
	}

	/**
	 * Sets the d d l entry local service.
	 *
	 * @param ddlEntryLocalService the d d l entry local service
	 */
	public void setDDLEntryLocalService(
		DDLEntryLocalService ddlEntryLocalService) {
		this.ddlEntryLocalService = ddlEntryLocalService;
	}

	/**
	 * Gets the d d l entry remote service.
	 *
	 * @return the d d l entry remote service
	 */
	public DDLEntryService getDDLEntryService() {
		return ddlEntryService;
	}

	/**
	 * Sets the d d l entry remote service.
	 *
	 * @param ddlEntryService the d d l entry remote service
	 */
	public void setDDLEntryService(DDLEntryService ddlEntryService) {
		this.ddlEntryService = ddlEntryService;
	}

	/**
	 * Gets the d d l entry persistence.
	 *
	 * @return the d d l entry persistence
	 */
	public DDLEntryPersistence getDDLEntryPersistence() {
		return ddlEntryPersistence;
	}

	/**
	 * Sets the d d l entry persistence.
	 *
	 * @param ddlEntryPersistence the d d l entry persistence
	 */
	public void setDDLEntryPersistence(DDLEntryPersistence ddlEntryPersistence) {
		this.ddlEntryPersistence = ddlEntryPersistence;
	}

	/**
	 * Gets the d d l entry finder.
	 *
	 * @return the d d l entry finder
	 */
	public DDLEntryFinder getDDLEntryFinder() {
		return ddlEntryFinder;
	}

	/**
	 * Sets the d d l entry finder.
	 *
	 * @param ddlEntryFinder the d d l entry finder
	 */
	public void setDDLEntryFinder(DDLEntryFinder ddlEntryFinder) {
		this.ddlEntryFinder = ddlEntryFinder;
	}

	/**
	 * Gets the d d l entry item local service.
	 *
	 * @return the d d l entry item local service
	 */
	public DDLEntryItemLocalService getDDLEntryItemLocalService() {
		return ddlEntryItemLocalService;
	}

	/**
	 * Sets the d d l entry item local service.
	 *
	 * @param ddlEntryItemLocalService the d d l entry item local service
	 */
	public void setDDLEntryItemLocalService(
		DDLEntryItemLocalService ddlEntryItemLocalService) {
		this.ddlEntryItemLocalService = ddlEntryItemLocalService;
	}

	/**
	 * Gets the d d l entry item persistence.
	 *
	 * @return the d d l entry item persistence
	 */
	public DDLEntryItemPersistence getDDLEntryItemPersistence() {
		return ddlEntryItemPersistence;
	}

	/**
	 * Sets the d d l entry item persistence.
	 *
	 * @param ddlEntryItemPersistence the d d l entry item persistence
	 */
	public void setDDLEntryItemPersistence(
		DDLEntryItemPersistence ddlEntryItemPersistence) {
		this.ddlEntryItemPersistence = ddlEntryItemPersistence;
	}

	/**
	 * Gets the counter local service.
	 *
	 * @return the counter local service
	 */
	public CounterLocalService getCounterLocalService() {
		return counterLocalService;
	}

	/**
	 * Sets the counter local service.
	 *
	 * @param counterLocalService the counter local service
	 */
	public void setCounterLocalService(CounterLocalService counterLocalService) {
		this.counterLocalService = counterLocalService;
	}

	/**
	 * Gets the resource local service.
	 *
	 * @return the resource local service
	 */
	public ResourceLocalService getResourceLocalService() {
		return resourceLocalService;
	}

	/**
	 * Sets the resource local service.
	 *
	 * @param resourceLocalService the resource local service
	 */
	public void setResourceLocalService(
		ResourceLocalService resourceLocalService) {
		this.resourceLocalService = resourceLocalService;
	}

	/**
	 * Gets the resource remote service.
	 *
	 * @return the resource remote service
	 */
	public ResourceService getResourceService() {
		return resourceService;
	}

	/**
	 * Sets the resource remote service.
	 *
	 * @param resourceService the resource remote service
	 */
	public void setResourceService(ResourceService resourceService) {
		this.resourceService = resourceService;
	}

	/**
	 * Gets the resource persistence.
	 *
	 * @return the resource persistence
	 */
	public ResourcePersistence getResourcePersistence() {
		return resourcePersistence;
	}

	/**
	 * Sets the resource persistence.
	 *
	 * @param resourcePersistence the resource persistence
	 */
	public void setResourcePersistence(ResourcePersistence resourcePersistence) {
		this.resourcePersistence = resourcePersistence;
	}

	/**
	 * Gets the resource finder.
	 *
	 * @return the resource finder
	 */
	public ResourceFinder getResourceFinder() {
		return resourceFinder;
	}

	/**
	 * Sets the resource finder.
	 *
	 * @param resourceFinder the resource finder
	 */
	public void setResourceFinder(ResourceFinder resourceFinder) {
		this.resourceFinder = resourceFinder;
	}

	/**
	 * Gets the user local service.
	 *
	 * @return the user local service
	 */
	public UserLocalService getUserLocalService() {
		return userLocalService;
	}

	/**
	 * Sets the user local service.
	 *
	 * @param userLocalService the user local service
	 */
	public void setUserLocalService(UserLocalService userLocalService) {
		this.userLocalService = userLocalService;
	}

	/**
	 * Gets the user remote service.
	 *
	 * @return the user remote service
	 */
	public UserService getUserService() {
		return userService;
	}

	/**
	 * Sets the user remote service.
	 *
	 * @param userService the user remote service
	 */
	public void setUserService(UserService userService) {
		this.userService = userService;
	}

	/**
	 * Gets the user persistence.
	 *
	 * @return the user persistence
	 */
	public UserPersistence getUserPersistence() {
		return userPersistence;
	}

	/**
	 * Sets the user persistence.
	 *
	 * @param userPersistence the user persistence
	 */
	public void setUserPersistence(UserPersistence userPersistence) {
		this.userPersistence = userPersistence;
	}

	/**
	 * Gets the user finder.
	 *
	 * @return the user finder
	 */
	public UserFinder getUserFinder() {
		return userFinder;
	}

	/**
	 * Sets the user finder.
	 *
	 * @param userFinder the user finder
	 */
	public void setUserFinder(UserFinder userFinder) {
		this.userFinder = userFinder;
	}

	/**
	 * Gets the d d m structure local service.
	 *
	 * @return the d d m structure local service
	 */
	public DDMStructureLocalService getDDMStructureLocalService() {
		return ddmStructureLocalService;
	}

	/**
	 * Sets the d d m structure local service.
	 *
	 * @param ddmStructureLocalService the d d m structure local service
	 */
	public void setDDMStructureLocalService(
		DDMStructureLocalService ddmStructureLocalService) {
		this.ddmStructureLocalService = ddmStructureLocalService;
	}

	/**
	 * Gets the d d m structure remote service.
	 *
	 * @return the d d m structure remote service
	 */
	public DDMStructureService getDDMStructureService() {
		return ddmStructureService;
	}

	/**
	 * Sets the d d m structure remote service.
	 *
	 * @param ddmStructureService the d d m structure remote service
	 */
	public void setDDMStructureService(DDMStructureService ddmStructureService) {
		this.ddmStructureService = ddmStructureService;
	}

	/**
	 * Gets the d d m structure persistence.
	 *
	 * @return the d d m structure persistence
	 */
	public DDMStructurePersistence getDDMStructurePersistence() {
		return ddmStructurePersistence;
	}

	/**
	 * Sets the d d m structure persistence.
	 *
	 * @param ddmStructurePersistence the d d m structure persistence
	 */
	public void setDDMStructurePersistence(
		DDMStructurePersistence ddmStructurePersistence) {
		this.ddmStructurePersistence = ddmStructurePersistence;
	}

	/**
	 * Gets the d d m structure finder.
	 *
	 * @return the d d m structure finder
	 */
	public DDMStructureFinder getDDMStructureFinder() {
		return ddmStructureFinder;
	}

	/**
	 * Sets the d d m structure finder.
	 *
	 * @param ddmStructureFinder the d d m structure finder
	 */
	public void setDDMStructureFinder(DDMStructureFinder ddmStructureFinder) {
		this.ddmStructureFinder = ddmStructureFinder;
	}

	/**
	 * Gets the Spring bean ID for this bean.
	 *
	 * @return the Spring bean ID for this bean
	 */
	public String getBeanIdentifier() {
		return _beanIdentifier;
	}

	/**
	 * Sets the Spring bean ID for this bean.
	 *
	 * @param beanIdentifier the Spring bean ID for this bean
	 */
	public void setBeanIdentifier(String beanIdentifier) {
		_beanIdentifier = beanIdentifier;
	}

	/**
	 * Performs an SQL query.
	 *
	 * @param sql the sql query to perform
	 */
	protected void runSQL(String sql) throws SystemException {
		try {
			DataSource dataSource = ddlEntryPersistence.getDataSource();

			SqlUpdate sqlUpdate = SqlUpdateFactoryUtil.getSqlUpdate(dataSource,
					sql, new int[0]);

			sqlUpdate.update();
		}
		catch (Exception e) {
			throw new SystemException(e);
		}
	}

	@BeanReference(type = DDLEntryLocalService.class)
	protected DDLEntryLocalService ddlEntryLocalService;
	@BeanReference(type = DDLEntryService.class)
	protected DDLEntryService ddlEntryService;
	@BeanReference(type = DDLEntryPersistence.class)
	protected DDLEntryPersistence ddlEntryPersistence;
	@BeanReference(type = DDLEntryFinder.class)
	protected DDLEntryFinder ddlEntryFinder;
	@BeanReference(type = DDLEntryItemLocalService.class)
	protected DDLEntryItemLocalService ddlEntryItemLocalService;
	@BeanReference(type = DDLEntryItemPersistence.class)
	protected DDLEntryItemPersistence ddlEntryItemPersistence;
	@BeanReference(type = CounterLocalService.class)
	protected CounterLocalService counterLocalService;
	@BeanReference(type = ResourceLocalService.class)
	protected ResourceLocalService resourceLocalService;
	@BeanReference(type = ResourceService.class)
	protected ResourceService resourceService;
	@BeanReference(type = ResourcePersistence.class)
	protected ResourcePersistence resourcePersistence;
	@BeanReference(type = ResourceFinder.class)
	protected ResourceFinder resourceFinder;
	@BeanReference(type = UserLocalService.class)
	protected UserLocalService userLocalService;
	@BeanReference(type = UserService.class)
	protected UserService userService;
	@BeanReference(type = UserPersistence.class)
	protected UserPersistence userPersistence;
	@BeanReference(type = UserFinder.class)
	protected UserFinder userFinder;
	@BeanReference(type = DDMStructureLocalService.class)
	protected DDMStructureLocalService ddmStructureLocalService;
	@BeanReference(type = DDMStructureService.class)
	protected DDMStructureService ddmStructureService;
	@BeanReference(type = DDMStructurePersistence.class)
	protected DDMStructurePersistence ddmStructurePersistence;
	@BeanReference(type = DDMStructureFinder.class)
	protected DDMStructureFinder ddmStructureFinder;
	private String _beanIdentifier;
}