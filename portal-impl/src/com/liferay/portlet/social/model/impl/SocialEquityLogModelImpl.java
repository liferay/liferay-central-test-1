/**
 * Copyright (c) 2000-2011 Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.liferay.portlet.social.model.impl;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;
import com.liferay.portal.util.PortalUtil;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;
import com.liferay.portlet.social.model.SocialEquityLog;
import com.liferay.portlet.social.model.SocialEquityLogModel;

import java.io.Serializable;

import java.sql.Types;

/**
 * The base model implementation for the SocialEquityLog service. Represents a row in the &quot;SocialEquityLog&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link com.liferay.portlet.social.model.SocialEquityLogModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link SocialEquityLogImpl}.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see SocialEquityLogImpl
 * @see com.liferay.portlet.social.model.SocialEquityLog
 * @see com.liferay.portlet.social.model.SocialEquityLogModel
 * @generated
 */
public class SocialEquityLogModelImpl extends BaseModelImpl<SocialEquityLog>
	implements SocialEquityLogModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a social equity log model instance should use the {@link com.liferay.portlet.social.model.SocialEquityLog} interface instead.
	 */
	public static final String TABLE_NAME = "SocialEquityLog";
	public static final Object[][] TABLE_COLUMNS = {
			{ "equityLogId", Types.BIGINT },
			{ "groupId", Types.BIGINT },
			{ "companyId", Types.BIGINT },
			{ "userId", Types.BIGINT },
			{ "assetEntryId", Types.BIGINT },
			{ "actionId", Types.VARCHAR },
			{ "actionDate", Types.INTEGER },
			{ "active_", Types.BOOLEAN },
			{ "expiration", Types.INTEGER },
			{ "type_", Types.INTEGER },
			{ "value", Types.INTEGER },
			{ "extraData", Types.VARCHAR }
		};
	public static final String TABLE_SQL_CREATE = "create table SocialEquityLog (equityLogId LONG not null primary key,groupId LONG,companyId LONG,userId LONG,assetEntryId LONG,actionId VARCHAR(75) null,actionDate INTEGER,active_ BOOLEAN,expiration INTEGER,type_ INTEGER,value INTEGER,extraData VARCHAR(255) null)";
	public static final String TABLE_SQL_DROP = "drop table SocialEquityLog";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.portal.util.PropsUtil.get(
				"value.object.entity.cache.enabled.com.liferay.portlet.social.model.SocialEquityLog"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.portal.util.PropsUtil.get(
				"value.object.finder.cache.enabled.com.liferay.portlet.social.model.SocialEquityLog"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.liferay.portal.util.PropsUtil.get(
				"value.object.column.bitmask.enabled.com.liferay.portlet.social.model.SocialEquityLog"),
			true);
	public static long ACTIONDATE_COLUMN_BITMASK = 1L;
	public static long ACTIONID_COLUMN_BITMASK = 2L;
	public static long ACTIVE_COLUMN_BITMASK = 4L;
	public static long ASSETENTRYID_COLUMN_BITMASK = 8L;
	public static long EXTRADATA_COLUMN_BITMASK = 16L;
	public static long TYPE_COLUMN_BITMASK = 32L;
	public static long USERID_COLUMN_BITMASK = 64L;
	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.portal.util.PropsUtil.get(
				"lock.expiration.time.com.liferay.portlet.social.model.SocialEquityLog"));

	public SocialEquityLogModelImpl() {
	}

	public long getPrimaryKey() {
		return _equityLogId;
	}

	public void setPrimaryKey(long primaryKey) {
		setEquityLogId(primaryKey);
	}

	public Serializable getPrimaryKeyObj() {
		return new Long(_equityLogId);
	}

	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	public Class<?> getModelClass() {
		return SocialEquityLog.class;
	}

	public String getModelClassName() {
		return SocialEquityLog.class.getName();
	}

	public long getEquityLogId() {
		return _equityLogId;
	}

	public void setEquityLogId(long equityLogId) {
		_equityLogId = equityLogId;
	}

	public long getGroupId() {
		return _groupId;
	}

	public void setGroupId(long groupId) {
		_groupId = groupId;
	}

	public long getCompanyId() {
		return _companyId;
	}

	public void setCompanyId(long companyId) {
		_companyId = companyId;
	}

	public long getUserId() {
		return _userId;
	}

	public void setUserId(long userId) {
		_columnBitmask |= USERID_COLUMN_BITMASK;

		if (!_setOriginalUserId) {
			_setOriginalUserId = true;

			_originalUserId = _userId;
		}

		_userId = userId;
	}

	public String getUserUuid() throws SystemException {
		return PortalUtil.getUserValue(getUserId(), "uuid", _userUuid);
	}

	public void setUserUuid(String userUuid) {
		_userUuid = userUuid;
	}

	public long getOriginalUserId() {
		return _originalUserId;
	}

	public long getAssetEntryId() {
		return _assetEntryId;
	}

	public void setAssetEntryId(long assetEntryId) {
		_columnBitmask |= ASSETENTRYID_COLUMN_BITMASK;

		if (!_setOriginalAssetEntryId) {
			_setOriginalAssetEntryId = true;

			_originalAssetEntryId = _assetEntryId;
		}

		_assetEntryId = assetEntryId;
	}

	public long getOriginalAssetEntryId() {
		return _originalAssetEntryId;
	}

	public String getActionId() {
		if (_actionId == null) {
			return StringPool.BLANK;
		}
		else {
			return _actionId;
		}
	}

	public void setActionId(String actionId) {
		_columnBitmask |= ACTIONID_COLUMN_BITMASK;

		if (_originalActionId == null) {
			_originalActionId = _actionId;
		}

		_actionId = actionId;
	}

	public String getOriginalActionId() {
		return GetterUtil.getString(_originalActionId);
	}

	public int getActionDate() {
		return _actionDate;
	}

	public void setActionDate(int actionDate) {
		_columnBitmask |= ACTIONDATE_COLUMN_BITMASK;

		if (!_setOriginalActionDate) {
			_setOriginalActionDate = true;

			_originalActionDate = _actionDate;
		}

		_actionDate = actionDate;
	}

	public int getOriginalActionDate() {
		return _originalActionDate;
	}

	public boolean getActive() {
		return _active;
	}

	public boolean isActive() {
		return _active;
	}

	public void setActive(boolean active) {
		_columnBitmask |= ACTIVE_COLUMN_BITMASK;

		if (!_setOriginalActive) {
			_setOriginalActive = true;

			_originalActive = _active;
		}

		_active = active;
	}

	public boolean getOriginalActive() {
		return _originalActive;
	}

	public int getExpiration() {
		return _expiration;
	}

	public void setExpiration(int expiration) {
		_expiration = expiration;
	}

	public int getType() {
		return _type;
	}

	public void setType(int type) {
		_columnBitmask |= TYPE_COLUMN_BITMASK;

		if (!_setOriginalType) {
			_setOriginalType = true;

			_originalType = _type;
		}

		_type = type;
	}

	public int getOriginalType() {
		return _originalType;
	}

	public int getValue() {
		return _value;
	}

	public void setValue(int value) {
		_value = value;
	}

	public String getExtraData() {
		if (_extraData == null) {
			return StringPool.BLANK;
		}
		else {
			return _extraData;
		}
	}

	public void setExtraData(String extraData) {
		_columnBitmask |= EXTRADATA_COLUMN_BITMASK;

		if (_originalExtraData == null) {
			_originalExtraData = _extraData;
		}

		_extraData = extraData;
	}

	public String getOriginalExtraData() {
		return GetterUtil.getString(_originalExtraData);
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public SocialEquityLog toEscapedModel() {
		if (_escapedModelProxy == null) {
			_escapedModelProxy = (SocialEquityLog)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelProxyInterfaces,
					new AutoEscapeBeanHandler(this));
		}

		return _escapedModelProxy;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		if (_expandoBridge == null) {
			_expandoBridge = ExpandoBridgeFactoryUtil.getExpandoBridge(getCompanyId(),
					SocialEquityLog.class.getName(), getPrimaryKey());
		}

		return _expandoBridge;
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		getExpandoBridge().setAttributes(serviceContext);
	}

	@Override
	public Object clone() {
		SocialEquityLogImpl socialEquityLogImpl = new SocialEquityLogImpl();

		socialEquityLogImpl.setEquityLogId(getEquityLogId());
		socialEquityLogImpl.setGroupId(getGroupId());
		socialEquityLogImpl.setCompanyId(getCompanyId());
		socialEquityLogImpl.setUserId(getUserId());
		socialEquityLogImpl.setAssetEntryId(getAssetEntryId());
		socialEquityLogImpl.setActionId(getActionId());
		socialEquityLogImpl.setActionDate(getActionDate());
		socialEquityLogImpl.setActive(getActive());
		socialEquityLogImpl.setExpiration(getExpiration());
		socialEquityLogImpl.setType(getType());
		socialEquityLogImpl.setValue(getValue());
		socialEquityLogImpl.setExtraData(getExtraData());

		socialEquityLogImpl.resetOriginalValues();

		return socialEquityLogImpl;
	}

	public int compareTo(SocialEquityLog socialEquityLog) {
		long primaryKey = socialEquityLog.getPrimaryKey();

		if (getPrimaryKey() < primaryKey) {
			return -1;
		}
		else if (getPrimaryKey() > primaryKey) {
			return 1;
		}
		else {
			return 0;
		}
	}

	@Override
	public boolean equals(Object obj) {
		if (obj == null) {
			return false;
		}

		SocialEquityLog socialEquityLog = null;

		try {
			socialEquityLog = (SocialEquityLog)obj;
		}
		catch (ClassCastException cce) {
			return false;
		}

		long primaryKey = socialEquityLog.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public void resetOriginalValues() {
		SocialEquityLogModelImpl socialEquityLogModelImpl = this;

		socialEquityLogModelImpl._originalUserId = socialEquityLogModelImpl._userId;

		socialEquityLogModelImpl._setOriginalUserId = false;

		socialEquityLogModelImpl._originalAssetEntryId = socialEquityLogModelImpl._assetEntryId;

		socialEquityLogModelImpl._setOriginalAssetEntryId = false;

		socialEquityLogModelImpl._originalActionId = socialEquityLogModelImpl._actionId;

		socialEquityLogModelImpl._originalActionDate = socialEquityLogModelImpl._actionDate;

		socialEquityLogModelImpl._setOriginalActionDate = false;

		socialEquityLogModelImpl._originalActive = socialEquityLogModelImpl._active;

		socialEquityLogModelImpl._setOriginalActive = false;

		socialEquityLogModelImpl._originalType = socialEquityLogModelImpl._type;

		socialEquityLogModelImpl._setOriginalType = false;

		socialEquityLogModelImpl._originalExtraData = socialEquityLogModelImpl._extraData;

		socialEquityLogModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<SocialEquityLog> toCacheModel() {
		SocialEquityLogCacheModel socialEquityLogCacheModel = new SocialEquityLogCacheModel();

		socialEquityLogCacheModel.equityLogId = getEquityLogId();

		socialEquityLogCacheModel.groupId = getGroupId();

		socialEquityLogCacheModel.companyId = getCompanyId();

		socialEquityLogCacheModel.userId = getUserId();

		socialEquityLogCacheModel.assetEntryId = getAssetEntryId();

		socialEquityLogCacheModel.actionId = getActionId();

		String actionId = socialEquityLogCacheModel.actionId;

		if ((actionId != null) && (actionId.length() == 0)) {
			socialEquityLogCacheModel.actionId = null;
		}

		socialEquityLogCacheModel.actionDate = getActionDate();

		socialEquityLogCacheModel.active = getActive();

		socialEquityLogCacheModel.expiration = getExpiration();

		socialEquityLogCacheModel.type = getType();

		socialEquityLogCacheModel.value = getValue();

		socialEquityLogCacheModel.extraData = getExtraData();

		String extraData = socialEquityLogCacheModel.extraData;

		if ((extraData != null) && (extraData.length() == 0)) {
			socialEquityLogCacheModel.extraData = null;
		}

		return socialEquityLogCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(25);

		sb.append("{equityLogId=");
		sb.append(getEquityLogId());
		sb.append(", groupId=");
		sb.append(getGroupId());
		sb.append(", companyId=");
		sb.append(getCompanyId());
		sb.append(", userId=");
		sb.append(getUserId());
		sb.append(", assetEntryId=");
		sb.append(getAssetEntryId());
		sb.append(", actionId=");
		sb.append(getActionId());
		sb.append(", actionDate=");
		sb.append(getActionDate());
		sb.append(", active=");
		sb.append(getActive());
		sb.append(", expiration=");
		sb.append(getExpiration());
		sb.append(", type=");
		sb.append(getType());
		sb.append(", value=");
		sb.append(getValue());
		sb.append(", extraData=");
		sb.append(getExtraData());
		sb.append("}");

		return sb.toString();
	}

	public String toXmlString() {
		StringBundler sb = new StringBundler(40);

		sb.append("<model><model-name>");
		sb.append("com.liferay.portlet.social.model.SocialEquityLog");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>equityLogId</column-name><column-value><![CDATA[");
		sb.append(getEquityLogId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>groupId</column-name><column-value><![CDATA[");
		sb.append(getGroupId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>companyId</column-name><column-value><![CDATA[");
		sb.append(getCompanyId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userId</column-name><column-value><![CDATA[");
		sb.append(getUserId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>assetEntryId</column-name><column-value><![CDATA[");
		sb.append(getAssetEntryId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>actionId</column-name><column-value><![CDATA[");
		sb.append(getActionId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>actionDate</column-name><column-value><![CDATA[");
		sb.append(getActionDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>active</column-name><column-value><![CDATA[");
		sb.append(getActive());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>expiration</column-name><column-value><![CDATA[");
		sb.append(getExpiration());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>type</column-name><column-value><![CDATA[");
		sb.append(getType());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>value</column-name><column-value><![CDATA[");
		sb.append(getValue());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>extraData</column-name><column-value><![CDATA[");
		sb.append(getExtraData());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = SocialEquityLog.class.getClassLoader();
	private static Class<?>[] _escapedModelProxyInterfaces = new Class[] {
			SocialEquityLog.class
		};
	private long _equityLogId;
	private long _groupId;
	private long _companyId;
	private long _userId;
	private String _userUuid;
	private long _originalUserId;
	private boolean _setOriginalUserId;
	private long _assetEntryId;
	private long _originalAssetEntryId;
	private boolean _setOriginalAssetEntryId;
	private String _actionId;
	private String _originalActionId;
	private int _actionDate;
	private int _originalActionDate;
	private boolean _setOriginalActionDate;
	private boolean _active;
	private boolean _originalActive;
	private boolean _setOriginalActive;
	private int _expiration;
	private int _type;
	private int _originalType;
	private boolean _setOriginalType;
	private int _value;
	private String _extraData;
	private String _originalExtraData;
	private transient ExpandoBridge _expandoBridge;
	private long _columnBitmask;
	private SocialEquityLog _escapedModelProxy;
}