/**
 * Copyright (c) 2000-2011 Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.liferay.portlet.documentlibrary.service.base;

import com.liferay.counter.service.CounterLocalService;

import com.liferay.portal.kernel.bean.BeanReference;
import com.liferay.portal.kernel.bean.IdentifiableBean;
import com.liferay.portal.kernel.dao.jdbc.SqlUpdate;
import com.liferay.portal.kernel.dao.jdbc.SqlUpdateFactoryUtil;
import com.liferay.portal.kernel.dao.orm.DynamicQuery;
import com.liferay.portal.kernel.exception.PortalException;
import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.kernel.util.OrderByComparator;
import com.liferay.portal.service.ResourceLocalService;
import com.liferay.portal.service.ResourceService;
import com.liferay.portal.service.UserLocalService;
import com.liferay.portal.service.UserService;
import com.liferay.portal.service.persistence.ResourceFinder;
import com.liferay.portal.service.persistence.ResourcePersistence;
import com.liferay.portal.service.persistence.UserFinder;
import com.liferay.portal.service.persistence.UserPersistence;

import com.liferay.portlet.documentlibrary.model.DLDocumentType;
import com.liferay.portlet.documentlibrary.service.DLAppHelperLocalService;
import com.liferay.portlet.documentlibrary.service.DLAppLocalService;
import com.liferay.portlet.documentlibrary.service.DLAppService;
import com.liferay.portlet.documentlibrary.service.DLDocumentMetadataSetLocalService;
import com.liferay.portlet.documentlibrary.service.DLDocumentTypeLocalService;
import com.liferay.portlet.documentlibrary.service.DLDocumentTypeService;
import com.liferay.portlet.documentlibrary.service.DLFileEntryLocalService;
import com.liferay.portlet.documentlibrary.service.DLFileEntryService;
import com.liferay.portlet.documentlibrary.service.DLFileRankLocalService;
import com.liferay.portlet.documentlibrary.service.DLFileShortcutLocalService;
import com.liferay.portlet.documentlibrary.service.DLFileShortcutService;
import com.liferay.portlet.documentlibrary.service.DLFolderLocalService;
import com.liferay.portlet.documentlibrary.service.DLFolderService;
import com.liferay.portlet.documentlibrary.service.persistence.DLDocumentMetadataSetPersistence;
import com.liferay.portlet.documentlibrary.service.persistence.DLDocumentTypeFinder;
import com.liferay.portlet.documentlibrary.service.persistence.DLDocumentTypePersistence;
import com.liferay.portlet.documentlibrary.service.persistence.DLFileEntryFinder;
import com.liferay.portlet.documentlibrary.service.persistence.DLFileEntryPersistence;
import com.liferay.portlet.documentlibrary.service.persistence.DLFileRankFinder;
import com.liferay.portlet.documentlibrary.service.persistence.DLFileRankPersistence;
import com.liferay.portlet.documentlibrary.service.persistence.DLFileShortcutPersistence;
import com.liferay.portlet.documentlibrary.service.persistence.DLFileVersionPersistence;
import com.liferay.portlet.documentlibrary.service.persistence.DLFolderFinder;
import com.liferay.portlet.documentlibrary.service.persistence.DLFolderPersistence;
import com.liferay.portlet.dynamicdatamapping.service.DDMStructureLocalService;
import com.liferay.portlet.dynamicdatamapping.service.DDMStructureService;
import com.liferay.portlet.dynamicdatamapping.service.persistence.DDMStructureFinder;
import com.liferay.portlet.dynamicdatamapping.service.persistence.DDMStructurePersistence;

import java.util.List;

import javax.sql.DataSource;

/**
 * The base implementation of the d l document type local service.
 *
 * <p>
 * This implementation exists only as a container for the default service methods generated by ServiceBuilder. All custom service methods should be put in {@link com.liferay.portlet.documentlibrary.service.impl.DLDocumentTypeLocalServiceImpl}.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see com.liferay.portlet.documentlibrary.service.impl.DLDocumentTypeLocalServiceImpl
 * @see com.liferay.portlet.documentlibrary.service.DLDocumentTypeLocalServiceUtil
 * @generated
 */
public abstract class DLDocumentTypeLocalServiceBaseImpl
	implements DLDocumentTypeLocalService, IdentifiableBean {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. Always use {@link com.liferay.portlet.documentlibrary.service.DLDocumentTypeLocalServiceUtil} to access the d l document type local service.
	 */

	/**
	 * Adds the d l document type to the database. Also notifies the appropriate model listeners.
	 *
	 * @param dlDocumentType the d l document type to add
	 * @return the d l document type that was added
	 * @throws SystemException if a system exception occurred
	 */
	public DLDocumentType addDLDocumentType(DLDocumentType dlDocumentType)
		throws SystemException {
		dlDocumentType.setNew(true);

		return dlDocumentTypePersistence.update(dlDocumentType, false);
	}

	/**
	 * Creates a new d l document type with the primary key. Does not add the d l document type to the database.
	 *
	 * @param documentTypeId the primary key for the new d l document type
	 * @return the new d l document type
	 */
	public DLDocumentType createDLDocumentType(long documentTypeId) {
		return dlDocumentTypePersistence.create(documentTypeId);
	}

	/**
	 * Deletes the d l document type with the primary key from the database. Also notifies the appropriate model listeners.
	 *
	 * @param documentTypeId the primary key of the d l document type to delete
	 * @throws PortalException if a d l document type with the primary key could not be found
	 * @throws SystemException if a system exception occurred
	 */
	public void deleteDLDocumentType(long documentTypeId)
		throws PortalException, SystemException {
		dlDocumentTypePersistence.remove(documentTypeId);
	}

	/**
	 * Deletes the d l document type from the database. Also notifies the appropriate model listeners.
	 *
	 * @param dlDocumentType the d l document type to delete
	 * @throws SystemException if a system exception occurred
	 */
	public void deleteDLDocumentType(DLDocumentType dlDocumentType)
		throws SystemException {
		dlDocumentTypePersistence.remove(dlDocumentType);
	}

	/**
	 * Performs a dynamic query on the database and returns the matching rows.
	 *
	 * @param dynamicQuery the dynamic query to search with
	 * @return the matching rows
	 * @throws SystemException if a system exception occurred
	 */
	@SuppressWarnings("rawtypes")
	public List dynamicQuery(DynamicQuery dynamicQuery)
		throws SystemException {
		return dlDocumentTypePersistence.findWithDynamicQuery(dynamicQuery);
	}

	/**
	 * Performs a dynamic query on the database and returns a range of the matching rows.
	 *
	 * <p>
	 * Useful when paginating results. Returns a maximum of <code>end - start</code> instances. <code>start</code> and <code>end</code> are not primary keys, they are indexes in the result set. Thus, <code>0</code> refers to the first result in the set. Setting both <code>start</code> and <code>end</code> to {@link com.liferay.portal.kernel.dao.orm.QueryUtil#ALL_POS} will return the full result set.
	 * </p>
	 *
	 * @param dynamicQuery the dynamic query to search with
	 * @param start the lower bound of the range of model instances to return
	 * @param end the upper bound of the range of model instances to return (not inclusive)
	 * @return the range of matching rows
	 * @throws SystemException if a system exception occurred
	 */
	@SuppressWarnings("rawtypes")
	public List dynamicQuery(DynamicQuery dynamicQuery, int start, int end)
		throws SystemException {
		return dlDocumentTypePersistence.findWithDynamicQuery(dynamicQuery,
			start, end);
	}

	/**
	 * Performs a dynamic query on the database and returns an ordered range of the matching rows.
	 *
	 * <p>
	 * Useful when paginating results. Returns a maximum of <code>end - start</code> instances. <code>start</code> and <code>end</code> are not primary keys, they are indexes in the result set. Thus, <code>0</code> refers to the first result in the set. Setting both <code>start</code> and <code>end</code> to {@link com.liferay.portal.kernel.dao.orm.QueryUtil#ALL_POS} will return the full result set.
	 * </p>
	 *
	 * @param dynamicQuery the dynamic query to search with
	 * @param start the lower bound of the range of model instances to return
	 * @param end the upper bound of the range of model instances to return (not inclusive)
	 * @param orderByComparator the comparator to order the results by (optionally <code>null</code>)
	 * @return the ordered range of matching rows
	 * @throws SystemException if a system exception occurred
	 */
	@SuppressWarnings("rawtypes")
	public List dynamicQuery(DynamicQuery dynamicQuery, int start, int end,
		OrderByComparator orderByComparator) throws SystemException {
		return dlDocumentTypePersistence.findWithDynamicQuery(dynamicQuery,
			start, end, orderByComparator);
	}

	/**
	 * Counts the number of rows that match the dynamic query.
	 *
	 * @param dynamicQuery the dynamic query to search with
	 * @return the number of rows that match the dynamic query
	 * @throws SystemException if a system exception occurred
	 */
	public long dynamicQueryCount(DynamicQuery dynamicQuery)
		throws SystemException {
		return dlDocumentTypePersistence.countWithDynamicQuery(dynamicQuery);
	}

	/**
	 * Gets the d l document type with the primary key.
	 *
	 * @param documentTypeId the primary key of the d l document type to get
	 * @return the d l document type
	 * @throws PortalException if a d l document type with the primary key could not be found
	 * @throws SystemException if a system exception occurred
	 */
	public DLDocumentType getDLDocumentType(long documentTypeId)
		throws PortalException, SystemException {
		return dlDocumentTypePersistence.findByPrimaryKey(documentTypeId);
	}

	/**
	 * Gets a range of all the d l document types.
	 *
	 * <p>
	 * Useful when paginating results. Returns a maximum of <code>end - start</code> instances. <code>start</code> and <code>end</code> are not primary keys, they are indexes in the result set. Thus, <code>0</code> refers to the first result in the set. Setting both <code>start</code> and <code>end</code> to {@link com.liferay.portal.kernel.dao.orm.QueryUtil#ALL_POS} will return the full result set.
	 * </p>
	 *
	 * @param start the lower bound of the range of d l document types to return
	 * @param end the upper bound of the range of d l document types to return (not inclusive)
	 * @return the range of d l document types
	 * @throws SystemException if a system exception occurred
	 */
	public List<DLDocumentType> getDLDocumentTypes(int start, int end)
		throws SystemException {
		return dlDocumentTypePersistence.findAll(start, end);
	}

	/**
	 * Gets the number of d l document types.
	 *
	 * @return the number of d l document types
	 * @throws SystemException if a system exception occurred
	 */
	public int getDLDocumentTypesCount() throws SystemException {
		return dlDocumentTypePersistence.countAll();
	}

	/**
	 * Updates the d l document type in the database. Also notifies the appropriate model listeners.
	 *
	 * @param dlDocumentType the d l document type to update
	 * @return the d l document type that was updated
	 * @throws SystemException if a system exception occurred
	 */
	public DLDocumentType updateDLDocumentType(DLDocumentType dlDocumentType)
		throws SystemException {
		dlDocumentType.setNew(false);

		return dlDocumentTypePersistence.update(dlDocumentType, true);
	}

	/**
	 * Updates the d l document type in the database. Also notifies the appropriate model listeners.
	 *
	 * @param dlDocumentType the d l document type to update
	 * @param merge whether to merge the d l document type with the current session. See {@link com.liferay.portal.service.persistence.BatchSession#update(com.liferay.portal.kernel.dao.orm.Session, com.liferay.portal.model.BaseModel, boolean)} for an explanation.
	 * @return the d l document type that was updated
	 * @throws SystemException if a system exception occurred
	 */
	public DLDocumentType updateDLDocumentType(DLDocumentType dlDocumentType,
		boolean merge) throws SystemException {
		dlDocumentType.setNew(false);

		return dlDocumentTypePersistence.update(dlDocumentType, merge);
	}

	/**
	 * Gets the d l app local service.
	 *
	 * @return the d l app local service
	 */
	public DLAppLocalService getDLAppLocalService() {
		return dlAppLocalService;
	}

	/**
	 * Sets the d l app local service.
	 *
	 * @param dlAppLocalService the d l app local service
	 */
	public void setDLAppLocalService(DLAppLocalService dlAppLocalService) {
		this.dlAppLocalService = dlAppLocalService;
	}

	/**
	 * Gets the d l app remote service.
	 *
	 * @return the d l app remote service
	 */
	public DLAppService getDLAppService() {
		return dlAppService;
	}

	/**
	 * Sets the d l app remote service.
	 *
	 * @param dlAppService the d l app remote service
	 */
	public void setDLAppService(DLAppService dlAppService) {
		this.dlAppService = dlAppService;
	}

	/**
	 * Gets the d l app helper local service.
	 *
	 * @return the d l app helper local service
	 */
	public DLAppHelperLocalService getDLAppHelperLocalService() {
		return dlAppHelperLocalService;
	}

	/**
	 * Sets the d l app helper local service.
	 *
	 * @param dlAppHelperLocalService the d l app helper local service
	 */
	public void setDLAppHelperLocalService(
		DLAppHelperLocalService dlAppHelperLocalService) {
		this.dlAppHelperLocalService = dlAppHelperLocalService;
	}

	/**
	 * Gets the d l document metadata set local service.
	 *
	 * @return the d l document metadata set local service
	 */
	public DLDocumentMetadataSetLocalService getDLDocumentMetadataSetLocalService() {
		return dlDocumentMetadataSetLocalService;
	}

	/**
	 * Sets the d l document metadata set local service.
	 *
	 * @param dlDocumentMetadataSetLocalService the d l document metadata set local service
	 */
	public void setDLDocumentMetadataSetLocalService(
		DLDocumentMetadataSetLocalService dlDocumentMetadataSetLocalService) {
		this.dlDocumentMetadataSetLocalService = dlDocumentMetadataSetLocalService;
	}

	/**
	 * Gets the d l document metadata set persistence.
	 *
	 * @return the d l document metadata set persistence
	 */
	public DLDocumentMetadataSetPersistence getDLDocumentMetadataSetPersistence() {
		return dlDocumentMetadataSetPersistence;
	}

	/**
	 * Sets the d l document metadata set persistence.
	 *
	 * @param dlDocumentMetadataSetPersistence the d l document metadata set persistence
	 */
	public void setDLDocumentMetadataSetPersistence(
		DLDocumentMetadataSetPersistence dlDocumentMetadataSetPersistence) {
		this.dlDocumentMetadataSetPersistence = dlDocumentMetadataSetPersistence;
	}

	/**
	 * Gets the d l document type local service.
	 *
	 * @return the d l document type local service
	 */
	public DLDocumentTypeLocalService getDLDocumentTypeLocalService() {
		return dlDocumentTypeLocalService;
	}

	/**
	 * Sets the d l document type local service.
	 *
	 * @param dlDocumentTypeLocalService the d l document type local service
	 */
	public void setDLDocumentTypeLocalService(
		DLDocumentTypeLocalService dlDocumentTypeLocalService) {
		this.dlDocumentTypeLocalService = dlDocumentTypeLocalService;
	}

	/**
	 * Gets the d l document type remote service.
	 *
	 * @return the d l document type remote service
	 */
	public DLDocumentTypeService getDLDocumentTypeService() {
		return dlDocumentTypeService;
	}

	/**
	 * Sets the d l document type remote service.
	 *
	 * @param dlDocumentTypeService the d l document type remote service
	 */
	public void setDLDocumentTypeService(
		DLDocumentTypeService dlDocumentTypeService) {
		this.dlDocumentTypeService = dlDocumentTypeService;
	}

	/**
	 * Gets the d l document type persistence.
	 *
	 * @return the d l document type persistence
	 */
	public DLDocumentTypePersistence getDLDocumentTypePersistence() {
		return dlDocumentTypePersistence;
	}

	/**
	 * Sets the d l document type persistence.
	 *
	 * @param dlDocumentTypePersistence the d l document type persistence
	 */
	public void setDLDocumentTypePersistence(
		DLDocumentTypePersistence dlDocumentTypePersistence) {
		this.dlDocumentTypePersistence = dlDocumentTypePersistence;
	}

	/**
	 * Gets the d l document type finder.
	 *
	 * @return the d l document type finder
	 */
	public DLDocumentTypeFinder getDLDocumentTypeFinder() {
		return dlDocumentTypeFinder;
	}

	/**
	 * Sets the d l document type finder.
	 *
	 * @param dlDocumentTypeFinder the d l document type finder
	 */
	public void setDLDocumentTypeFinder(
		DLDocumentTypeFinder dlDocumentTypeFinder) {
		this.dlDocumentTypeFinder = dlDocumentTypeFinder;
	}

	/**
	 * Gets the d l file entry local service.
	 *
	 * @return the d l file entry local service
	 */
	public DLFileEntryLocalService getDLFileEntryLocalService() {
		return dlFileEntryLocalService;
	}

	/**
	 * Sets the d l file entry local service.
	 *
	 * @param dlFileEntryLocalService the d l file entry local service
	 */
	public void setDLFileEntryLocalService(
		DLFileEntryLocalService dlFileEntryLocalService) {
		this.dlFileEntryLocalService = dlFileEntryLocalService;
	}

	/**
	 * Gets the d l file entry remote service.
	 *
	 * @return the d l file entry remote service
	 */
	public DLFileEntryService getDLFileEntryService() {
		return dlFileEntryService;
	}

	/**
	 * Sets the d l file entry remote service.
	 *
	 * @param dlFileEntryService the d l file entry remote service
	 */
	public void setDLFileEntryService(DLFileEntryService dlFileEntryService) {
		this.dlFileEntryService = dlFileEntryService;
	}

	/**
	 * Gets the d l file entry persistence.
	 *
	 * @return the d l file entry persistence
	 */
	public DLFileEntryPersistence getDLFileEntryPersistence() {
		return dlFileEntryPersistence;
	}

	/**
	 * Sets the d l file entry persistence.
	 *
	 * @param dlFileEntryPersistence the d l file entry persistence
	 */
	public void setDLFileEntryPersistence(
		DLFileEntryPersistence dlFileEntryPersistence) {
		this.dlFileEntryPersistence = dlFileEntryPersistence;
	}

	/**
	 * Gets the d l file entry finder.
	 *
	 * @return the d l file entry finder
	 */
	public DLFileEntryFinder getDLFileEntryFinder() {
		return dlFileEntryFinder;
	}

	/**
	 * Sets the d l file entry finder.
	 *
	 * @param dlFileEntryFinder the d l file entry finder
	 */
	public void setDLFileEntryFinder(DLFileEntryFinder dlFileEntryFinder) {
		this.dlFileEntryFinder = dlFileEntryFinder;
	}

	/**
	 * Gets the d l file rank local service.
	 *
	 * @return the d l file rank local service
	 */
	public DLFileRankLocalService getDLFileRankLocalService() {
		return dlFileRankLocalService;
	}

	/**
	 * Sets the d l file rank local service.
	 *
	 * @param dlFileRankLocalService the d l file rank local service
	 */
	public void setDLFileRankLocalService(
		DLFileRankLocalService dlFileRankLocalService) {
		this.dlFileRankLocalService = dlFileRankLocalService;
	}

	/**
	 * Gets the d l file rank persistence.
	 *
	 * @return the d l file rank persistence
	 */
	public DLFileRankPersistence getDLFileRankPersistence() {
		return dlFileRankPersistence;
	}

	/**
	 * Sets the d l file rank persistence.
	 *
	 * @param dlFileRankPersistence the d l file rank persistence
	 */
	public void setDLFileRankPersistence(
		DLFileRankPersistence dlFileRankPersistence) {
		this.dlFileRankPersistence = dlFileRankPersistence;
	}

	/**
	 * Gets the d l file rank finder.
	 *
	 * @return the d l file rank finder
	 */
	public DLFileRankFinder getDLFileRankFinder() {
		return dlFileRankFinder;
	}

	/**
	 * Sets the d l file rank finder.
	 *
	 * @param dlFileRankFinder the d l file rank finder
	 */
	public void setDLFileRankFinder(DLFileRankFinder dlFileRankFinder) {
		this.dlFileRankFinder = dlFileRankFinder;
	}

	/**
	 * Gets the d l file shortcut local service.
	 *
	 * @return the d l file shortcut local service
	 */
	public DLFileShortcutLocalService getDLFileShortcutLocalService() {
		return dlFileShortcutLocalService;
	}

	/**
	 * Sets the d l file shortcut local service.
	 *
	 * @param dlFileShortcutLocalService the d l file shortcut local service
	 */
	public void setDLFileShortcutLocalService(
		DLFileShortcutLocalService dlFileShortcutLocalService) {
		this.dlFileShortcutLocalService = dlFileShortcutLocalService;
	}

	/**
	 * Gets the d l file shortcut remote service.
	 *
	 * @return the d l file shortcut remote service
	 */
	public DLFileShortcutService getDLFileShortcutService() {
		return dlFileShortcutService;
	}

	/**
	 * Sets the d l file shortcut remote service.
	 *
	 * @param dlFileShortcutService the d l file shortcut remote service
	 */
	public void setDLFileShortcutService(
		DLFileShortcutService dlFileShortcutService) {
		this.dlFileShortcutService = dlFileShortcutService;
	}

	/**
	 * Gets the d l file shortcut persistence.
	 *
	 * @return the d l file shortcut persistence
	 */
	public DLFileShortcutPersistence getDLFileShortcutPersistence() {
		return dlFileShortcutPersistence;
	}

	/**
	 * Sets the d l file shortcut persistence.
	 *
	 * @param dlFileShortcutPersistence the d l file shortcut persistence
	 */
	public void setDLFileShortcutPersistence(
		DLFileShortcutPersistence dlFileShortcutPersistence) {
		this.dlFileShortcutPersistence = dlFileShortcutPersistence;
	}

	/**
	 * Gets the d l file version persistence.
	 *
	 * @return the d l file version persistence
	 */
	public DLFileVersionPersistence getDLFileVersionPersistence() {
		return dlFileVersionPersistence;
	}

	/**
	 * Sets the d l file version persistence.
	 *
	 * @param dlFileVersionPersistence the d l file version persistence
	 */
	public void setDLFileVersionPersistence(
		DLFileVersionPersistence dlFileVersionPersistence) {
		this.dlFileVersionPersistence = dlFileVersionPersistence;
	}

	/**
	 * Gets the d l folder local service.
	 *
	 * @return the d l folder local service
	 */
	public DLFolderLocalService getDLFolderLocalService() {
		return dlFolderLocalService;
	}

	/**
	 * Sets the d l folder local service.
	 *
	 * @param dlFolderLocalService the d l folder local service
	 */
	public void setDLFolderLocalService(
		DLFolderLocalService dlFolderLocalService) {
		this.dlFolderLocalService = dlFolderLocalService;
	}

	/**
	 * Gets the d l folder remote service.
	 *
	 * @return the d l folder remote service
	 */
	public DLFolderService getDLFolderService() {
		return dlFolderService;
	}

	/**
	 * Sets the d l folder remote service.
	 *
	 * @param dlFolderService the d l folder remote service
	 */
	public void setDLFolderService(DLFolderService dlFolderService) {
		this.dlFolderService = dlFolderService;
	}

	/**
	 * Gets the d l folder persistence.
	 *
	 * @return the d l folder persistence
	 */
	public DLFolderPersistence getDLFolderPersistence() {
		return dlFolderPersistence;
	}

	/**
	 * Sets the d l folder persistence.
	 *
	 * @param dlFolderPersistence the d l folder persistence
	 */
	public void setDLFolderPersistence(DLFolderPersistence dlFolderPersistence) {
		this.dlFolderPersistence = dlFolderPersistence;
	}

	/**
	 * Gets the d l folder finder.
	 *
	 * @return the d l folder finder
	 */
	public DLFolderFinder getDLFolderFinder() {
		return dlFolderFinder;
	}

	/**
	 * Sets the d l folder finder.
	 *
	 * @param dlFolderFinder the d l folder finder
	 */
	public void setDLFolderFinder(DLFolderFinder dlFolderFinder) {
		this.dlFolderFinder = dlFolderFinder;
	}

	/**
	 * Gets the counter local service.
	 *
	 * @return the counter local service
	 */
	public CounterLocalService getCounterLocalService() {
		return counterLocalService;
	}

	/**
	 * Sets the counter local service.
	 *
	 * @param counterLocalService the counter local service
	 */
	public void setCounterLocalService(CounterLocalService counterLocalService) {
		this.counterLocalService = counterLocalService;
	}

	/**
	 * Gets the resource local service.
	 *
	 * @return the resource local service
	 */
	public ResourceLocalService getResourceLocalService() {
		return resourceLocalService;
	}

	/**
	 * Sets the resource local service.
	 *
	 * @param resourceLocalService the resource local service
	 */
	public void setResourceLocalService(
		ResourceLocalService resourceLocalService) {
		this.resourceLocalService = resourceLocalService;
	}

	/**
	 * Gets the resource remote service.
	 *
	 * @return the resource remote service
	 */
	public ResourceService getResourceService() {
		return resourceService;
	}

	/**
	 * Sets the resource remote service.
	 *
	 * @param resourceService the resource remote service
	 */
	public void setResourceService(ResourceService resourceService) {
		this.resourceService = resourceService;
	}

	/**
	 * Gets the resource persistence.
	 *
	 * @return the resource persistence
	 */
	public ResourcePersistence getResourcePersistence() {
		return resourcePersistence;
	}

	/**
	 * Sets the resource persistence.
	 *
	 * @param resourcePersistence the resource persistence
	 */
	public void setResourcePersistence(ResourcePersistence resourcePersistence) {
		this.resourcePersistence = resourcePersistence;
	}

	/**
	 * Gets the resource finder.
	 *
	 * @return the resource finder
	 */
	public ResourceFinder getResourceFinder() {
		return resourceFinder;
	}

	/**
	 * Sets the resource finder.
	 *
	 * @param resourceFinder the resource finder
	 */
	public void setResourceFinder(ResourceFinder resourceFinder) {
		this.resourceFinder = resourceFinder;
	}

	/**
	 * Gets the user local service.
	 *
	 * @return the user local service
	 */
	public UserLocalService getUserLocalService() {
		return userLocalService;
	}

	/**
	 * Sets the user local service.
	 *
	 * @param userLocalService the user local service
	 */
	public void setUserLocalService(UserLocalService userLocalService) {
		this.userLocalService = userLocalService;
	}

	/**
	 * Gets the user remote service.
	 *
	 * @return the user remote service
	 */
	public UserService getUserService() {
		return userService;
	}

	/**
	 * Sets the user remote service.
	 *
	 * @param userService the user remote service
	 */
	public void setUserService(UserService userService) {
		this.userService = userService;
	}

	/**
	 * Gets the user persistence.
	 *
	 * @return the user persistence
	 */
	public UserPersistence getUserPersistence() {
		return userPersistence;
	}

	/**
	 * Sets the user persistence.
	 *
	 * @param userPersistence the user persistence
	 */
	public void setUserPersistence(UserPersistence userPersistence) {
		this.userPersistence = userPersistence;
	}

	/**
	 * Gets the user finder.
	 *
	 * @return the user finder
	 */
	public UserFinder getUserFinder() {
		return userFinder;
	}

	/**
	 * Sets the user finder.
	 *
	 * @param userFinder the user finder
	 */
	public void setUserFinder(UserFinder userFinder) {
		this.userFinder = userFinder;
	}

	/**
	 * Gets the d d m structure local service.
	 *
	 * @return the d d m structure local service
	 */
	public DDMStructureLocalService getDDMStructureLocalService() {
		return ddmStructureLocalService;
	}

	/**
	 * Sets the d d m structure local service.
	 *
	 * @param ddmStructureLocalService the d d m structure local service
	 */
	public void setDDMStructureLocalService(
		DDMStructureLocalService ddmStructureLocalService) {
		this.ddmStructureLocalService = ddmStructureLocalService;
	}

	/**
	 * Gets the d d m structure remote service.
	 *
	 * @return the d d m structure remote service
	 */
	public DDMStructureService getDDMStructureService() {
		return ddmStructureService;
	}

	/**
	 * Sets the d d m structure remote service.
	 *
	 * @param ddmStructureService the d d m structure remote service
	 */
	public void setDDMStructureService(DDMStructureService ddmStructureService) {
		this.ddmStructureService = ddmStructureService;
	}

	/**
	 * Gets the d d m structure persistence.
	 *
	 * @return the d d m structure persistence
	 */
	public DDMStructurePersistence getDDMStructurePersistence() {
		return ddmStructurePersistence;
	}

	/**
	 * Sets the d d m structure persistence.
	 *
	 * @param ddmStructurePersistence the d d m structure persistence
	 */
	public void setDDMStructurePersistence(
		DDMStructurePersistence ddmStructurePersistence) {
		this.ddmStructurePersistence = ddmStructurePersistence;
	}

	/**
	 * Gets the d d m structure finder.
	 *
	 * @return the d d m structure finder
	 */
	public DDMStructureFinder getDDMStructureFinder() {
		return ddmStructureFinder;
	}

	/**
	 * Sets the d d m structure finder.
	 *
	 * @param ddmStructureFinder the d d m structure finder
	 */
	public void setDDMStructureFinder(DDMStructureFinder ddmStructureFinder) {
		this.ddmStructureFinder = ddmStructureFinder;
	}

	/**
	 * Gets the Spring bean ID for this bean.
	 *
	 * @return the Spring bean ID for this bean
	 */
	public String getBeanIdentifier() {
		return _beanIdentifier;
	}

	/**
	 * Sets the Spring bean ID for this bean.
	 *
	 * @param beanIdentifier the Spring bean ID for this bean
	 */
	public void setBeanIdentifier(String beanIdentifier) {
		_beanIdentifier = beanIdentifier;
	}

	/**
	 * Performs an SQL query.
	 *
	 * @param sql the sql query to perform
	 */
	protected void runSQL(String sql) throws SystemException {
		try {
			DataSource dataSource = dlDocumentTypePersistence.getDataSource();

			SqlUpdate sqlUpdate = SqlUpdateFactoryUtil.getSqlUpdate(dataSource,
					sql, new int[0]);

			sqlUpdate.update();
		}
		catch (Exception e) {
			throw new SystemException(e);
		}
	}

	@BeanReference(type = DLAppLocalService.class)
	protected DLAppLocalService dlAppLocalService;
	@BeanReference(type = DLAppService.class)
	protected DLAppService dlAppService;
	@BeanReference(type = DLAppHelperLocalService.class)
	protected DLAppHelperLocalService dlAppHelperLocalService;
	@BeanReference(type = DLDocumentMetadataSetLocalService.class)
	protected DLDocumentMetadataSetLocalService dlDocumentMetadataSetLocalService;
	@BeanReference(type = DLDocumentMetadataSetPersistence.class)
	protected DLDocumentMetadataSetPersistence dlDocumentMetadataSetPersistence;
	@BeanReference(type = DLDocumentTypeLocalService.class)
	protected DLDocumentTypeLocalService dlDocumentTypeLocalService;
	@BeanReference(type = DLDocumentTypeService.class)
	protected DLDocumentTypeService dlDocumentTypeService;
	@BeanReference(type = DLDocumentTypePersistence.class)
	protected DLDocumentTypePersistence dlDocumentTypePersistence;
	@BeanReference(type = DLDocumentTypeFinder.class)
	protected DLDocumentTypeFinder dlDocumentTypeFinder;
	@BeanReference(type = DLFileEntryLocalService.class)
	protected DLFileEntryLocalService dlFileEntryLocalService;
	@BeanReference(type = DLFileEntryService.class)
	protected DLFileEntryService dlFileEntryService;
	@BeanReference(type = DLFileEntryPersistence.class)
	protected DLFileEntryPersistence dlFileEntryPersistence;
	@BeanReference(type = DLFileEntryFinder.class)
	protected DLFileEntryFinder dlFileEntryFinder;
	@BeanReference(type = DLFileRankLocalService.class)
	protected DLFileRankLocalService dlFileRankLocalService;
	@BeanReference(type = DLFileRankPersistence.class)
	protected DLFileRankPersistence dlFileRankPersistence;
	@BeanReference(type = DLFileRankFinder.class)
	protected DLFileRankFinder dlFileRankFinder;
	@BeanReference(type = DLFileShortcutLocalService.class)
	protected DLFileShortcutLocalService dlFileShortcutLocalService;
	@BeanReference(type = DLFileShortcutService.class)
	protected DLFileShortcutService dlFileShortcutService;
	@BeanReference(type = DLFileShortcutPersistence.class)
	protected DLFileShortcutPersistence dlFileShortcutPersistence;
	@BeanReference(type = DLFileVersionPersistence.class)
	protected DLFileVersionPersistence dlFileVersionPersistence;
	@BeanReference(type = DLFolderLocalService.class)
	protected DLFolderLocalService dlFolderLocalService;
	@BeanReference(type = DLFolderService.class)
	protected DLFolderService dlFolderService;
	@BeanReference(type = DLFolderPersistence.class)
	protected DLFolderPersistence dlFolderPersistence;
	@BeanReference(type = DLFolderFinder.class)
	protected DLFolderFinder dlFolderFinder;
	@BeanReference(type = CounterLocalService.class)
	protected CounterLocalService counterLocalService;
	@BeanReference(type = ResourceLocalService.class)
	protected ResourceLocalService resourceLocalService;
	@BeanReference(type = ResourceService.class)
	protected ResourceService resourceService;
	@BeanReference(type = ResourcePersistence.class)
	protected ResourcePersistence resourcePersistence;
	@BeanReference(type = ResourceFinder.class)
	protected ResourceFinder resourceFinder;
	@BeanReference(type = UserLocalService.class)
	protected UserLocalService userLocalService;
	@BeanReference(type = UserService.class)
	protected UserService userService;
	@BeanReference(type = UserPersistence.class)
	protected UserPersistence userPersistence;
	@BeanReference(type = UserFinder.class)
	protected UserFinder userFinder;
	@BeanReference(type = DDMStructureLocalService.class)
	protected DDMStructureLocalService ddmStructureLocalService;
	@BeanReference(type = DDMStructureService.class)
	protected DDMStructureService ddmStructureService;
	@BeanReference(type = DDMStructurePersistence.class)
	protected DDMStructurePersistence ddmStructurePersistence;
	@BeanReference(type = DDMStructureFinder.class)
	protected DDMStructureFinder ddmStructureFinder;
	private String _beanIdentifier;
}