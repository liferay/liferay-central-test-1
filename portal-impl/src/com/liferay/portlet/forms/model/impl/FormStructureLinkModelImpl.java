/**
 * Copyright (c) 2000-2011 Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.liferay.portlet.forms.model.impl;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;
import com.liferay.portlet.forms.model.FormStructureLink;
import com.liferay.portlet.forms.model.FormStructureLinkModel;
import com.liferay.portlet.forms.model.FormStructureLinkSoap;

import java.io.Serializable;

import java.lang.reflect.Proxy;

import java.sql.Types;

import java.util.ArrayList;
import java.util.List;

/**
 * The base model implementation for the FormStructureLink service. Represents a row in the &quot;FormStructureLink&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link com.liferay.portlet.forms.model.FormStructureLinkModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link FormStructureLinkImpl}.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see FormStructureLinkImpl
 * @see com.liferay.portlet.forms.model.FormStructureLink
 * @see com.liferay.portlet.forms.model.FormStructureLinkModel
 * @generated
 */
public class FormStructureLinkModelImpl extends BaseModelImpl<FormStructureLink>
	implements FormStructureLinkModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a form structure link model instance should use the {@link com.liferay.portlet.forms.model.FormStructureLink} interface instead.
	 */
	public static final String TABLE_NAME = "FormStructureLink";
	public static final Object[][] TABLE_COLUMNS = {
			{ "formStructureLinkId", Types.BIGINT },
			{ "formStructureId", Types.VARCHAR },
			{ "className", Types.VARCHAR },
			{ "classPK", Types.BIGINT }
		};
	public static final String TABLE_SQL_CREATE = "create table FormStructureLink (formStructureLinkId LONG not null primary key,formStructureId VARCHAR(75) null,className VARCHAR(75) null,classPK LONG)";
	public static final String TABLE_SQL_DROP = "drop table FormStructureLink";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.portal.util.PropsUtil.get(
				"value.object.entity.cache.enabled.com.liferay.portlet.forms.model.FormStructureLink"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.portal.util.PropsUtil.get(
				"value.object.finder.cache.enabled.com.liferay.portlet.forms.model.FormStructureLink"),
			true);

	/**
	 * Converts the soap model instance into a normal model instance.
	 *
	 * @param soapModel the soap model instance to convert
	 * @return the normal model instance
	 */
	public static FormStructureLink toModel(FormStructureLinkSoap soapModel) {
		FormStructureLink model = new FormStructureLinkImpl();

		model.setFormStructureLinkId(soapModel.getFormStructureLinkId());
		model.setFormStructureId(soapModel.getFormStructureId());
		model.setClassName(soapModel.getClassName());
		model.setClassPK(soapModel.getClassPK());

		return model;
	}

	/**
	 * Converts the soap model instances into normal model instances.
	 *
	 * @param soapModels the soap model instances to convert
	 * @return the normal model instances
	 */
	public static List<FormStructureLink> toModels(
		FormStructureLinkSoap[] soapModels) {
		List<FormStructureLink> models = new ArrayList<FormStructureLink>(soapModels.length);

		for (FormStructureLinkSoap soapModel : soapModels) {
			models.add(toModel(soapModel));
		}

		return models;
	}

	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.portal.util.PropsUtil.get(
				"lock.expiration.time.com.liferay.portlet.forms.model.FormStructureLink"));

	public FormStructureLinkModelImpl() {
	}

	public long getPrimaryKey() {
		return _formStructureLinkId;
	}

	public void setPrimaryKey(long pk) {
		setFormStructureLinkId(pk);
	}

	public Serializable getPrimaryKeyObj() {
		return new Long(_formStructureLinkId);
	}

	public long getFormStructureLinkId() {
		return _formStructureLinkId;
	}

	public void setFormStructureLinkId(long formStructureLinkId) {
		_formStructureLinkId = formStructureLinkId;

		if (!_setOriginalFormStructureLinkId) {
			_setOriginalFormStructureLinkId = true;

			_originalFormStructureLinkId = formStructureLinkId;
		}
	}

	public long getOriginalFormStructureLinkId() {
		return _originalFormStructureLinkId;
	}

	public String getFormStructureId() {
		if (_formStructureId == null) {
			return StringPool.BLANK;
		}
		else {
			return _formStructureId;
		}
	}

	public void setFormStructureId(String formStructureId) {
		_formStructureId = formStructureId;

		if (_originalFormStructureId == null) {
			_originalFormStructureId = formStructureId;
		}
	}

	public String getOriginalFormStructureId() {
		return GetterUtil.getString(_originalFormStructureId);
	}

	public String getClassName() {
		if (_className == null) {
			return StringPool.BLANK;
		}
		else {
			return _className;
		}
	}

	public void setClassName(String className) {
		_className = className;

		if (_originalClassName == null) {
			_originalClassName = className;
		}
	}

	public String getOriginalClassName() {
		return GetterUtil.getString(_originalClassName);
	}

	public long getClassPK() {
		return _classPK;
	}

	public void setClassPK(long classPK) {
		_classPK = classPK;

		if (!_setOriginalClassPK) {
			_setOriginalClassPK = true;

			_originalClassPK = classPK;
		}
	}

	public long getOriginalClassPK() {
		return _originalClassPK;
	}

	public FormStructureLink toEscapedModel() {
		if (isEscapedModel()) {
			return (FormStructureLink)this;
		}
		else {
			return (FormStructureLink)Proxy.newProxyInstance(FormStructureLink.class.getClassLoader(),
				new Class[] { FormStructureLink.class },
				new AutoEscapeBeanHandler(this));
		}
	}

	public ExpandoBridge getExpandoBridge() {
		if (_expandoBridge == null) {
			_expandoBridge = ExpandoBridgeFactoryUtil.getExpandoBridge(0,
					FormStructureLink.class.getName(), getPrimaryKey());
		}

		return _expandoBridge;
	}

	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		getExpandoBridge().setAttributes(serviceContext);
	}

	public Object clone() {
		FormStructureLinkImpl clone = new FormStructureLinkImpl();

		clone.setFormStructureLinkId(getFormStructureLinkId());
		clone.setFormStructureId(getFormStructureId());
		clone.setClassName(getClassName());
		clone.setClassPK(getClassPK());

		return clone;
	}

	public int compareTo(FormStructureLink formStructureLink) {
		long pk = formStructureLink.getPrimaryKey();

		if (getPrimaryKey() < pk) {
			return -1;
		}
		else if (getPrimaryKey() > pk) {
			return 1;
		}
		else {
			return 0;
		}
	}

	public boolean equals(Object obj) {
		if (obj == null) {
			return false;
		}

		FormStructureLink formStructureLink = null;

		try {
			formStructureLink = (FormStructureLink)obj;
		}
		catch (ClassCastException cce) {
			return false;
		}

		long pk = formStructureLink.getPrimaryKey();

		if (getPrimaryKey() == pk) {
			return true;
		}
		else {
			return false;
		}
	}

	public int hashCode() {
		return (int)getPrimaryKey();
	}

	public String toString() {
		StringBundler sb = new StringBundler(9);

		sb.append("{formStructureLinkId=");
		sb.append(getFormStructureLinkId());
		sb.append(", formStructureId=");
		sb.append(getFormStructureId());
		sb.append(", className=");
		sb.append(getClassName());
		sb.append(", classPK=");
		sb.append(getClassPK());
		sb.append("}");

		return sb.toString();
	}

	public String toXmlString() {
		StringBundler sb = new StringBundler(16);

		sb.append("<model><model-name>");
		sb.append("com.liferay.portlet.forms.model.FormStructureLink");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>formStructureLinkId</column-name><column-value><![CDATA[");
		sb.append(getFormStructureLinkId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>formStructureId</column-name><column-value><![CDATA[");
		sb.append(getFormStructureId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>className</column-name><column-value><![CDATA[");
		sb.append(getClassName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>classPK</column-name><column-value><![CDATA[");
		sb.append(getClassPK());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private long _formStructureLinkId;
	private long _originalFormStructureLinkId;
	private boolean _setOriginalFormStructureLinkId;
	private String _formStructureId;
	private String _originalFormStructureId;
	private String _className;
	private String _originalClassName;
	private long _classPK;
	private long _originalClassPK;
	private boolean _setOriginalClassPK;
	private transient ExpandoBridge _expandoBridge;
}