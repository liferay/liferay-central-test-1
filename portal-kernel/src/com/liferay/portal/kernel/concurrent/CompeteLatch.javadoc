<?xml version="1.0" encoding="UTF-8"?>

<javadoc>
	<name>CompeteLatch</name>
	<type>com.liferay.portal.kernel.concurrent.CompeteLatch</type>
	<comment><![CDATA[<p>A synchronizer based on the JDK's AQS framework to simulate a single winner competition. This synchronizer supports cyclical competition. In this situation, loser threads should try again. The single winner thread will lock the latch while other threads will block on the latch by calling<code>await</code>. After the winner thread finishes its job, it should call<code>done</code>which will open the latch. All blocking loser threads can pass the latch at the same time.</p><p>See LPS-3744 for a sample use case.</p>]]></comment>
	<author>Shuyang Zhou</author>
	<method>
		<name>await</name>
		<comment><![CDATA[This method should only be called by a loser thread. If the latch is locked, that means the winner is executing its job and all loser threads that call this method will be blocked. If the latch is not locked, that means the winner has finished its job and all the loser threads calling this method will return immediately. If the winner thread calls this method before his job completed, then all threads will deadlock.]]></comment>
	</method>
	<method>
		<name>compete</name>
		<comment><![CDATA[Tells the current thread to join the competition. Return immediately whether or not the current thread is the winner thread or a loser thread. No matter how many threads join this competition, only one thread can be the winner thread.]]></comment>
		<return><![CDATA[true if the current thread is the winner thread]]></return>
	</method>
	<method>
		<name>done</name>
		<comment><![CDATA[This method should only be called by the winner thread. The winner thread calls this method to indicate that it has finished its job and unlocks the latch to allow all loser threads return from the<code>await</code>method. If a loser thread does call this method when a winner thread has locked the latch, the latch will break and the winner thread may be put into a non thread safe state. You should never have to do this except to get out of a deadlock. If no one threads have locked the latch, then calling this method has no effect. This method will return immediately.]]></comment>
		<return><![CDATA[true if this call opens the latch, false if the latch is
already open]]></return>
	</method>
	<method>
		<name>isLocked</name>
		<comment><![CDATA[Returns true if the latch is locked. This method should not be used to test the latch before joining a competition because it is not thread safe. The only purpose for this method is to give external systems a way to monitor the latch which is usually be used for deadlock detection.]]></comment>
	</method>
	<field>
		<name>_sync</name>
		<comment><![CDATA[]]></comment>
	</field>
</javadoc>