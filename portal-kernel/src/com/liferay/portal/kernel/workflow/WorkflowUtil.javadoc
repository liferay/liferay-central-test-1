<?xml version="1.0" encoding="UTF-8"?>

<javadoc>
	<name>WorkflowUtil</name>
	<type>com.liferay.portal.kernel.workflow.WorkflowUtil</type>
	<comment><![CDATA[<p> This utility class defines the main entry point to the workflow system in Liferay as it provides static access to different manager of the workflow system. A more detailed description can be found on the manager interfaces being returned by the static accessory methods in this utility class. </p>]]></comment>
	<author>Micha Kiener</author>
	<method>
		<name>createUserCredential</name>
		<comment><![CDATA[<p> Creates a user credential representing the user with the specified id, its set of assigned roles and additional information requested through the {@link UserCredentialFactory#createCredential(long)}. </p> <p> The user credential is most likely be used to represent the <code>callingUserId</code> on a workflow API invocation to be passed on to the underlying workflow engine. Some engines want to track users invoking methods and thus executing activities, creating history entries or starting new workflows. Thats why most methods of the workflow API are taking the caller's user id to pass it on to the engine through a {@link UserCredential}. </p>]]></comment>
		<param>
			<name>userId</name>
			<type>long</type>
			<comment><![CDATA[]]></comment>
		</param>
		<return><![CDATA[the user credential object acting as the container representing
the set of roles and additional information for the given user]]></return>
		<throws>
			<name>WorkflowException</name>
			<type>com.liferay.portal.kernel.workflow.WorkflowException</type>
			<comment><![CDATA[]]></comment>
		</throws>
	</method>
	<method>
		<name>getTaskInstanceManager</name>
		<comment><![CDATA[The task instance manager is the entry point to deal with tasks created out of a workflow definition, always attached to a workflow instance. The manager supports method to retrieve, assign and approve tasks.]]></comment>
		<return><![CDATA[the task instance manager]]></return>
	</method>
	<method>
		<name>getWorkflowDefinitionManager</name>
		<comment><![CDATA[The workflow definition manager is the entry point to deploy workflow definitions. A workflow definition is the model used to describe the workflow.]]></comment>
		<return><![CDATA[the workflow definition manager]]></return>
	</method>
	<method>
		<name>getWorkflowDefinitionMapper</name>
		<comment><![CDATA[The workflow definition mapper can be used for mapping a domain class to a certain workflow definition name.]]></comment>
		<return><![CDATA[the workflow mapper]]></return>
	</method>
	<method>
		<name>getWorkflowInstanceManager</name>
		<comment><![CDATA[The workflow instance manager is the entry point to deal with existing workflow instances and how to retrieve them. More details about a workflow instance and how to start them and retrieve them can be read within the javadoc of {@link WorkflowInstanceManager}.]]></comment>
		<return><![CDATA[the workflow instance manager]]></return>
	</method>
	<method>
		<name>WorkflowUtil</name>
		<comment><![CDATA[]]></comment>
		<param>
			<name>workflowDefinitionManager</name>
			<type>com.liferay.portal.kernel.workflow.WorkflowDefinitionManager</type>
			<comment><![CDATA[]]></comment>
		</param>
		<param>
			<name>workflowInstanceManager</name>
			<type>com.liferay.portal.kernel.workflow.WorkflowInstanceManager</type>
			<comment><![CDATA[]]></comment>
		</param>
		<param>
			<name>taskInstanceManager</name>
			<type>com.liferay.portal.kernel.workflow.TaskInstanceManager</type>
			<comment><![CDATA[]]></comment>
		</param>
		<param>
			<name>workflowDefinitionMapper</name>
			<type>com.liferay.portal.kernel.workflow.WorkflowDefinitionMapper</type>
			<comment><![CDATA[]]></comment>
		</param>
		<param>
			<name>userCredentialFactory</name>
			<type>com.liferay.portal.kernel.workflow.UserCredentialFactory</type>
			<comment><![CDATA[]]></comment>
		</param>
	</method>
	<method>
		<name>setTaskInstanceManager</name>
		<comment><![CDATA[]]></comment>
		<param>
			<name>taskInstanceManager</name>
			<type>com.liferay.portal.kernel.workflow.TaskInstanceManager</type>
			<comment><![CDATA[]]></comment>
		</param>
	</method>
	<method>
		<name>setUserCredentialFactory</name>
		<comment><![CDATA[]]></comment>
		<param>
			<name>factory</name>
			<type>com.liferay.portal.kernel.workflow.UserCredentialFactory</type>
			<comment><![CDATA[]]></comment>
		</param>
	</method>
	<method>
		<name>setWorkflowDefinitionManager</name>
		<comment><![CDATA[]]></comment>
		<param>
			<name>workflowDefinitionManager</name>
			<type>com.liferay.portal.kernel.workflow.WorkflowDefinitionManager</type>
			<comment><![CDATA[]]></comment>
		</param>
	</method>
	<method>
		<name>setWorkflowDefinitionMapper</name>
		<comment><![CDATA[]]></comment>
		<param>
			<name>workflowDefinitionMapper</name>
			<type>com.liferay.portal.kernel.workflow.WorkflowDefinitionMapper</type>
			<comment><![CDATA[]]></comment>
		</param>
	</method>
	<method>
		<name>setWorkflowInstanceManager</name>
		<comment><![CDATA[]]></comment>
		<param>
			<name>workflowInstanceManager</name>
			<type>com.liferay.portal.kernel.workflow.WorkflowInstanceManager</type>
			<comment><![CDATA[]]></comment>
		</param>
	</method>
	<field>
		<name>_taskInstanceManager</name>
		<comment><![CDATA[]]></comment>
	</field>
	<field>
		<name>_userCredentialFactory</name>
		<comment><![CDATA[]]></comment>
	</field>
	<field>
		<name>_workflowDefinitionManager</name>
		<comment><![CDATA[]]></comment>
	</field>
	<field>
		<name>_workflowDefinitionMapper</name>
		<comment><![CDATA[]]></comment>
	</field>
	<field>
		<name>_workflowInstanceManager</name>
		<comment><![CDATA[]]></comment>
	</field>
</javadoc>