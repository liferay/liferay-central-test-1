<?xml version="1.0" encoding="UTF-8"?>

<javadoc>
	<name>WorkflowException</name>
	<type>com.liferay.portal.kernel.workflow.WorkflowException</type>
	<comment><![CDATA[<p>The workflow exception is the main exception to be thrown by any of the workflow system API methods.</p><p>A workflow exception might contain a native exception being thrown by the underlying workflow engine, if the transport layer allows it otherwise it will just contain its message.</p>]]></comment>
	<author>Micha Kiener</author>
	<method>
		<name>WorkflowException</name>
		<comment><![CDATA[Default, empty constructor for a new workflow exception without any further information.]]></comment>
	</method>
	<method>
		<name>WorkflowException</name>
		<comment><![CDATA[This constructor just takes a message as the exception descriptor and does not include an original cause.]]></comment>
		<param>
			<name>msg</name>
			<type>java.lang.String</type>
			<comment><![CDATA[]]></comment>
		</param>
	</method>
	<method>
		<name>WorkflowException</name>
		<comment><![CDATA[This constructor, taking the original cause, should only be used, if the engine lives in the same JVM as the client or if the class of the cause is serializable and available within the client system.]]></comment>
		<param>
			<name>cause</name>
			<type>java.lang.Throwable</type>
			<comment><![CDATA[]]></comment>
		</param>
	</method>
	<method>
		<name>WorkflowException</name>
		<comment><![CDATA[This constructor, taking the original cause and an additional message, should only be used, if the engine lives in the same JVM as the client or if the class of the cause is serializable and available within the client system.]]></comment>
		<param>
			<name>msg</name>
			<type>java.lang.String</type>
			<comment><![CDATA[]]></comment>
		</param>
		<param>
			<name>cause</name>
			<type>java.lang.Throwable</type>
			<comment><![CDATA[]]></comment>
		</param>
	</method>
</javadoc>