<?xml version="1.0"?>

<project name="portal-web" basedir="." default="war" xmlns:antelope="antlib:ise.antelope.tasks">
	<import file="../build-common-web.xml" />

	<property name="war.file" value="${ant.project.name}" />
	<property name="codepress.file" value="codepress-v.0.9.6.zip" />
	<property name="fckeditor.file" value="FCKeditor_2.5.1.zip" />
	<property name="tinymce.file" value="tinymce_2_1_3.zip" />

	<target name="clean" depends="build-common-web.clean">
		<delete dir="classes" />
		<delete dir="docroot/dtd" />
		<delete dir="docroot/html/js/editor/codepress" />
		<delete dir="docroot/html/js/editor/fckeditor" />
		<delete dir="docroot/html/js/editor/tinymce" />
		<delete dir="docroot/html/skin/color" />
		<delete dir="docroot/html/themes/classic/color_schemes" />
		<delete dir="docroot/WEB-INF/classes" />
		<delete dir="docroot/WEB-INF/lib" />
		<delete dir="test-classes" />
		<delete dir="test-results" />

		<delete>
			<fileset dir="docroot" includes="**/Thumbs.db" />
		</delete>

		<delete>
			<fileset dir="docroot/WEB-INF/tld" includes="liferay*.tld" />
		</delete>

		<antcall target="clean-themes" />
	</target>

	<target name="clean-themes">
		<for param="module.name">
			<path>
				<dirset dir="docroot/html/themes" excludes="_styled,_unstyled" includes="*" />
			</path>
			<sequential>
				<delete includeemptydirs="true" quiet="true" failonerror="false">
					<fileset
						dir="@{module.name}"
						excludes="**/_diffs/**"
					/>
				</delete>
			</sequential>
		</for>
	</target>

	<target name="compile-common-lib">
		<delete dir="${classpath.jsp}" />

		<unjar src="${project.dir}/portal-impl/portal-impl.jar" dest="${classpath.jsp}" />

		<unjar src="${project.dir}/portal-kernel/portal-kernel.jar" dest="${classpath.jsp}" />
		<unjar src="${project.dir}/portal-service/portal-service.jar" dest="${classpath.jsp}" />
		<unjar src="${project.dir}/util-java/util-java.jar" dest="${classpath.jsp}" />
		<unjar src="${project.dir}/util-taglib/util-taglib.jar" dest="${classpath.jsp}" />

		<unjar src="${project.dir}/lib/development/activation.jar" dest="${classpath.jsp}" />
		<unjar src="${project.dir}/lib/development/mail.jar" dest="${classpath.jsp}" />
		<unjar src="${project.dir}/lib/global/portlet.jar" dest="${classpath.jsp}" />
		<unjar src="${project.dir}/lib/portal/ant.jar" dest="${classpath.jsp}" />
		<unjar src="${project.dir}/lib/portal/backport-concurrent.jar" dest="${classpath.jsp}" />
		<unjar src="${project.dir}/lib/portal/commons-collections.jar" dest="${classpath.jsp}" />
		<unjar src="${project.dir}/lib/portal/commons-fileupload.jar" dest="${classpath.jsp}" />
		<unjar src="${project.dir}/lib/portal/commons-lang.jar" dest="${classpath.jsp}" />
		<unjar src="${project.dir}/lib/portal/commons-logging.jar" dest="${classpath.jsp}" />
		<unjar src="${project.dir}/lib/portal/commons-math.jar" dest="${classpath.jsp}" />
		<unjar src="${project.dir}/lib/portal/displaytag.jar" dest="${classpath.jsp}" />
		<unjar src="${project.dir}/lib/portal/dom4j.jar" dest="${classpath.jsp}" />
		<unjar src="${project.dir}/lib/portal/friki.jar" dest="${classpath.jsp}" />
		<unjar src="${project.dir}/lib/portal/jabsorb.jar" dest="${classpath.jsp}" />
		<unjar src="${project.dir}/lib/portal/jackrabbit-text-extractors.jar" dest="${classpath.jsp}" />
		<unjar src="${project.dir}/lib/portal/jcifs.jar" dest="${classpath.jsp}" />
		<unjar src="${project.dir}/lib/portal/jcommon.jar" dest="${classpath.jsp}" />
		<unjar src="${project.dir}/lib/portal/jdom.jar" dest="${classpath.jsp}" />
		<unjar src="${project.dir}/lib/portal/jfreechart.jar" dest="${classpath.jsp}" />
		<unjar src="${project.dir}/lib/portal/jstl.jar" dest="${classpath.jsp}" />
		<unjar src="${project.dir}/lib/portal/jstl-impl.jar" dest="${classpath.jsp}" />
		<unjar src="${project.dir}/lib/portal/log4j.jar" dest="${classpath.jsp}" />
		<unjar src="${project.dir}/lib/portal/lucene.jar" dest="${classpath.jsp}" />
		<unjar src="${project.dir}/lib/portal/openid4java.jar" dest="${classpath.jsp}" />
		<unjar src="${project.dir}/lib/portal/quartz.jar" dest="${classpath.jsp}" />
		<unjar src="${project.dir}/lib/portal/rome.jar" dest="${classpath.jsp}" />
		<unjar src="${project.dir}/lib/portal/struts.jar" dest="${classpath.jsp}" />
		<unjar src="${project.dir}/lib/portal/velocity.jar" dest="${classpath.jsp}" />

		<if>
			<available file="docroot/WEB-INF/classes" />
			<then>
				<copy todir="${classpath.jsp}">
					<fileset dir="docroot/WEB-INF/classes" />
				</copy>
			</then>
		</if>
	</target>

	<target name="compile-common-jsp">
		<java
			classname="org.apache.jasper.JspC"
			classpath="${jspc.classpath}"
			fork="true"
			newenvironment="true"
		>
			<arg line="${arg.line}" />
		</java>

		<java
			classname="com.liferay.portal.tools.JSPCompiler"
			classpath="${jspc.classpath}"
			failonerror="true"
			fork="true"
			newenvironment="true"
		>
			<arg value="${app.server.type}" />
			<arg value="${javac.compiler}" />
			<arg value="${jspc.classpath}" />
			<arg value="${jspc.classes.dir}" />
		</java>

		<delete file="alfresco.log" />
	</target>

	<target name="compile-jboss-jetty">
		<property name="jspc.classes.dir" value="classes/${app.server.type}" />
		<property name="jspc.classpath" value="${env.JAVA_HOME}/jre/lib/rt.jar;${classpath.jsp};${app.server.deploy.dir}/jbossweb-jetty.sar/jasper-compiler.jar;${app.server.deploy.dir}/jbossweb-jetty.sar/jasper-runtime.jar" />

		<antcall target="compile-common-lib" />

		<unjar src="${app.server.instance.dir}/lib/javax.servlet.jar" dest="${classpath.jsp}" />
		<unjar src="${app.server.instance.dir}/lib/javax.servlet.jsp.jar" dest="${classpath.jsp}" />
		<unjar src="${app.server.deploy.dir}/jbossweb-jetty.sar/commons-el.jar" dest="${classpath.jsp}" />

		<antcall target="compile-common-jsp">
			<param name="arg.line" value="-d ${jspc.classes.dir} -webapp ${jsp.precompile.root}" />
		</antcall>
	</target>

	<target name="compile-jboss-tomcat">
		<if>
			<equals arg1="${app.server.version}" arg2="4.0" />
			<then>
				<property name="jspc.classes.dir" value="classes/${app.server.type}" />
				<property name="jspc.classpath" value="${env.JAVA_HOME}/jre/lib/rt.jar;${classpath.jsp};${app.server.deploy.dir}/jbossweb-tomcat55.sar/jasper-compiler.jar;${app.server.deploy.dir}/jbossweb-tomcat55.sar/jasper-runtime.jar" />

				<antcall target="compile-common-lib" />

				<unjar src="${app.server.instance.dir}/lib/javax.servlet.jar" dest="${classpath.jsp}" />
				<unjar src="${app.server.instance.dir}/lib/javax.servlet.jsp.jar" dest="${classpath.jsp}" />
				<unjar src="${app.server.deploy.dir}/jbossweb-tomcat55.sar/commons-el.jar" dest="${classpath.jsp}" />
			</then>
			<elseif>
				<equals arg1="${app.server.version}" arg2="4.2" />
				<then>
					<property name="jspc.classes.dir" value="classes/${app.server.type}" />
					<property name="jspc.classpath" value="${env.JAVA_HOME}/jre/lib/rt.jar;${classpath.jsp};${app.server.dir}/lib/jboss-common.jar;${app.server.deploy.dir}/jboss-web.deployer/jasper-jdt.jar;${app.server.deploy.dir}/jboss-web.deployer/jbossweb.jar;${app.server.instance.dir}/lib/el-api.jar" />

					<antcall target="compile-common-lib" />

					<unjar src="${app.server.instance.dir}/lib/jsp-api.jar" dest="${classpath.jsp}" />
					<unjar src="${app.server.instance.dir}/lib/servlet-api.jar" dest="${classpath.jsp}" />
					<unjar src="${app.server.deploy.dir}/jboss-web.deployer/jstl.jar" dest="${classpath.jsp}" />
				</then>
			</elseif>
		</if>

		<antcall target="compile-common-jsp">
			<param name="arg.line" value="-classpath ${jspc.classpath} -d ${jspc.classes.dir} -webapp ${jsp.precompile.root}" />
		</antcall>
	</target>

	<target name="compile-jetty">
		<property name="jspc.classes.dir" value="classes/${app.server.type}" />
		<property name="jspc.classpath" value="${env.JAVA_HOME}/jre/lib/rt.jar;${classpath.jsp};${app.server.dir}/ext/commons-el.jar;${app.server.dir}/ext/jasper-compiler.jar;${app.server.dir}/ext/jasper-runtime.jar" />

		<antcall target="compile-common-lib" />

		<unjar src="${app.server.dir}/lib/javax.servlet.jar" dest="${classpath.jsp}" />

		<antcall target="compile-common-jsp">
			<param name="arg.line" value="-d ${jspc.classes.dir} -webapp ${jsp.precompile.root}" />
		</antcall>
	</target>

	<target name="compile-jonas-jetty">
		<property name="jspc.classes.dir" value="classes/${app.server.type}" />
		<property name="jspc.classpath" value="${env.JAVA_HOME}/jre/lib/rt.jar;${classpath.jsp};${app.server.dir}/lib/jetty/ext/commons-el.jar;${app.server.dir}/lib/jetty/ext/jasper-compiler.jar;${app.server.dir}/lib/jetty/ext/jasper-runtime.jar" />

		<antcall target="compile-common-lib" />

		<unjar src="${app.server.dir}/lib/commons/j2ee/jsp-2_0.jar" dest="${classpath.jsp}" />
		<unjar src="${app.server.dir}/lib/commons/j2ee/servlet-2_4.jar" dest="${classpath.jsp}" />

		<antcall target="compile-common-jsp">
			<param name="arg.line" value="-d ${jspc.classes.dir} -webapp ${jsp.precompile.root}" />
		</antcall>
	</target>

	<target name="compile-jonas-tomcat">
		<property name="jspc.classes.dir" value="classes/${app.server.type}" />
		<property name="jspc.classpath" value="${env.JAVA_HOME}/jre/lib/rt.jar;${classpath.jsp};${app.server.dir}/lib/catalina/common/lib/commons-el.jar;${app.server.dir}/lib/catalina/common/lib/jasper-compiler.jar;${app.server.dir}/lib/catalina/common/lib/jasper-runtime.jar" />

		<antcall target="compile-common-lib" />

		<unjar src="${app.server.dir}/lib/commons/j2ee/jsp-2_0.jar" dest="${classpath.jsp}" />
		<unjar src="${app.server.dir}/lib/commons/j2ee/servlet-2_4.jar" dest="${classpath.jsp}" />

		<antcall target="compile-common-jsp">
			<param name="arg.line" value="-d ${jspc.classes.dir} -webapp ${jsp.precompile.root}" />
		</antcall>
	</target>

	<target name="compile-resin">
		<property name="jspc.classes.dir" value="classes/${app.server.type}" />
		<property name="jspc.classpath" value="${env.JAVA_HOME}/jre/lib/rt.jar;${env.JAVA_HOME}/lib/tools.jar;${classpath.jsp};${app.server.dir}/lib/jms-11.jar;${app.server.dir}/lib/jmx-12.jar;${app.server.dir}/lib/jsdk-24.jar;${app.server.dir}/lib/jstl-11.jar;${app.server.dir}/lib/jta-101.jar;${app.server.dir}/lib/resin.jar" />

		<antcall target="compile-common-lib" />

		<unjar src="${project.dir}/lib/development/saxpath.jar" dest="${classpath.jsp}" />
		<unjar src="${project.dir}/lib/portal/axis.jar" dest="${classpath.jsp}" />
		<unjar src="${project.dir}/lib/portal/casclient.jar" dest="${classpath.jsp}" />
		<unjar src="${project.dir}/lib/portal/commons-beanutils.jar" dest="${classpath.jsp}" />
		<unjar src="${project.dir}/lib/portal/commons-digester.jar" dest="${classpath.jsp}" />
		<unjar src="${project.dir}/lib/portal/commons-httpclient.jar" dest="${classpath.jsp}" />
		<unjar src="${project.dir}/lib/portal/portletbridge-core.jar" dest="${classpath.jsp}" />
		<unjar src="${project.dir}/lib/portal/portletbridge-portlet.jar" dest="${classpath.jsp}" />
		<unjar src="${project.dir}/lib/portal/saaj.jar" dest="${classpath.jsp}" />
		<unjar src="${project.dir}/lib/portal/simplecaptcha.jar" dest="${classpath.jsp}" />
		<unjar src="${project.dir}/lib/portal/spring.jar" dest="${classpath.jsp}" />
		<unjar src="${project.dir}/lib/portal/struts-el.jar" dest="${classpath.jsp}" />

		<copy file="docroot/WEB-INF/web.xml" tofile="docroot/WEB-INF/web.xml.bak" />

		<replace file="docroot/WEB-INF/web.xml">
			<replacefilter token="&lt;resource-ref&gt;" value="" />
			<replacefilter token="&lt;/resource-ref&gt;" value="" />
		</replace>

		<java
			classname="com.liferay.util.resin.BatchJspCompiler"
			classpath="${jspc.classpath};${project.dir}/lib/backport-concurrent.jar;${project.dir}/lib/trove.jar"
			fork="true"
			maxmemory="512m"
			newenvironment="true"
		>
			<arg line="docroot ${jspc.classes.dir}" />
		</java>

		<move file="docroot/WEB-INF/web.xml.bak" tofile="docroot/WEB-INF/web.xml" overwrite="yes" />
	</target>

	<target name="compile-tomcat">
		<if>
			<equals arg1="${app.server.version}" arg2="5.5" />
			<then>
				<property name="jspc.classes.dir" value="classes/${app.server.type}" />
				<property name="jspc.classpath" value="${env.JAVA_HOME}/jre/lib/rt.jar;${classpath.jsp};${app.server.dir}/common/lib/commons-el.jar;${app.server.dir}/common/lib/jasper-compiler.jar;${app.server.dir}/common/lib/jasper-runtime.jar" />

				<antcall target="compile-common-lib" />

				<unjar src="${app.server.dir}/common/lib/jsp-api.jar" dest="${classpath.jsp}" />
				<unjar src="${app.server.dir}/common/lib/servlet-api.jar" dest="${classpath.jsp}" />
			</then>
			<elseif>
				<equals arg1="${app.server.version}" arg2="6.0" />
				<then>
					<property name="jspc.classes.dir" value="classes/${app.server.type}" />
					<property name="jspc.classpath" value="${env.JAVA_HOME}/jre/lib/rt.jar;${classpath.jsp};${app.server.dir}/lib/jasper.jar;${app.server.dir}/lib/jasper-el.jar;${app.server.dir}/lib/jasper-jdt.jar;${app.server.bin.dir}/tomcat-juli.jar" />

					<antcall target="compile-common-lib" />

					<unjar src="${app.server.dir}/lib/el-api.jar" dest="${classpath.jsp}" />
					<unjar src="${app.server.dir}/lib/jsp-api.jar" dest="${classpath.jsp}" />
					<unjar src="${app.server.dir}/lib/servlet-api.jar" dest="${classpath.jsp}" />
				</then>
			</elseif>
		</if>

		<antcall target="compile-common-jsp">
			<param name="arg.line" value="-d ${jspc.classes.dir} -webapp ${jsp.precompile.root}" />
		</antcall>
	</target>

	<target name="war" depends="compile">
		<antcall target="build-codepress" />
		<antcall target="build-dtd" />
		<antcall target="build-fckeditor" />
		<antcall target="build-tinymce" />

		<war
			basedir="docroot"
			destfile="${war.file}.war"
			excludes="WEB-INF/web.xml,html/js/editor/${fckeditor.file},html/js/editor/fckeditor/_samples/**"
			webxml="docroot/WEB-INF/web.xml"
		/>
	</target>

	<target name="deploy">
		<antcall target="build-codepress" />
		<antcall target="build-dtd" />
		<antcall target="build-fckeditor" />
		<antcall target="build-tinymce" />

		<copy todir="docroot/WEB-INF/lib" file="${project.dir}/portal-client/portal-client.jar" failonerror="false" />

		<antcall target="build-common-web.deploy" />

		<if>
			<equals arg1="${jsp.precompile}" arg2="on" />
			<then>
				<if>
					<equals arg1="${app.server.type}" arg2="jboss-jetty" />
					<then>
						<antcall target="compile-jboss-jetty" />

						<copy todir="${app.server.instance.dir}/work">
							<fileset dir="classes/${app.server.type}">
								<exclude name="**/*.jspc_error" />
								<exclude name="**/*.java" />
							</fileset>
						</copy>
					</then>
					<elseif>
						<equals arg1="${app.server.type}" arg2="jboss-tomcat" />
						<then>
							<antcall target="compile-jboss-tomcat" />

							<copy todir="${app.server.instance.dir}/work/jboss.web/localhost/_">
								<fileset dir="classes/${app.server.type}">
									<exclude name="**/*.jspc_error" />
									<exclude name="**/*.java" />
								</fileset>
							</copy>
						</then>
					</elseif>
					<elseif>
						<equals arg1="${app.server.type}" arg2="jetty" />
						<then>
							<antcall target="compile-jetty" />

							<copy todir="${app.server.dir}/work/Jetty__8080__">
								<fileset dir="classes/${app.server.type}">
									<exclude name="**/*.jspc_error" />
									<exclude name="**/*.java" />
								</fileset>
							</copy>
						</then>
					</elseif>
					<elseif>
						<equals arg1="${app.server.type}" arg2="jonas-jetty" />
						<then>
							<antcall target="compile-jonas-jetty" />

							<copy todir="${app.server.dir}/work">
								<fileset dir="classes/${app.server.type}">
									<exclude name="**/*.jspc_error" />
									<exclude name="**/*.java" />
								</fileset>
							</copy>
						</then>
					</elseif>
					<elseif>
						<equals arg1="${app.server.type}" arg2="jonas-tomcat" />
						<then>
							<antcall target="compile-jonas-tomcat" />

							<copy todir="${app.server.dir}/work/jonas/localhost/_">
								<fileset dir="classes/${app.server.type}">
									<exclude name="**/*.jspc_error" />
									<exclude name="**/*.java" />
								</fileset>
							</copy>
						</then>
					</elseif>
					<elseif>
						<equals arg1="${app.server.type}" arg2="resin" />
						<then>
							<antcall target="compile-resin" />

							<copy todir="${app.server.portal.dir}/WEB-INF/work">
								<fileset dir="classes/${app.server.type}">
									<exclude name="**/*.jspc_error" />
									<exclude name="**/*.java" />
								</fileset>
							</copy>
						</then>
					</elseif>
					<elseif>
						<equals arg1="${app.server.type}" arg2="tomcat" />
						<then>
							<antcall target="compile-tomcat" />

							<copy todir="${app.server.dir}/work/Catalina/localhost/_">
								<fileset dir="classes/${app.server.type}">
									<exclude name="**/*.jspc_error" />
									<exclude name="**/*.java" />
								</fileset>
							</copy>
						</then>
					</elseif>
				</if>
			</then>
		</if>
	</target>

	<target name="deploy-fast">
		<if>
			<equals arg1="${app.server.type}" arg2="tomcat" />
			<then>
				<copy todir="${app.server.portal.dir}">
					<fileset dir="docroot">
						<include name="**/*.css" />
						<include name="**/*.dtd" />
						<include name="**/*.gif" />
						<include name="**/*.jar" />
						<include name="**/*.jpg" />
						<include name="**/*.js" />
						<include name="**/*.jsp" />
						<include name="**/*.jspf" />
						<include name="**/*.png" />
						<include name="**/*.properties" />
						<include name="**/*.tld" />
						<include name="**/*.vm" />
						<include name="**/*.xml" />
					</fileset>
				</copy>
			</then>
		</if>
	</target>

	<target name="build-codepress">
		<if>
			<not>
				<uptodate
					srcfile="docroot/html/js/editor/${codepress.file}"
					targetfile="docroot/html/js/editor/codepress"
				/>
			</not>
			<then>
				<delete dir="docroot/html/js/editor/codepress" />

				<unzip src="docroot/html/js/editor/${codepress.file}" dest="docroot/html/js/editor" />

				<copy todir="docroot/html/js/editor/codepress" overwrite="yes">
					<fileset dir="docroot/html/js/editor/_codepress" />
				</copy>
			</then>
			<else>
				<copy todir="docroot/html/js/editor/codepress" overwrite="no">
					<fileset dir="docroot/html/js/editor/_codepress" />
				</copy>
			</else>
		</if>
	</target>

	<target name="build-css">
		<for param="css.file">
			<path>
				<fileset
					dir="docroot/html/themes/_styled/css"
					excludes="custom.css,main.css"
				/>
				<fileset
					dir="docroot/html/themes/_unstyled/css"
					excludes="custom.css,main.css"
				/>
				<fileset
					dir="docroot/html/themes"
					excludes="**/classic/_diffs/css/custom.css"
					includes="**/_diffs/css/*.css"
				/>
			</path>
			<sequential>
				<antcall target="build-css-cmd">
					<param name="css.file" value="@{css.file}" />
				</antcall>
			</sequential>
		</for>
	</target>

	<target name="build-css-cmd">
		<loadfile property="css.content" srcFile="${css.file}" />

		<antelope:post
			append="false"
			property="css.formatted"
			to="http://teenage.cz/acidofil/tools/cssformat.php"
			verbose="false"
		>
			<antelope:prop name="css" value="${css.content}" />
			<antelope:prop name="akce" value="format" />
			<antelope:prop name="sortclasses" value="0" />
			<antelope:prop name="sortattrs" value="1" />
			<antelope:prop name="stripcomms" value="0" />
			<antelope:prop name="textarea" value="1" />
			<antelope:prop name="mergeclasses" value="0" />
			<antelope:prop name="mergeattrs" value="1" />
			<antelope:prop name="shortcolors" value="1" />
			<antelope:prop name="shortattrs" value="1" />
		</antelope:post>

		<!--
		<textarea rows="12" cols="100">
		-->

		<antelope:stringutil string="${css.formatted}" property="css.formatted.beginindex">
			<indexof string="textarea rows" />
		</antelope:stringutil>

		<math
			datatype="int"
			operand1="${css.formatted.beginindex}"
			operand2="31"
			operation="+"
			result="css.formatted.beginindex"
		/>

		<!--
		</textarea>
		-->

		<antelope:stringutil string="${css.formatted}" property="css.formatted.endindex">
			<indexof string="/textarea" fromindex="${css.formatted.beginindex}" />
		</antelope:stringutil>

		<math
			datatype="int"
			operand1="${css.formatted.endindex}"
			operand2="3"
			operation="-"
			result="css.formatted.endindex"
		/>

		<antelope:stringutil string="${css.formatted}" property="css.formatted">
			<substring beginindex="${css.formatted.beginindex}" endindex="${css.formatted.endindex}" />
		</antelope:stringutil>

		<echo message="${css.formatted}" file="${css.file}" />

		<java
			classname="com.liferay.portal.tools.CSSFormatter"
			classpathref="project.classpath"
			fork="true"
			newenvironment="true"
		>
			<arg line="${css.file}" />
		</java>
	</target>

	<target name="build-dtd">
		<copy todir="docroot/dtd">
			<fileset dir="${project.dir}/definitions" />
		</copy>
	</target>

	<target name="build-fckeditor">
		<if>
			<not>
				<uptodate
					srcfile="docroot/html/js/editor/${fckeditor.file}"
					targetfile="docroot/html/js/editor/fckeditor"
				/>
			</not>
			<then>
				<delete dir="docroot/html/js/editor/fckeditor" />

				<unzip src="docroot/html/js/editor/${fckeditor.file}" dest="docroot/html/js/editor" />

				<copy todir="docroot/html/js/editor/fckeditor/editor/filemanager/browser/liferay">
					<fileset dir="docroot/html/js/editor/fckeditor/editor/filemanager/browser/default" />
				</copy>

				<copy todir="docroot/html/js/editor/fckeditor" overwrite="yes">
					<fileset dir="docroot/html/js/editor/_fckeditor" />
				</copy>
			</then>
			<else>
				<copy todir="docroot/html/js/editor/fckeditor" overwrite="no">
					<fileset dir="docroot/html/js/editor/_fckeditor" />
				</copy>
			</else>
		</if>
	</target>

	<target name="build-javascript">
		<java
			classname="com.liferay.portal.tools.JavaScriptBuilder"
			classpathref="project.classpath"
			fork="true"
			newenvironment="true"
		>
			<arg value="javascript.barebone.files" />
			<arg value="docroot/html/js/" />
			<arg value="docroot/html/js/barebone_unpacked.js" />
		</java>

		<antcall target="build-javascript-cmd">
			<param name="js.from.file" value="docroot/html/js/barebone_unpacked.js" />
			<param name="js.to.file" value="docroot/html/js/barebone_packed.js" />
		</antcall>

		<java
			classname="com.liferay.portal.tools.JavaScriptBuilder"
			classpathref="project.classpath"
			fork="true"
			newenvironment="true"
		>
			<arg value="javascript.everything.files" />
			<arg value="docroot/html/js/" />
			<arg value="docroot/html/js/everything_unpacked.js" />
		</java>

		<antcall target="build-javascript-cmd">
			<param name="js.from.file" value="docroot/html/js/everything_unpacked.js" />
			<param name="js.to.file" value="docroot/html/js/everything_packed.js" />
		</antcall>

		<antcall target="build-javascript-cmd">
			<param name="js.from.file" value="docroot/html/js/liferay/service_unpacked.js" />
			<param name="js.to.file" value="docroot/html/js/liferay/service_packed.js" />
		</antcall>

		<antcall target="build-javascript-cmd">
			<param name="js.from.file" value="docroot/html/js/liferay/portlet_css_unpacked.js" />
			<param name="js.to.file" value="docroot/html/js/liferay/portlet_css_packed.js" />
		</antcall>

		<antcall target="build-javascript-portlet-cmd">
			<param name="portlet.name" value="message_boards" />
		</antcall>

		<antcall target="build-javascript-portlet-cmd">
			<param name="portlet.name" value="tags_admin" />
		</antcall>
	</target>

	<target name="build-javascript-cmd">
		<java
			classname="com.yahoo.platform.yui.compressor.YUICompressor"
			classpathref="project.classpath"
			fork="true"
			newenvironment="true"
		>
			<arg line="--type js -o ${js.to.file} ${js.from.file}" />
		</java>
	</target>

	<target name="build-javascript-portlet-cmd">
		<antcall target="build-javascript-cmd">
			<param name="js.from.file" value="docroot/html/portlet/${portlet.name}/unpacked.js" />
			<param name="js.to.file" value="docroot/html/portlet/${portlet.name}/packed.js" />
		</antcall>
	</target>

	<target name="build-selenium">
		<java
			classname="com.liferay.portal.tools.SeleneseToJavaBuilder"
			classpathref="project.classpath"
			fork="true"
			newenvironment="true"
		>
			<arg line="test" />
		</java>
	</target>

	<target name="build-themes">
		<for param="module.name">
			<path>
				<dirset dir="docroot/html/themes" excludes="_styled,_unstyled" includes="*" />
			</path>
			<sequential>
				<java
					classname="com.liferay.portal.tools.ThumbnailBuilder"
					classpathref="project.classpath"
					fork="true"
					newenvironment="true"
				>
					<jvmarg value="-Dthumbnail.original.file=@{module.name}/_diffs/images/screenshot.png" />
					<jvmarg value="-Dthumbnail.thumbnail.file=@{module.name}/_diffs/images/thumbnail.png" />
					<jvmarg value="-Dthumbnail.height=120" />
					<jvmarg value="-Dthumbnail.width=160" />
					<jvmarg value="-Dthumbnail.overwrite=false" />
				</java>

				<copy todir="@{module.name}" overwrite="yes">
					<fileset
						dir="docroot/html/themes/_unstyled"
						excludes="templates/init.vm"
					/>
				</copy>

				<copy todir="@{module.name}" overwrite="yes">
					<fileset
						dir="docroot/html/themes/_styled"
					/>
				</copy>

				<if>
					<available file="@{module.name}/_diffs" />
					<then>
						<copy todir="@{module.name}" overwrite="yes">
							<fileset
								dir="@{module.name}/_diffs"
							/>
						</copy>
					</then>
				</if>

				<java
					classname="com.liferay.portal.tools.CSSBuilder"
					classpathref="project.classpath"
					fork="true"
					newenvironment="true"
				>
					<arg line="@{module.name}/css @{module.name}/css/everything_unpacked.css" />
				</java>

				<java
					classname="com.yahoo.platform.yui.compressor.YUICompressor"
					classpathref="project.classpath"
					fork="true"
					newenvironment="true"
				>
					<arg line="--type css -o @{module.name}/css/everything_packed.css @{module.name}/css/everything_unpacked.css" />
				</java>
			</sequential>
		</for>
	</target>

	<target name="build-tinymce">
		<if>
			<not>
				<uptodate
					srcfile="docroot/html/js/editor/${tinymce.file}"
					targetfile="docroot/html/js/editor/tiny_mce"
				/>
			</not>
			<then>
				<delete dir="docroot/html/js/editor/tiny_mce" />
				<delete dir="docroot/html/js/editor/tinymce" />

				<unzip src="docroot/html/js/editor/${tinymce.file}" dest="docroot/html/js/editor" />

				<move file="docroot/html/js/editor/tinymce/jscripts/tiny_mce" todir="docroot/html/js/editor" />

				<delete dir="docroot/html/js/editor/tinymce" />
			</then>
		</if>
	</target>

	<target name="deploy-properties">
		<ant dir=".." target="deploy-properties" inheritAll="false" />
	</target>
</project>