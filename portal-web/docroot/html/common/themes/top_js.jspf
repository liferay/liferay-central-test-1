<%
/**
 * Copyright (c) 2000-2007 Liferay, Inc. All rights reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */
%>

<script type="text/javascript">
	var themeDisplay = {
		getCompanyId: function() {
			return "<%= themeDisplay.getCompanyId() %>";
		},
		getDoAsUserIdEncoded: function() {
			return "<%= themeDisplay.getDoAsUserId() %>";
		},
		getPlid: function() {
			return "<%= themeDisplay.getPlid() %>";
		},
		getGroupId: function() {
			return "<%= themeDisplay.getPortletGroupId() %>";
		},

		<c:if test="<%= layout != null %>">
			getLayoutId: function() {
				return "<%= layout.getLayoutId() %>";
			},
			isPrivateLayout: function() {
				return "<%= layout.isPrivateLayout() %>";
			},
			getParentLayoutId: function() {
				return "<%= layout.getParentLayoutId() %>";
			},
		</c:if>

		getLanguageId: function() {
			return "<%= LanguageUtil.getLanguageId(request) %>";
		},
		isFreeformLayout: function() {
			return <%= themeDisplay.isFreeformLayout() %>;
		},
		getPathContext: function() {
			return "<%= themeDisplay.getPathContext() %>";
		},
		getPathMain: function() {
			return "<%= themeDisplay.getPathMain() %>";
		},
		getPathThemeImages: function() {
			return "<%= themeDisplay.getPathThemeImages() %>";
		},
		getPathThemeRoot: function() {
			return "<%= themeDisplay.getPathThemeRoot() %>";
		},
		getURLHome: function() {
			return "<%= themeDisplay.getURLHome() %>";
		}
	};

	var mainPath = themeDisplay.getPathMain();
</script>

<c:choose>
	<c:when test='<%= ParamUtil.getBoolean(request, "js_fast_load", GetterUtil.getBoolean(PropsUtil.get(PropsUtil.JAVASCRIPT_FAST_LOAD))) %>'>

		<%--
		everything.js includes all of the JavaScript files. It is autogenerated
		with the Ant build-javascript task.
		--%>

		<script src="<%= themeDisplay.getPathJavaScript() %>/everything.js" type="text/javascript"></script>
	</c:when>
	<c:otherwise>

		<%
		String[] javaScriptFiles = PropsUtil.getArray(PropsUtil.JAVASCRIPT_FILES);

		for (int i = 0; i < javaScriptFiles.length; i++) {
		%>

			<script src="<%= themeDisplay.getPathJavaScript() %>/<%= javaScriptFiles[i] %>" type="text/javascript"></script>

		<%
		}
		%>

	</c:otherwise>
</c:choose>

<c:if test="<%= GetterUtil.getBoolean(PropsUtil.get(PropsUtil.JAVASCRIPT_LOG_ENABLED)) %>">
	<script src="<%= themeDisplay.getPathJavaScript() %>/firebug/firebug.js" type="text/javascript"></script>
</c:if>

<script type="text/javascript" src="<%= themeDisplay.getPathMain() %>/portal/javascript_cached?languageId=<%= themeDisplay.getLocale().toString() %>&themeId=<%= themeDisplay.getThemeId() %>&colorSchemeId=<%= themeDisplay.getColorSchemeId() %>"></script>

<script type="text/javascript">
	function showLayoutTemplates() {
		var message = Liferay.Popup(
			{
				width: 700,
				modal: true,
				title: "<%= UnicodeLanguageUtil.get(pageContext, "layout") %>"
			});

		url = "<%= themeDisplay.getPathMain() %>/layout_configuration/templates?p_l_id=<%= plid %>&doAsUserId=<%= themeDisplay.getDoAsUserId() %>";

		AjaxUtil.update(url, message, {onComplete: function(){Liferay.Popup.center()}});
	}

	_$J(document).ready(
		function() {
			Liferay.Util.addInputType();
			Liferay.Util.addInputFocus();
		}
	);

	Liferay.Portlet.ready(
		function(portletId, jQueryObj) {
			Liferay.Util.addInputType(portletId, jQueryObj);

			Liferay.Util.portletTitleEdit(
				{
					obj: jQueryObj,
					plid: '<%= layout.getPlid() %>',
					doAsUserId: '<%= themeDisplay.getDoAsUserId() %>',
					portletId: portletId,
					url: '<%= themeDisplay.getPathMain() %>/portlet_configuration/update_title'
				}
			);
		}
	);

	<c:if test="<%= !themeDisplay.isStatePopUp() %>">
		<c:if test="<%= MessagingUtil.isJabberEnabled() && themeDisplay.isSignedIn() %>">
			_$J(document).ready(
				function() {
					Messaging.init("<%= request.getRemoteUser() %>");
				}
			);
		</c:if>

		<c:if test="<%= GetterUtil.getBoolean(PropsUtil.get(PropsUtil.REVERSE_AJAX_ENABLED)) && themeDisplay.isSignedIn()%>">
			if (!is_safari) {
				_$J(document).last(
					function() {
						ReverseAjax.initialize();
					}
				);
			}
		</c:if>

		<%
		String scroll = ParamUtil.getString(request, "scroll");
		%>

		<c:if test="<%= Validator.isNotNull(scroll) %>">
			_$J(document).last(
				function() {
					document.getElementById("<%= scroll %>").scrollIntoView();
				}
			);
		</c:if>
	</c:if>

	<%
	List portletIds = layoutTypePortlet.getPortletIds();
	%>

	<c:choose>
		<c:when test="<%= portletIds.size() > 0 && !layoutTypePortlet.hasStateMax() %>">
			Liferay.Portlet.list = {<%
				for (int i = 0; i < portletIds.size(); i++) {
					out.print("\"" + portletIds.get(i) + "\":1");

					if (i < portletIds.size() - 1) {
						out.print(",");
					}
				}
			%>};
		</c:when>
		<c:otherwise>
			_$J(document).ready(
				function() {
						Liferay.Portlet.processLast();
				}
			);
		</c:otherwise>
	</c:choose>

	<c:if test="<%= (layout != null) && (LayoutPermission.contains(permissionChecker, layout, ActionKeys.UPDATE)) %>">
		jQuery(document).ready(
			function() {
				if (themeDisplay.isFreeformLayout()) {
					Liferay.Freeform({
						columnSelector: "div[@id^=layout-column_]",
						boxSelector: ".portlet-boundary"
					});
				}
				else {
					Liferay.Columns({
						columnSelector: "div[@id^=layout-column_]",
						handleSelector: ".portlet-title:first, .portlet-title-default:first",
						boxSelector: ".portlet-boundary" ,
						positionClass: "drop-position",
						areaClass: "drop-area",
						onComplete: function(d) {Liferay.Portlet.move(d)}
					});
				}

				new Liferay.Navigation(
					{
						layoutIds: [<%= ListUtil.toString(layouts, "layoutId") %>],
						navBlock: '#navigation'
					}
				);
			}
		);
	</c:if>

	jQuery(document).ready(
		function() {
			Liferay.Dock.init();
		}
	);
</script>