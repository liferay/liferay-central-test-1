<%
/**
 * Copyright (c) 2000-2008 Liferay, Inc. All rights reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */
%>

<script type="text/javascript">
	// <![CDATA
		var themeDisplay = {
			getCompanyId: function() {
				return "<%= themeDisplay.getCompanyId() %>";
			},
			getDoAsUserIdEncoded: function() {
				return "<%= themeDisplay.getDoAsUserId() %>";
			},
			getPlid: function() {
				return "<%= themeDisplay.getPlid() %>";
			},
			getGroupId: function() {
				return "<%= themeDisplay.getPortletGroupId() %>";
			},
			getUserId: function() {
				return "<%= themeDisplay.getUserId() %>";
			},

			<c:if test="<%= themeDisplay.isSignedIn() %>">
				getUserName: function() {
					return "<%= UnicodeFormatter.toString(user.getFullName()) %>";
				},
			</c:if>

			<c:if test="<%= layout != null %>">
				getLayoutId: function() {
					return "<%= layout.getLayoutId() %>";
				},
				getLayoutURL: function() {
					return "<%= PortalUtil.getLayoutURL(layout, themeDisplay) %>";
				},
				isPrivateLayout: function() {
					return "<%= layout.isPrivateLayout() %>";
				},
				getParentLayoutId: function() {
					return "<%= layout.getParentLayoutId() %>";
				},
			</c:if>

			getLanguageId: function() {
				return "<%= LanguageUtil.getLanguageId(request) %>";
			},
			isFreeformLayout: function() {
				return <%= themeDisplay.isFreeformLayout() %>;
			},
			isSignedIn: function() {
				return <%= themeDisplay.isSignedIn() %>;
			},
			isStateExclusive: function() {
				return <%= themeDisplay.isStateExclusive() %>;
			},
			isStateMaximized: function() {
				return <%= themeDisplay.isStateMaximized() %>;
			},
			isStatePopUp: function() {
				return <%= themeDisplay.isStatePopUp() %>;
			},
			getPathContext: function() {
				return "<%= themeDisplay.getPathContext() %>";
			},
			getPathImage: function() {
				return "<%= themeDisplay.getPathImage() %>";
			},
			getPathMain: function() {
				return "<%= themeDisplay.getPathMain() %>";
			},
			getPathThemeImages: function() {
				return "<%= themeDisplay.getPathThemeImages() %>";
			},
			getPathThemeRoot: function() {
				return "<%= themeDisplay.getPathThemeRoot() %>";
			},
			getURLHome: function() {
				return "<%= themeDisplay.getURLHome() %>";
			},
			getSessionId: function() {
				return "<%= session.getId() %>";
			}
		};

		var mainPath = themeDisplay.getPathMain();
	// ]]>
</script>

<c:choose>
	<c:when test="<%= themeDisplay.isThemeJsFastLoad() %>">
		<script src="<%= themeDisplay.getPathJavaScript() %>/<%= themeDisplay.isThemeJsBarebone() ? "barebone" : "everything" %>_packed.js?bn=<%= ReleaseInfo.getBuildNumber() %>" type="text/javascript"></script>
	</c:when>
	<c:otherwise>

		<%
		String[] javaScriptFiles = null;

		if (themeDisplay.isThemeJsBarebone()) {
			javaScriptFiles = PropsValues.JAVASCRIPT_BAREBONE_FILES;
		}
		else {
			javaScriptFiles = PropsValues.JAVASCRIPT_EVERYTHING_FILES;
		}

		for (String javaScriptFile : javaScriptFiles) {
		%>

			<script src="<%= themeDisplay.getPathJavaScript() %>/<%= javaScriptFile %>?bn=<%= ReleaseInfo.getBuildNumber() %>" type="text/javascript"></script>

		<%
		}
		%>

	</c:otherwise>
</c:choose>

<c:if test="<%= PropsValues.JAVASCRIPT_LOG_ENABLED %>">
	<script src="<%= themeDisplay.getPathJavaScript() %>/firebug/firebug.js" type="text/javascript"></script>
</c:if>

<c:if test="<%= themeDisplay.isIncludeServiceJs() %>">
	<script src="<%= themeDisplay.getPathJavaScript() %>/liferay/service_packed.js" type="text/javascript"></script>
</c:if>

<script type="text/javascript">
	// <![CDATA

		<%@ include file="/html/portal/layout/view/portlet_js.jspf" %>

		<%
		String currentURL = PortalUtil.getCurrentURL(request);
		%>

		function addPortlet(options) {
			var plid = options.plid || themeDisplay.getPlid();
			var portletId = options.portletId;
			var doAsUserId = options.doAsUserId || themeDisplay.getDoAsUserIdEncoded();
			var placeHolder = options.placeHolder;
			var positionOptions = options.positionOptions;
			var beforePortletLoaded = options.beforePortletLoaded;
			var onComplete = options.onComplete;

			var refreshPortletList = getRefreshPortletList();

			if (placeHolder && placeHolder.jquery) {
				placeHolder = placeHolder[0];
			}

			if (refreshPortletList["_" + portletId]) {
				var url = '<%= themeDisplay.getPathMain() %>/portal/update_layout?p_p_id=' + portletId + '&doAsUserId=' + doAsUserId + '&<%= Constants.CMD %>=<%= Constants.ADD %>&referer=<%= HttpUtil.encodeURL(currentURL) %>&refresh=1';

				if (plid) {
					url += '&p_l_id=' + plid;

					location.href = url;
				}
			}
			else {
				var container = jQuery('.lfr-portlet-column:first');

				if (!container.length) {
					return;
				}

				var firstPortlet = container.find('.portlet-boundary:first');
				var hasStaticPortlet = (firstPortlet.length && firstPortlet[0].isStatic);

				if (!placeHolder) {
					placeHolder = document.createElement('div');
					placeHolder.className = 'loading-animation';
				}

				if (!options.placeHolder && !options.plid) {
					if (!hasStaticPortlet) {
						container.prepend(placeHolder);
					}
					else {
						firstPortlet.after(placeHolder);
					}
				}

				var portletPosition = 0;
				var currentColumnId = 'column-1';

				if (options.placeHolder) {
					var holder = jQuery(placeHolder);
					var column = holder.parent();

					holder.addClass('portlet-boundary');

					portletPosition = column.find('.portlet-boundary').index(placeHolder);

					currentColumnId = Liferay.Util.getColumnId(column[0].id);
				}

				var url = '<%= themeDisplay.getPathMain() %>/portal/update_layout?' + 'p_l_id=' + plid + '&p_p_id=' + portletId + '&p_p_col_id=' + currentColumnId + '&p_p_col_pos=' + portletPosition + '&doAsUserId=' + doAsUserId + '&<%= Constants.CMD %>=<%= Constants.ADD %>&currentURL=<%= HttpUtil.encodeURL(currentURL) %>';

				return addPortletHTML(
					{
						beforePortletLoaded: beforePortletLoaded,
						url: url,
						placeHolder: placeHolder,
						onComplete: onComplete
					}
				);
			}
		}

		function showLayoutTemplates() {
			var url = "<%= themeDisplay.getPathMain() %>/layout_configuration/templates?p_l_id=<%= plid %>&doAsUserId=<%= themeDisplay.getDoAsUserId() %>&redirect=<%= HttpUtil.encodeURL(currentURL) %>";

			jQuery.ajax(
				{
					url: url,
					success: function(response) {
						Liferay.Popup(
							{
								width: 700,
								modal: true,
								message: response,
								position: ['center', 100],
								title: '<%= UnicodeLanguageUtil.get(pageContext, "layout") %>'
							}
						);
					}
				}
			);
		}

		jQuery(
			function() {
				Liferay.Util.addInputType();
				Liferay.Util.addInputFocus();
			}
		);

		Liferay.Portlet.ready(
			function(portletId, jQueryObj) {
				Liferay.Util.addInputType(portletId, jQueryObj);

				if (Liferay.Menu) {
					new Liferay.Menu(
						{
							button: '.lfr-actions',
							context: jQueryObj[0],
							trigger: '.lfr-trigger'
						}
					);
				}
			}
		);

		<c:if test="<%= !themeDisplay.isStatePopUp() %>">

			<%
			String scroll = ParamUtil.getString(request, "scroll");
			%>

			<c:if test="<%= Validator.isNotNull(scroll) %>">
				jQuery(document).last(
					function() {
						document.getElementById("<%= HtmlUtil.escape(scroll) %>").scrollIntoView();
					}
				);
			</c:if>
		</c:if>

		<c:if test="<%= (layoutTypePortlet != null) %>">

			<%
			List portletIds = layoutTypePortlet.getPortletIds();
			%>

			<c:choose>
				<c:when test="<%= portletIds.size() > 0 && !layoutTypePortlet.hasStateMax() %>">
					Liferay.Portlet.list = {<%
						for (int i = 0; i < portletIds.size(); i++) {
							out.print("\"" + portletIds.get(i) + "\":1");

							if (i < portletIds.size() - 1) {
								out.print(",");
							}
						}
					%>};
				</c:when>
				<c:otherwise>
					jQuery(
						function() {
							Liferay.Portlet.processLast();
						}
					);
				</c:otherwise>
			</c:choose>
		</c:if>

		<%
		Group group = null;

		if (layout != null) {
			group = layout.getGroup();
		}
		%>

		<c:if test="<%= (layout != null) && (!group.hasStagingGroup() || group.isStagingGroup()) && LayoutPermissionUtil.contains(permissionChecker, layout, ActionKeys.UPDATE) %>">
			jQuery(
				function() {
					if (Liferay.Layout) {
						var layoutOptions = {};

						if (!themeDisplay.isFreeformLayout()) {
							layoutOptions = {
								boxSelector: '.portlet-boundary:not([isStatic])',
								columnSelector: 'div.lfr-portlet-column',
								clonePortlet: false,
								grid: '#layout-grid',
								handleSelector: '.portlet-title, .portlet-title-default',
								placeHolderClass: 'portlet-sort-helper'
							};
						}
						else {
							layoutOptions = {
								boxSelector: '.portlet-boundary',
								columnSelector: 'div[@id^=layout-column_]',
								freeForm: true
							};
						}

						Liferay.Layout.init(layoutOptions);
					}

					if (Liferay.Navigation) {
						new Liferay.Navigation(
							{
								layoutIds: [<%= ListUtil.toString(layouts, "layoutId") %>],
								navBlock: '#navigation',
								hasPermission: <%= GroupPermissionUtil.contains(permissionChecker, portletGroupId.longValue(), ActionKeys.MANAGE_LAYOUTS) %>
							}
						);
					}

					<%--/*jQuery(".journal-content-eip-text").leditable(
						"<%= themeDisplay.getPathMain() %>/journal_content/update_article_field",
						{
							cancel: Liferay.Language.get('cancel'),
							event: 'click',
							id: 'fieldName',
							name: 'fieldData',
							submit: Liferay.Language.get('ok'),
							type: 'text',
							width: '100%'
						}
					);

					jQuery(".journal-content-eip-text_box").leditable(
						"<%= themeDisplay.getPathMain() %>/journal_content/update_article_field",
						{
							cancel: Liferay.Language.get('cancel'),
							event: 'click',
							id: 'fieldName',
							name: 'fieldData',
							submit: Liferay.Language.get('ok'),
							type: 'textarea',
							width: '100%'
						}
					);

					jQuery(".journal-content-eip-text_area").leditable(
						"<%= themeDisplay.getPathMain() %>/journal_content/update_article_field",
						{
							cancel: Liferay.Language.get('cancel'),
							event: 'click',
							id: 'fieldName',
							name: 'fieldData',
							submit: Liferay.Language.get('ok'),
							type: 'fcktextarea',
							width: '100%'
						}
					);*/--%>
				}
			);
		</c:if>

		if (jQuery.ui && jQuery.ui.tabs) {
			jQuery.extend(
				jQuery.ui.tabs.defaults,
				{
					navClass: 'ui-tabs tabs',
					selectedClass: 'current'
				}
			);
		}

		jQuery(
			function() {
				if (Liferay.Dock) {
					Liferay.Dock.init();
				}

				if (Liferay.Menu) {
					new Liferay.Menu(
						{
							trigger: '.lfr-trigger',
							button: '.lfr-actions'
						}
					);
				}

				if (Liferay.Notice) {
					Liferay.Notice.prototype.setClosing();
				}

				<c:if test="<%= themeDisplay.isSignedIn() %>">
					Liferay._editControlsState = '<%= GetterUtil.getString(SessionClicks.get(request, "liferay_toggle_controls", null), "visible") %>';

					if (Liferay.Util) {
						Liferay.Util.toggleControls();
					}
				</c:if>
			}
		);
	// ]]>
</script>