<%
/**
 * Copyright (c) 2000-2009 Liferay, Inc. All rights reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */
%>

<%
String formattedContent = null;

try {
	double version = ParamUtil.getDouble(request, "version");

	PortletURL curViewPageURL = PortletURLUtil.clone(viewPageURL, renderResponse);
	PortletURL curEditPageURL = PortletURLUtil.clone(editPageURL, renderResponse);
	String attachmentURLPrefix = themeDisplay.getPathMain() + "/wiki/get_page_attachment?p_l_id=" + themeDisplay.getPlid() + "&nodeId=" + wikiPage.getNodeId() + "&title=" + HttpUtil.encodeURL(wikiPage.getTitle()) + "&fileName=";

	WikiPageDisplay pageDisplay = null;

	if (!preview && (version == 0)) {
		pageDisplay = WikiCacheUtil.getDisplay(wikiPage.getNodeId(), title, curViewPageURL, curEditPageURL, attachmentURLPrefix);
	}

	if (pageDisplay != null) {
		formattedContent = pageDisplay.getFormattedContent();
	}
	else {
		formattedContent = WikiUtil.convert(wikiPage, curViewPageURL, curEditPageURL, attachmentURLPrefix);
	}
%>

	<div class="wiki-body">
		<c:choose>
			<c:when test="<%= !followRedirect && (redirectPage != null) %>">
				<div class="portlet-msg-info">
					<%= LanguageUtil.format(pageContext, "this-page-is-currently-redirected-to-x", redirectPage.getTitle()) %>
				</div>

				<c:if test="<%= WikiPagePermission.contains(permissionChecker, wikiPage, ActionKeys.UPDATE) %>">
					<div>
						<input type="button" value="<liferay-ui:message key="remove-redirect" />" onClick="location.href = '<portlet:renderURL><portlet:param name="struts_action" value="/wiki/edit_page" /><portlet:param name="nodeId" value="<%= String.valueOf(node.getNodeId()) %>" /><portlet:param name="title" value="<%= title %>" /><portlet:param name="removeRedirect" value="true" /></portlet:renderURL>'" />
					</div>
				</c:if>
			</c:when>
			<c:when test="<%= Validator.isNull(formattedContent) && WikiPagePermission.contains(permissionChecker, wikiPage, ActionKeys.UPDATE) %>">
				<div class="portlet-msg-info">
					<aui:a href="<%= editPageURL %>" label="this-page-is-empty-edit-it-to-add-some-text" />
				</div>
			</c:when>
			<c:otherwise>
				<%= formattedContent %>
			</c:otherwise>
		</c:choose>
	</div>

<%
}
catch (WikiFormatException wfe) {
%>

	<span class="portlet-msg-error">
		<liferay-ui:message key="the-format-of-this-page-is-not-supported-the-page-content-will-be-shown-unformatted" />
	</span>

	<div class="wiki-body">
		<pre>
<%= wikiPage.getContent() %>
		</pre>
	</div>

<%
}
catch (Exception e) {
	_log.error("Error formatting the wiki page " + wikiPage.getPageId() + " with the format " + wikiPage.getFormat(), e);
%>

	<span class="portlet-msg-error">
		<liferay-ui:message key="an-error-occurred-while-formatting-the-wiki-page" />
	</span>

<%
}
%>

<%!
private static Log _log = LogFactoryUtil.getLog("portal-web.docroot.html.wiki.view_page_content.jsp");
%>