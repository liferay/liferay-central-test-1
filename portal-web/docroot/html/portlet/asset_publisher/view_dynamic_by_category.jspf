<%
/**
 * Copyright (c) 2000-2009 Liferay, Inc. All rights reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */
%>

<%
long[] tagIds = AssetTagLocalServiceUtil.getTagIds(scopeGroupId, tagNames);
long[] notTagIds = AssetTagLocalServiceUtil.getTagIds(scopeGroupId, notTagNames);

if (allowEmptyResults && (tagIds.length == 0) && (notTagIds.length == 0)) {
	tagIds = new long[] {-1};
}

Date now = new Date();

int total = AssetLocalServiceUtil.getAssetsCount(scopeGroupId, classNameIds, tagIds, notTagIds, andOperator, excludeZeroViewCount, now, now);

searchContainer.setTotal(total);

Map<String, List<Asset>> assetsByCategory = new TreeMap<String, List<Asset>>();

List<Asset> assets = AssetLocalServiceUtil.getAssets(scopeGroupId, classNameIds, tagIds, notTagIds, andOperator, orderByColumn1, orderByColumn2, orderByType1, orderByType2, excludeZeroViewCount, now, now, searchContainer.getStart(), total);

for (Asset asset : assets) {
	List<AssetTag> tags = AssetTagLocalServiceUtil.getAssetTags(asset.getAssetId());

	for (AssetTag tag : tags) {
		String tagLabel = null;

		try {
			AssetTagProperty descriptionProperty = AssetTagPropertyLocalServiceUtil.getTagProperty(tag.getTagId(), themeDisplay.getLanguageId());

			tagLabel = descriptionProperty.getValue();
		}
		catch (NoSuchTagPropertyException nstpe1) {
			try {
				AssetTagProperty descriptionProperty = AssetTagPropertyLocalServiceUtil.getTagProperty(tag.getTagId(), "en_US");

				tagLabel = descriptionProperty.getValue();
			}
			catch (NoSuchTagPropertyException nstpe2) {
				tagLabel = StringUtil.upperCaseFirstLetter(tag.getName());
			}
		}

		List assetsList = assetsByCategory.get(tagLabel);

		if (assetsList == null) {
			assetsList = new ArrayList();

			assetsByCategory.put(tagLabel, assetsList);
		}

		assetsList.add(asset);

		break;
	}
}

Iterator<Map.Entry<String, List<Asset>>> itr = assetsByCategory.entrySet().iterator();

if (!itr.hasNext()) {
	if (!showPortletWithNoResults) {
		renderRequest.setAttribute(WebKeys.PORTLET_CONFIGURATOR_VISIBILITY, Boolean.TRUE);
	}
%>

	<liferay-ui:message key="there-are-no-results" />

<%
}

while (itr.hasNext()) {
	Map.Entry<String, List<Asset>> entry = itr.next();

	String tagLabel = entry.getKey();
	List<Asset> results = entry.getValue();

	request.setAttribute("view.jsp-results", results);
%>

	<h3 class="asset-tag-label"><%= tagLabel %></h3>

	<div class="asset-tag-entries">

		<%
		for (int assetIndex = 0; (assetIndex < results.size()) && (assetIndex < delta); assetIndex++) {
			Asset asset = results.get(assetIndex);

			String className = PortalUtil.getClassName(asset.getClassNameId());
			long classPK = asset.getClassPK();

			String title = asset.getTitle();
			String summary = StringPool.BLANK;
			String viewURL = StringPool.BLANK;
			String viewURLMessage = StringPool.BLANK;
			String editURL = StringPool.BLANK;

			boolean show = true;

			request.setAttribute("view.jsp-assetIndex", new Integer(assetIndex));

			request.setAttribute("view.jsp-asset", asset);

			request.setAttribute("view.jsp-title", title);
			request.setAttribute("view.jsp-summary", summary);
			request.setAttribute("view.jsp-viewURL", viewURL);
			request.setAttribute("view.jsp-viewURLMessage", viewURLMessage);

			request.setAttribute("view.jsp-className", className);
			request.setAttribute("view.jsp-classPK", new Long(classPK));

			request.setAttribute("view.jsp-show", new Boolean(show));

			try {
		%>

				<%@ include file="/html/portlet/asset_publisher/view_display.jspf" %>

		<%
			}
			catch (Exception e) {
				_log.error(e.getMessage());
			}
		}
		%>

	</div>

<%
}
%>