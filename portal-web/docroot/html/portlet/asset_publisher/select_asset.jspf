<%
/**
 * Copyright (c) 2000-2010 Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */
%>

<%
String modelResourceName = ResourceActionsUtil.getModelResource(locale, typeSelection);

String tabs1 = ParamUtil.getString(request, "tabs1", modelResourceName);
String tabNames = modelResourceName + StringPool.COMMA + "shared-entries";

long groupId = tabs1.equals(modelResourceName) ? scopeGroupId : themeDisplay.getCompanyGroupId();
long userId = 0;

int assetEntryOrder = ParamUtil.getInteger(request, "assetEntryOrder", -1);

String keywords = ParamUtil.getString(request, "keywords");

PortletURL portletURL = renderResponse.createRenderURL();

portletURL.setParameter("struts_action", "/portlet_configuration/edit_configuration");
portletURL.setParameter("redirect", redirect);
portletURL.setParameter("backURL", redirect);
portletURL.setParameter("portletResource", portletResource);
portletURL.setParameter("typeSelection", typeSelection);
%>

<liferay-ui:tabs
	backURL="<%= configurationRenderURL.toString() %>"
	names="<%= tabNames %>"
	url="<%= portletURL.toString() %>"
/>

<div class="asset-search">
	<liferay-portlet:renderURL varImpl="searchURL">
		<portlet:param name="struts_action" value="/portlet_configuration/edit_configuration" />
	</liferay-portlet:renderURL>

	<aui:form action="<%= searchURL %>" method="post" name="searchFm">
		<aui:input name="redirect" type="hidden" value="<%= redirect %>" />
		<aui:input name="backURL" type="hidden" value="<%= redirect %>" />
		<aui:input name="portletResource" type="hidden" value="<%= portletResource %>" />
		<aui:input name="typeSelection" type="hidden" value="<%= typeSelection %>" />

		<span class="aui-search-bar">
			<aui:input inlineField="<%= true %>" id="keywords" label="" name="keywords" size="30" title="search-assets" type="text" />

			<aui:button type="submit" value="search" />
		</span>
	</aui:form>
</div>

<c:choose>
	<c:when test="<%= Validator.isNotNull(keywords) %>">

		<%
		List<String> headerNames = new ArrayList<String>();

		headerNames.add("title");
		headerNames.add("description");
		headerNames.add("user-name");
		headerNames.add("modified-date");
		headerNames.add("score");

		SearchContainer searchContainer = new SearchContainer(renderRequest, null, null, SearchContainer.DEFAULT_CUR_PARAM, SearchContainer.DEFAULT_DELTA, portletURL, headerNames, LanguageUtil.format(pageContext, "no-results-were-found-that-matched-the-keywords-x", "<strong>" + HtmlUtil.escape(keywords) + "</strong>"));

		try {
			AssetRendererFactory assetRendererFactory = AssetRendererFactoryRegistryUtil.getAssetRendererFactoryByClassName(typeSelection);

			Hits results = AssetEntryLocalServiceUtil.search(company.getCompanyId(), assetRendererFactory.getPortletId(), keywords, searchContainer.getStart(), searchContainer.getEnd());

			int total = results.getLength();

			searchContainer.setTotal(total);

			List resultRows = searchContainer.getResultRows();

			for (int i = 0; i < results.getDocs().length; i++) {
				com.liferay.portal.kernel.search.Document doc = results.doc(i);

				ResultRow row = new ResultRow(doc, i, i);

				long entryId = GetterUtil.getLong(doc.get(Field.ENTRY_CLASS_PK));

				AssetEntry entry = AssetEntryLocalServiceUtil.getEntry(typeSelection, entryId);

				entry = entry.toEscapedModel();

				StringBundler sb = new StringBundler(11);

				sb.append("javascript:");
				sb.append(renderResponse.getNamespace());
				sb.append("selectAsset('");
				sb.append(entry.getEntryId());
				sb.append("', '");
				sb.append(entry.getEntryId());
				sb.append("', '");
				sb.append(UnicodeFormatter.toString(entry.getTitle()));
				sb.append("', '");
				sb.append(assetEntryOrder);
				sb.append("');");

				String rowHREF = sb.toString();

				// Title

				row.addText(entry.getTitle(), rowHREF);

				// Description

				row.addText(entry.getDescription(), rowHREF);

				// User name

				row.addText(HtmlUtil.escape(entry.getUserName()), rowHREF);

				// Modified date

				row.addText(dateFormatDate.format(entry.getModifiedDate()), rowHREF);

				// Score

				row.addScore(results.score(i));

				// Add result row

				resultRows.add(row);
			}
		}
		catch (Exception e) {
		}
		%>

		<liferay-ui:search-iterator searchContainer="<%= searchContainer %>" />
	</c:when>
	<c:otherwise>

		<%
		List<String> headerNames = new ArrayList<String>();

		headerNames.add("title");
		headerNames.add("description");
		headerNames.add("user-name");
		headerNames.add("modified-date");

		SearchContainer searchContainer = new SearchContainer(renderRequest, null, null, SearchContainer.DEFAULT_CUR_PARAM, SearchContainer.DEFAULT_DELTA, portletURL, headerNames, "there-are-no-results");

		AssetEntryQuery assetEntryQuery = new AssetEntryQuery();

		assetEntryQuery.setClassName(typeSelection);
		assetEntryQuery.setGroupIds(new long[] {groupId});
		assetEntryQuery.setEnd(searchContainer.getEnd());
		assetEntryQuery.setStart(searchContainer.getStart());

		int total = AssetEntryLocalServiceUtil.getEntriesCount(assetEntryQuery);

		searchContainer.setTotal(total);

		List results = AssetEntryLocalServiceUtil.getEntries(assetEntryQuery);

		searchContainer.setResults(results);

		List resultRows = searchContainer.getResultRows();

		for (int i = 0; i < results.size(); i++) {
			AssetEntry entry = (AssetEntry)results.get(i);

			entry = entry.toEscapedModel();

			ResultRow row = new ResultRow(entry, entry.getEntryId(), i);

			StringBundler sb = new StringBundler(11);

			sb.append("javascript:");
			sb.append(renderResponse.getNamespace());
			sb.append("selectAsset('");
			sb.append(entry.getEntryId());
			sb.append("', '");
			sb.append(entry.getEntryId());
			sb.append("', '");
			sb.append(UnicodeFormatter.toString(entry.getTitle()));
			sb.append("', '");
			sb.append(assetEntryOrder);
			sb.append("');");

			String rowHREF = sb.toString();

			// Title

			row.addText(entry.getTitle(), rowHREF);

			// Description

			row.addText(entry.getDescription(), rowHREF);

			// User name

			row.addText(HtmlUtil.escape(entry.getUserName()), rowHREF);

			// Modified date

			row.addText(dateFormatDate.format(entry.getModifiedDate()), rowHREF);

			// Add result row

			resultRows.add(row);
		}
		%>

		<liferay-ui:search-iterator searchContainer="<%= searchContainer %>" />
	</c:otherwise>
</c:choose>

<br />

<c:if test="<%= windowState.equals(WindowState.MAXIMIZED) %>">
	<aui:script>
		Liferay.Util.focusFormField(document.<portlet:namespace />searchFm.<portlet:namespace />keywords);
	</aui:script>
</c:if>