<%
/**
 * Copyright (c) 2000-2010 Liferay, Inc. All rights reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */
%>

<%
Map<String, PortletURL> addPortletURLs = getAddPortletURLs(renderRequest, renderResponse, allAssetTagNames, classNameIds);
%>

<c:if test="<%= !addPortletURLs.isEmpty() %>">
	<aui:form name="fm">
		<div class="lfr-meta-actions edit-controls">
			<aui:select label="" name="assetURL" onChange='<%= renderResponse.getNamespace() + "addNewAsset();" %>'>
				<aui:option label='<%= LanguageUtil.get(pageContext, "add-new") + "..." %>' value="" />

				<%
				for (Map.Entry<String, PortletURL> entry : addPortletURLs.entrySet()) {
					String className = entry.getKey();
					PortletURL addPortletURL = entry.getValue();
				%>

					<aui:option label='<%= "model.resource." + className %>' value="<%= addPortletURL.toString() %>" />

				<%
				}
				%>

			</aui:select>
		</div>
	</aui:form>

	<aui:script>
		function <portlet:namespace/>addNewAsset() {
			var url = document.<portlet:namespace />fm.<portlet:namespace />assetURL.value;

			if (url != '') {
				location.href = url;
			}
		}
	</aui:script>
</c:if>

<%!
public PortletURL getAddPortletURL(RenderRequest renderRequest, PortletResponse portletResponse, String[] allAssetTagNames, String className) throws Exception {
	ThemeDisplay themeDisplay = (ThemeDisplay)renderRequest.getAttribute(WebKeys.THEME_DISPLAY);

	AssetRendererFactory assetRendererFactory = AssetRendererFactoryRegistryUtil.getAssetRendererFactoryByClassName(className);

	PortletURL addPortletURL = assetRendererFactory.getURLAdd((LiferayPortletRequest)renderRequest, (LiferayPortletResponse)portletResponse);

	if (addPortletURL != null) {
		addPortletURL.setWindowState(WindowState.MAXIMIZED);
		addPortletURL.setPortletMode(PortletMode.VIEW);

		addPortletURL.setParameter("redirect", themeDisplay.getURLCurrent());
		addPortletURL.setParameter("backURL", themeDisplay.getURLCurrent());

		String referringPortletResource = ParamUtil.getString(renderRequest, "portletResource");

		if (Validator.isNotNull(referringPortletResource)) {
			addPortletURL.setParameter("referringPortletResource", referringPortletResource);
		}
		else {
			addPortletURL.setParameter("assetTagNames", StringUtil.merge(allAssetTagNames));
		}
	}

	return addPortletURL;
}

public Map<String, PortletURL> getAddPortletURLs(RenderRequest renderRequest, PortletResponse portletResponse, String[] allAssetTagNames, long[] classNameIds) throws Exception {
	Map<String, PortletURL> addPortletURLs = new HashMap<String, PortletURL>();

	for (long classNameId : classNameIds) {
		ClassName className = ClassNameServiceUtil.getClassName(classNameId);

		PortletURL addPortletURL = getAddPortletURL(renderRequest, portletResponse, allAssetTagNames, className.getValue());

		if (addPortletURL != null) {
			addPortletURLs.put(className.getValue(), addPortletURL);
		}
	}

	return addPortletURLs;
}
%>