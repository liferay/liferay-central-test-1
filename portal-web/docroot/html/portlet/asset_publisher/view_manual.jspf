<%
/**
 * Copyright (c) 2000-2009 Liferay, Inc. All rights reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */
%>

<%
int total = assetEntryXmls.length;

searchContainer.setTotal(total);

List results = ListUtil.fromArray(assetEntryXmls);

int end = (assetEntryXmls.length < searchContainer.getEnd()) ? assetEntryXmls.length : searchContainer.getEnd();

results = results.subList(searchContainer.getStart(), end);

searchContainer.setResults(results);

request.setAttribute("view.jsp-results", results);

for (int assetEntryIndex = 0; assetEntryIndex < results.size(); assetEntryIndex++) {
	String assetEntryXml = (String)results.get(assetEntryIndex);

	Document doc = SAXReaderUtil.read(assetEntryXml);

	Element root = doc.getRootElement();

	long assetEntryId = GetterUtil.getLong(root.element("asset-entry-id").getText());

	AssetEntry assetEntry = null;

	try {
		assetEntry = AssetEntryLocalServiceUtil.getEntry(assetEntryId);
	}
	catch (NoSuchEntryException nsee) {
		continue;
	}

	AssetRendererFactory assetRendererFactory = AssetUtil.getAssetRendererFactoryByClassName(assetEntry.getClassName());
	AssetRenderer assetRenderer = assetRendererFactory.getAssetRenderer(assetEntry.getClassPK());

	String title = assetEntry.getTitle();

	boolean show = true;
	boolean print = false;

	request.setAttribute("view.jsp-assetEntryIndex", new Integer(assetEntryIndex));

	request.setAttribute("view.jsp-assetEntry", assetEntry);
	request.setAttribute("view.jsp-assetRendererFactory", assetRendererFactory);
	request.setAttribute("view.jsp-assetRenderer", assetRenderer);

	request.setAttribute("view.jsp-title", title);

	request.setAttribute("view.jsp-show", new Boolean(show));
	request.setAttribute("view.jsp-print", new Boolean(print));

	try {
%>

		<%@ include file="/html/portlet/asset_publisher/view_display.jspf" %>

<%
	}
	catch (Exception e) {
		_log.error(e.getMessage());
	}
}
%>