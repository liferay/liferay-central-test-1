<%
/**
 * Copyright (c) 2000-2010 Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */
%>

<%
String tabs1 = ParamUtil.getString(request, "tabs1", "entries");

long groupId = tabs1.equals("entries") ? scopeGroupId : themeDisplay.getCompanyGroupId();
long userId = 0;

int assetEntryOrder = ParamUtil.getInteger(request, "assetEntryOrder", -1);

String keywords = ParamUtil.getString(request, "keywords");

PortletURL portletURL = renderResponse.createRenderURL();

portletURL.setParameter("struts_action", "/portlet_configuration/edit_configuration");
portletURL.setParameter("redirect", redirect);
portletURL.setParameter("backURL", redirect);
portletURL.setParameter("portletResource", portletResource);
portletURL.setParameter("typeSelection", BlogsEntry.class.getName());
%>

<liferay-ui:tabs
	backURL="<%= configurationRenderURL.toString() %>"
	names="entries,shared-entries"
	url="<%= portletURL.toString() %>"
/>

<div>
	<label for="<portlet:namespace />keywords"><liferay-ui:message key="search" /></label>

	<input id="<portlet:namespace />keywords" name="<portlet:namespace />keywords" size="30" type="text" value="<%= HtmlUtil.escape(keywords) %>" onkeypress="if (event.keyCode == 13) { submitForm(document.<portlet:namespace />fm, '<%= portletURL.toString() %>'); }" />

	<input type="button" value="<liferay-ui:message key="search" />" onclick="submitForm(document.<portlet:namespace />fm, '<%= portletURL.toString() %>');" />
</div>

<div class="separator"><!-- --></div>

<c:choose>
	<c:when test="<%= Validator.isNotNull(keywords) %>">

		<%
		List<String> headerNames = new ArrayList<String>();

		headerNames.add("entry");
		headerNames.add("user-name");
		headerNames.add("modified-date");
		headerNames.add("score");

		SearchContainer searchContainer = new SearchContainer(renderRequest, null, null, SearchContainer.DEFAULT_CUR_PARAM, SearchContainer.DEFAULT_DELTA, portletURL, headerNames, LanguageUtil.format(pageContext, "no-entries-were-found-that-matched-the-keywords-x", "<strong>" + HtmlUtil.escape(keywords) + "</strong>"));

		try {
			Indexer indexer = IndexerRegistryUtil.getIndexer(BlogsEntry.class);

			SearchContext searchContext = SearchContextFactory.getInstance(request);

			searchContext.setEnd(searchContainer.getEnd());
			searchContext.setGroupId(groupId);
			searchContext.setKeywords(keywords);
			searchContext.setOwnerUserId(userId);
			searchContext.setStart(searchContainer.getStart());

			Hits results = indexer.search(searchContext);

			int total = results.getLength();

			searchContainer.setTotal(total);

			List resultRows = searchContainer.getResultRows();

			for (int i = 0; i < results.getDocs().length; i++) {
				com.liferay.portal.kernel.search.Document doc = results.doc(i);

				ResultRow row = new ResultRow(doc, i, i);

				long entryId = GetterUtil.getLong(doc.get(Field.ENTRY_CLASS_PK));

				BlogsEntry entry = BlogsEntryLocalServiceUtil.getEntry(entryId);

				entry = entry.toEscapedModel();

				AssetEntry assetEntry = AssetEntryLocalServiceUtil.getEntry(BlogsEntry.class.getName(), entry.getEntryId());

				StringBundler sb = new StringBundler(11);

				sb.append("javascript:");
				sb.append(renderResponse.getNamespace());
				sb.append("selectAsset('");
				sb.append(assetEntry.getEntryId());
				sb.append("', '");
				sb.append(assetEntry.getEntryId());
				sb.append("', '");
				sb.append(UnicodeFormatter.toString(assetEntry.getTitle()));
				sb.append("', '");
				sb.append(assetEntryOrder);
				sb.append("');");

				String rowHREF = sb.toString();

				// Title

				row.addText(entry.getTitle(), rowHREF);

				// User name

				row.addText(HtmlUtil.escape(entry.getUserName()), rowHREF);

				// Modified date

				row.addText(dateFormatDate.format(entry.getModifiedDate()), rowHREF);

				// Score

				row.addScore(results.score(i));

				// Add result row

				resultRows.add(row);
			}
		}
		catch (Exception e) {
		}
		%>

		<liferay-ui:search-iterator searchContainer="<%= searchContainer %>" />
	</c:when>
	<c:otherwise>

		<%
		List<String> headerNames = new ArrayList<String>();

		headerNames.add("entry");
		headerNames.add("user-name");
		headerNames.add("modified-date");

		SearchContainer searchContainer = new SearchContainer(renderRequest, null, null, SearchContainer.DEFAULT_CUR_PARAM, SearchContainer.DEFAULT_DELTA, portletURL, headerNames, "there-are-no-entries");

		int total = BlogsEntryLocalServiceUtil.getGroupEntriesCount(groupId, WorkflowConstants.STATUS_APPROVED);

		searchContainer.setTotal(total);

		List results = BlogsEntryLocalServiceUtil.getGroupEntries(groupId, WorkflowConstants.STATUS_APPROVED, searchContainer.getStart(), searchContainer.getEnd());

		searchContainer.setResults(results);

		List resultRows = searchContainer.getResultRows();

		for (int i = 0; i < results.size(); i++) {
			BlogsEntry entry = (BlogsEntry)results.get(i);

			entry = entry.toEscapedModel();

			ResultRow row = new ResultRow(entry, entry.getEntryId(), i);

			AssetEntry assetEntry = AssetEntryLocalServiceUtil.getEntry(BlogsEntry.class.getName(), entry.getEntryId());

			StringBundler sb = new StringBundler(11);

			sb.append("javascript:");
			sb.append(renderResponse.getNamespace());
			sb.append("selectAsset('");
			sb.append(assetEntry.getEntryId());
			sb.append("', '");
			sb.append(assetEntry.getEntryId());
			sb.append("', '");
			sb.append(UnicodeFormatter.toString(assetEntry.getTitle()));
			sb.append("', '");
			sb.append(assetEntryOrder);
			sb.append("');");

			String rowHREF = sb.toString();

			// Title

			row.addText(entry.getTitle(), rowHREF);

			// User name

			row.addText(HtmlUtil.escape(entry.getUserName()), rowHREF);

			// Modified date

			row.addText(dateFormatDate.format(entry.getModifiedDate()), rowHREF);

			// Add result row

			resultRows.add(row);
		}
		%>

		<liferay-ui:search-iterator searchContainer="<%= searchContainer %>" />
	</c:otherwise>
</c:choose>

<br />

<c:if test="<%= windowState.equals(WindowState.MAXIMIZED) %>">
	<aui:script>
		Liferay.Util.focusFormField(document.<portlet:namespace />fm.<portlet:namespace />keywords);
	</aui:script>
</c:if>