<%--
/**
 * Copyright (c) 2000-2012 Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */
--%>

<%
String dataType = fields.get(FieldConstants.DATA_TYPE);
String name = fields.get(FieldConstants.NAME);
String type = fields.get(FieldConstants.TYPE);

String value = null;

if (fieldsModel.contains(name)) {
	com.liferay.portlet.dynamicdatamapping.storage.Field field = fieldsModel.get(name);

	value = field.getRenderedValue(themeDisplay.getLocale());

	if (dataType.equals(FieldConstants.HTML)) {
		value = "<a href=\"javascript:" + renderResponse.getNamespace() + "viewHTMLValue('" + HtmlUtil.escape(value) + "');\">(" + LanguageUtil.get(pageContext, "preview") + ")</a>";
	}
}
else {
	value = StringPool.BLANK;
}

if (editable) {
	row.addText(value, rowURL);
}
else {
	row.addText(value);
}
%>

<aui:script>

Liferay.provide(
	window,
	'<portlet:namespace />viewHTMLValue',
	function(content) {
		var A = AUI();

		var dialog = new A.Dialog(
			{
				align: Liferay.Util.Window.ALIGN_CENTER,
				bodyContent: content,
				buttons: [
					{
						handler: function() {
							this.close();
						},
						label: '<liferay-ui:message key="ok" />'
					}
				],
				modal: true,
				title: '<liferay-ui:message key="content" />',
				width: 400
			}
		).render();
	},
	['aui-dialog']
);

</aui:script>