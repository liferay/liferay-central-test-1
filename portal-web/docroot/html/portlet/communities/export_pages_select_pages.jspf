<%
/**
 * Copyright (c) 2000-2010 Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */
%>

<aui:fieldset label="scope" style='<%= (proposalId > 0) ? "display: none;" : "" %>'>
	<c:choose>
		<c:when test="<%= !publish %>">

			<%
			String taglibOnClick = renderResponse.getNamespace() + "showTabs(); Liferay.LayoutExporter.all({pane: '#" + renderResponse.getNamespace() + "pane', obj: this, publish: " + publish + "});";
			%>

			<aui:input checked="<%= results.isEmpty() %>" id="scope_all_pages" label="all-pages" name="scope" type="radio" value="all-pages" onClick="<%= taglibOnClick %>" />

			<%
			taglibOnClick = renderResponse.getNamespace() + "hideTabs(); Liferay.LayoutExporter.selected({pane: '#" + renderResponse.getNamespace() + "pane', obj: this, publish: " + publish + "});";
			%>

			<aui:input checked="<%= !results.isEmpty() %>" id="scope_selected_pages" label="selected-pages" name="scope" type="radio" value="selected-pages" onClick="<%= taglibOnClick %>" />
		</c:when>
		<c:otherwise>

			<%
			String taglibOnClick = "Liferay.LayoutExporter.all({pane: '#" + renderResponse.getNamespace() + "pane', obj: this, publish: " + publish + "});";
			%>

			<aui:input checked="<%= results.isEmpty() %>" disabled="<%= selLayout != null %>" id="scope_all_pages" label="all-pages" name="scope" type="radio" value="all-pages" onClick="<%= taglibOnClick %>" />

			<c:if test="<%= !results.isEmpty() %>">

				<%
				taglibOnClick = "Liferay.LayoutExporter.selected({pane: '#" + renderResponse.getNamespace() + "pane', obj: this, publish: " + publish + "});";
				%>

				<aui:input checked="<%= !results.isEmpty() %>" id="scope_selected_pages" label="selected-pages" name="scope" type="radio" value="selected-pages" onClick="<%= taglibOnClick %>" />
			</c:if>
		</c:otherwise>
	</c:choose>
</aui:fieldset>

<div class="<%= results.isEmpty() ? "aui-helper-hidden" : "" %>" id="<portlet:namespace />pane" style="border-color: #CCC; border-style: solid; border-width: 0px 1px 1px 1px; height: 380px; overflow: auto; padding: 5px;">
	<c:choose>
		<c:when test="<%= !publish %>">
			<liferay-util:include page="/html/portlet/communities/tree_js.jsp">
				<liferay-util:param name="selectableTree" value="1" />
				<liferay-util:param name="treeId" value="<%= treeKey %>" />
			</liferay-util:include>
		</c:when>
		<c:otherwise>

			<%
			int total = results.size();

			List<String> headerNames = new ArrayList<String>();

			headerNames.add("pages");
			headerNames.add("type");

			SearchContainer searchContainer = new SearchContainer(renderRequest, null, null, SearchContainer.DEFAULT_CUR_PARAM, total, portletURL, headerNames, null);

			searchContainer.setTotal(total);
			searchContainer.setResults(results);
			searchContainer.setRowChecker(new ExportPageChecker(renderResponse, "left", "top", RowChecker.COLSPAN, "exportPagesFm", RowChecker.ALL_ROW_IDS, RowChecker.ROW_IDS));

			List resultRows = searchContainer.getResultRows();

			for (int i = 0; i < results.size(); i++) {
				Layout curLayout = (Layout)results.get(i);

				ResultRow row = new ResultRow(curLayout, curLayout.getPrimaryKey(), i);

				row.addJSP("left", "top", 2, "/html/portlet/communities/export_page_options.jsp");

				resultRows.add(row);
			}
			%>

			<liferay-ui:search-iterator searchContainer="<%= searchContainer %>" paginate="<%= false %>" />
		</c:otherwise>
	</c:choose>
</div>

<aui:script use="aui-base">
	var selectedPages = A.one('#<portlet:namespace />scope_selected_pages');

	if (selectedPages && selectedPages.get('checked') && <%= !publish %>) {
		<portlet:namespace />hideTabs();
	}
</aui:script>

<aui:script>
	function <portlet:namespace />hideTabs() {
		var optionsTab = AUI().one('#<portlet:namespace />exportPagesTabsoptionsTabsId');
		var schedulerTab = AUI().one('#<portlet:namespace />exportPagesTabsschedulerTabsId');
		var remoteOptionsTab = AUI().one('#<portlet:namespace />exportPagesTabsremote-optionsTabsId');

		if (optionsTab) {
			optionsTab.hide();
		}

		if (schedulerTab) {
			schedulerTab.hide();
		}

		if (remoteOptionsTab) {
			remoteOptionsTab.hide();
		}
	}

	function <portlet:namespace />showTabs() {
		var optionsTab = AUI().one('#<portlet:namespace />exportPagesTabsoptionsTabsId');
		var schedulerTab = AUI().one('#<portlet:namespace />exportPagesTabsschedulerTabsId');
		var remoteOptionsTab = AUI().one('#<portlet:namespace />exportPagesTabsremote-optionsTabsId');

		if (optionsTab) {
			optionsTab.show();
		}

		if (schedulerTab) {
			schedulerTab.show();
		}

		if (remoteOptionsTab) {
			remoteOptionsTab.show();
		}
	}
</aui:script>