<%
/**
 * Copyright (c) 2000-2009 Liferay, Inc. All rights reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */
%>

<c:if test="<%= DLFileEntryPermission.contains(permissionChecker, fileEntry, ActionKeys.VIEW) %>">

	<%
	String fileUrl = themeDisplay.getPortalURL() + themeDisplay.getPathContext() + "/document/" + themeDisplay.getScopeGroupId() + StringPool.SLASH + folderId + StringPool.SLASH + HttpUtil.encodeURL(fileEntry.getTitle());
	String webDavUrl = StringPool.BLANK;

	if (portletDisplay.isWebDAVEnabled()) {
		StringBuilder sb = new StringBuilder();

		if (folderId != DLFolderConstants.DEFAULT_PARENT_FOLDER_ID) {
			DLFolder curFolder = DLFolderLocalServiceUtil.getFolder(folderId);

			while (true) {
				sb.insert(0, HttpUtil.encodeURL(curFolder.getName(), true));
				sb.insert(0, StringPool.SLASH);

				if (curFolder.getParentFolderId() == DLFolderConstants.DEFAULT_PARENT_FOLDER_ID) {
					break;
				}
				else {
					curFolder = DLFolderLocalServiceUtil.getFolder(curFolder.getParentFolderId());
				}
			}
		}

		sb.append(StringPool.SLASH);
		sb.append(HttpUtil.encodeURL(fileEntry.getTitle(), true));

		Group group = themeDisplay.getScopeGroup();

		webDavUrl = themeDisplay.getPortalURL() + "/tunnel-web/secure/webdav/" + company.getWebId() + group.getFriendlyURL() + "/document_library" + sb.toString();
	}

	String officeDoc = null;

	String curExtension = FileUtil.getExtension(fileEntry.getTitle());

	if (portletDisplay.isWebDAVEnabled() && BrowserSnifferUtil.isIe(request)) {
		if (curExtension.equalsIgnoreCase("doc") ||
			curExtension.equalsIgnoreCase("dot") ||
			curExtension.equalsIgnoreCase("ppt") ||
			curExtension.equalsIgnoreCase("xls")) {

			officeDoc = "SharePoint.OpenDocuments.1";
		}
		else if (curExtension.equalsIgnoreCase("docx") ||
				 curExtension.equalsIgnoreCase("pptx") ||
				 curExtension.equalsIgnoreCase("xlsx")) {

			officeDoc = "SharePoint.OpenDocuments.2";
		}
	}
%>

	<aui:script>
		function <portlet:namespace />openDocument() {
			var fileUrl = "<%= fileUrl %>";
			var webDavUrl = "<%= webDavUrl %>";

			<c:choose>
				<c:when test="<%= officeDoc != null %>">
					var officeDoc = new ActiveXObject("<%= officeDoc %>");

					if (officeDoc) {
						officeDoc.EditDocument(webDavUrl);
					}
					else {
						window.location.href = fileUrl;
					}
				</c:when>
				<c:otherwise>
					window.location.href = fileUrl;
				</c:otherwise>
			</c:choose>
		}
	</aui:script>

	<c:if test="<%= officeDoc != null %>">
		<liferay-ui:icon
			image="../document_library/msoffice"
			url='<%= "javascript:" + renderResponse.getNamespace() + "openDocument();" %>'
			message='<%= LanguageUtil.get(pageContext, "open-in-ms-office") %>'
		/>
	</c:if>
</c:if>