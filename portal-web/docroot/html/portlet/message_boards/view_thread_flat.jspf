<%
/**
 * Copyright (c) 2000-2009 Liferay, Inc. All rights reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */
%>

<%
PortletURL portletURL = renderResponse.createRenderURL();

portletURL.setParameter("struts_action", "/message_boards/view_message");
portletURL.setParameter("messageId", String.valueOf(message.getMessageId()));

SearchContainer searchContainer = null;

if (threadView.equals(MBThreadConstants.THREAD_VIEW_FLAT)) {
	int delta = 20;
	int position = 0;

	if (ParamUtil.getInteger(renderRequest, SearchContainer.DEFAULT_CUR_PARAM) < 1) {
		position = MBMessageLocalServiceUtil.getPositionInThread(message.getMessageId());
	}

	searchContainer = new SearchContainer(renderRequest, null, null, SearchContainer.DEFAULT_CUR_PARAM, delta, portletURL, null, null, position);

	int total = MBMessageLocalServiceUtil.getThreadMessagesCount(message.getThreadId(), StatusConstants.APPROVED);

	searchContainer.setTotal(total);

	messages = MBMessageLocalServiceUtil.getThreadMessages(message.getThreadId(), StatusConstants.APPROVED, searchContainer.getStart(), searchContainer.getEnd());

	searchContainer.setResults(messages);
}
%>

<c:if test="<%= threadView.equals(MBThreadConstants.THREAD_VIEW_FLAT) && (searchContainer.getTotal() > searchContainer.getDelta()) %>">
	<div class="taglib-search-iterator-page-iterator-top">
		<liferay-ui:search-paginator searchContainer="<%= searchContainer %>" />
	</div>
</c:if>

<%
boolean editable = true;

int depth = 0;

for (int i = 0; i < messages.size(); i++) {
	message = messages.get(i);

	String className = "portlet-section-alternate results-row alt";
	String classHoverName = "portlet-section-alternate-hover results-row alt hover";

	if (MathUtil.isOdd(i)) {
		className = "portlet-section-body results-row";
		classHoverName = "portlet-section-body-hover results-row hover";
	}
%>

	<%@ include file="/html/portlet/message_boards/view_thread_message.jspf" %>

<%
}
%>

<c:if test="<%= threadView.equals(MBThreadConstants.THREAD_VIEW_FLAT) && (searchContainer.getTotal() > searchContainer.getDelta()) %>">
	<div class="taglib-search-iterator-page-iterator-bottom">
		<liferay-ui:search-paginator searchContainer="<%= searchContainer %>" />
	</div>
</c:if>