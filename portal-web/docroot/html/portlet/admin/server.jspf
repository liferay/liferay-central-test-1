<%
/**
 * Copyright (c) 2000-2009 Liferay, Inc. All rights reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */
%>

<%= ReleaseInfo.getReleaseInfo() %><br />

<%
long uptimeDiff = System.currentTimeMillis() - PortalUtil.getUptime().getTime();
long days = uptimeDiff / Time.DAY;
long hours = (uptimeDiff / Time.HOUR) % 24;
long minutes = (uptimeDiff / Time.MINUTE) % 60;
long seconds = (uptimeDiff / Time.SECOND) % 60;

NumberFormat numberFormat = NumberFormat.getInstance();

numberFormat.setMaximumIntegerDigits(2);
numberFormat.setMinimumIntegerDigits(2);
%>

<liferay-ui:message key="uptime" />:

<c:if test="<%= days > 0 %>">
	<%= days %> <%= LanguageUtil.get(pageContext, ((days > 1) ? "days" : "day")) %>,
</c:if>

<%= numberFormat.format(hours) %>:<%= numberFormat.format(minutes) %>:<%= numberFormat.format(seconds) %>

<br /><br />

<c:choose>
	<c:when test="<%= windowState.equals(WindowState.NORMAL) %>">
		<html:link page="/admin/view?windowState=maximized&portletMode=view&actionURL=0"><liferay-ui:message key="more" /></html:link> &raquo;
	</c:when>
	<c:otherwise>
		<liferay-ui:tabs
			names="resources,log-levels,properties,data-migration,file-uploads,mail,OpenOffice,script,shutdown"
			param="tabs2"
			url="<%= portletURL.toString() %>"
		/>

		<c:choose>
			<c:when test='<%= tabs2.equals("log-levels") %>'>
				<liferay-ui:tabs
					names="update-categories,add-category"
					param="tabs3"
					url="<%= portletURL.toString() %>"
				/>

				<c:choose>
					<c:when test='<%= tabs3.equals("add-category") %>'>
						<table class="lfr-table">
						<tr>
							<td>
								<input class="lfr-input-text" name="<portlet:namespace />loggerName" type="text" />

								<select name="<portlet:namespace />priority">

									<%
									for (int i = 0; i < Levels.ALL_LEVELS.length; i++) {
									%>

										<option <%= Level.INFO.equals(Levels.ALL_LEVELS[i]) ? "selected" : "" %> value="<%= Levels.ALL_LEVELS[i] %>"><%= Levels.ALL_LEVELS[i] %></option>

									<%
									}
									%>

								</select>

								<input type="button" value="<liferay-ui:message key="save" />" onClick="<portlet:namespace />saveServer('addLogLevel');" />
							</td>
						</tr>
						</table>
					</c:when>
					<c:otherwise>

						<%
						List<String> headerNames = new ArrayList<String>();

						headerNames.add("category");
						headerNames.add("level");

						SearchContainer searchContainer = new SearchContainer(renderRequest, null, null, SearchContainer.DEFAULT_CUR_PARAM, SearchContainer.DEFAULT_DELTA, portletURL, headerNames, null);

						Map currentLoggerNames = new TreeMap();

						Enumeration enu = LogManager.getCurrentLoggers();

						while (enu.hasMoreElements()) {
							Logger logger = (Logger)enu.nextElement();

							currentLoggerNames.put(logger.getName(), logger);
						}

						List results = ListUtil.fromCollection(currentLoggerNames.entrySet());

						Iterator itr = results.iterator();

						while (itr.hasNext()) {
							Map.Entry entry = (Map.Entry)itr.next();

							String name = (String)entry.getKey();
							Logger logger = (Logger)entry.getValue();

							Level level = logger.getLevel();

							if (level == null) {
								itr.remove();
							}
						}

						searchContainer.setTotal(results.size());

						results = ListUtil.subList(results, searchContainer.getStart(), searchContainer.getEnd());

						searchContainer.setResults(results);

						List resultRows = searchContainer.getResultRows();

						for (int i = 0; i < results.size(); i++) {
							Map.Entry entry = (Map.Entry)results.get(i);

							String name = (String)entry.getKey();
							Logger logger = (Logger)entry.getValue();

							Level level = logger.getLevel();

							ResultRow row = new ResultRow(entry, name, i);

							// Name

							row.addText(name);

							// Logger

							StringBuilder sb = new StringBuilder();

							sb.append("<select name=\"");
							sb.append(renderResponse.getNamespace());
							sb.append("logLevel");
							sb.append(name);
							sb.append("\">");

							for (int j = 0; j < Levels.ALL_LEVELS.length; j++) {
								sb.append("<option ");

								if (level.equals(Levels.ALL_LEVELS[j])) {
									sb.append("selected");
								}

								sb.append(" value=\"");
								sb.append(Levels.ALL_LEVELS[j]);
								sb.append("\">");
								sb.append(Levels.ALL_LEVELS[j]);
								sb.append("</option>");
							}

							sb.append("</select>");

							row.addText(sb.toString());

							// Add result row

							resultRows.add(row);
						}
						%>

						<liferay-ui:search-iterator searchContainer="<%= searchContainer %>" />

						<br />

						<input type="button" value="<liferay-ui:message key="save" />" onClick="<portlet:namespace />saveServer('updateLogLevels');" />
					</c:otherwise>
				</c:choose>
			</c:when>
			<c:when test='<%= tabs2.equals("properties") %>'>
				<liferay-ui:tabs
					names="system-properties,portal-properties"
					param="tabs3"
					url="<%= portletURL.toString() %>"
				/>

				<c:choose>
					<c:when test='<%= tabs3.equals("portal-properties") %>'>

						<%
						List<String> headerNames = new ArrayList<String>();

						headerNames.add("property");
						headerNames.add("value");

						SearchContainer searchContainer = new SearchContainer(renderRequest, null, null, SearchContainer.DEFAULT_CUR_PARAM, SearchContainer.DEFAULT_DELTA, portletURL, headerNames, null);

						Map portalProps = new TreeMap();

						portalProps.putAll(PropsUtil.getProperties());

						List results = ListUtil.fromCollection(portalProps.entrySet());

						searchContainer.setTotal(results.size());

						results = ListUtil.subList(results, searchContainer.getStart(), searchContainer.getEnd());

						searchContainer.setResults(results);

						List resultRows = searchContainer.getResultRows();

						for (int i = 0; i < results.size(); i++) {
							Map.Entry entry = (Map.Entry)results.get(i);

							String property = (String)entry.getKey();
							String value = (String)entry.getValue();

							ResultRow row = new ResultRow(entry, property, i);

							// Property

							row.addText(StringUtil.shorten(property, 80));

							// Value

							row.addText(StringUtil.shorten(value, 80));

							// Add result row

							resultRows.add(row);
						}
						%>

						<liferay-ui:search-iterator searchContainer="<%= searchContainer %>" />
					</c:when>
					<c:otherwise>

						<%
						List<String> headerNames = new ArrayList<String>();

						headerNames.add("property");
						headerNames.add("value");

						SearchContainer searchContainer = new SearchContainer(renderRequest, null, null, SearchContainer.DEFAULT_CUR_PARAM, SearchContainer.DEFAULT_DELTA, portletURL, headerNames, null);

						Map portalProps = new TreeMap();

						portalProps.putAll(System.getProperties());

						List results = ListUtil.fromCollection(portalProps.entrySet());

						searchContainer.setTotal(results.size());

						results = ListUtil.subList(results, searchContainer.getStart(), searchContainer.getEnd());

						searchContainer.setResults(results);

						List resultRows = searchContainer.getResultRows();

						for (int i = 0; i < results.size(); i++) {
							Map.Entry entry = (Map.Entry)results.get(i);

							String property = (String)entry.getKey();
							String value = (String)entry.getValue();

							ResultRow row = new ResultRow(entry, property, i);

							// Property

							row.addText(StringUtil.shorten(property, 80));

							// Value

							row.addText(StringUtil.shorten(value, 80));

							// Add result row

							resultRows.add(row);
						}
						%>

						<liferay-ui:search-iterator searchContainer="<%= searchContainer %>" />
					</c:otherwise>
				</c:choose>
			</c:when>
			<c:when test='<%= tabs2.equals("data-migration") %>'>

				<%
				List<ConvertProcess> convertProcesses = new ArrayList<ConvertProcess>();

				for (String convertProcessClassName : PropsValues.CONVERT_PROCESSES) {
					ConvertProcess convertProcess = (ConvertProcess)InstancePool.get(convertProcessClassName);

					if (convertProcess.isEnabled()) {
						convertProcesses.add(convertProcess);
					}
				}
				%>

				<c:choose>
					<c:when test="<%= convertProcesses.isEmpty() %>">
						<div class="portlet-msg-info">
							<liferay-ui:message key="no-data-migration-processes-are-available" />
						</div>
					</c:when>
					<c:otherwise>
						<table class="lfr-table">

						<%
						for (ConvertProcess convertProcess : convertProcesses) {
						%>

							<tr>
								<td>
									<liferay-ui:message key="<%= convertProcess.getDescription() %>" />
								</td>
								<td>
									<c:choose>
										<c:when test="<%= convertProcess.getParameterNames() != null %>">
											<table class="lfr-table">
												<tr>
													<td colspan="2">
														<liferay-ui:message key="<%= convertProcess.getParameterDescription() %>" />
													</td>
												</tr>

												<%
												for (String parameter : convertProcess.getParameterNames()) {
												%>

													<tr>
														<td>
															<liferay-ui:message key="<%= parameter %>" />
														</td>
														<td>
															<input name="<%= convertProcess.getClass().getName() + "." + parameter %>" />
														</td>
													</tr>

												<%
												}
												%>

												<tr>
													<td colspan="2">
														<input type="button" value="<liferay-ui:message key="execute" />" onClick="<portlet:namespace />saveServer('convertProcess.<%= convertProcess.getClass().getName() %>');" />
													</td>
												</tr>
											</table>
										</c:when>
										<c:otherwise>
											<input type="button" value="<liferay-ui:message key="execute" />" onClick="<portlet:namespace />saveServer('convertProcess.<%= convertProcess.getClass().getName() %>');" />
										</c:otherwise>
									</c:choose>
								</td>
							</tr>

						<%
						}
						%>

						</table>
					</c:otherwise>
				</c:choose>
			</c:when>
			<c:when test='<%= tabs2.equals("file-uploads") %>'>
				<liferay-ui:message key="configure-the-file-upload-settings" />

				<br /><br />

				<table class="lfr-table">
				<tr>
					<td colspan="2">
						<strong><liferay-ui:message key="general" /></strong>
					</td>
				</tr>
				<tr>
					<td>
						<liferay-ui:message key="overall-maximum-file-size" />
					</td>
					<td>
						<input class="lfr-input-text" name="<portlet:namespace />uploadServletRequestImplMaxSize" type="text" value="<%= PrefsPropsUtil.getLong(PropsKeys.UPLOAD_SERVLET_REQUEST_IMPL_MAX_SIZE) %>" />
					</td>
				</tr>
				<tr>
					<td>
						<liferay-ui:message key="temporary-storage-directory" />
					</td>
					<td>
						<input class="lfr-input-text" name="<portlet:namespace />uploadServletRequestImplTempDir" type="text" value="<%= PrefsPropsUtil.getString(PropsKeys.UPLOAD_SERVLET_REQUEST_IMPL_TEMP_DIR, StringPool.BLANK) %>" />
					</td>
				</tr>
				<tr>
					<td colspan="2">
						<br />
					</td>
				</tr>
				<tr>
					<td colspan="2">
						<strong><liferay-ui:message key="document-library" /></strong>
					</td>
				</tr>
				<tr>
					<td>
						<liferay-ui:message key="maximum-file-size" />
					</td>
					<td>
						<input class="lfr-input-text" name="<portlet:namespace />dlFileMaxSize" type="text" value="<%= PrefsPropsUtil.getLong(PropsKeys.DL_FILE_MAX_SIZE) %>" />
					</td>
				</tr>
				<tr>
					<td>
						<liferay-ui:message key="allowed-file-extensions" />
					</td>
					<td>
						<input class="lfr-input-text" name="<portlet:namespace />dlFileExtensions" type="text" value="<%= PrefsPropsUtil.getString(PropsKeys.DL_FILE_EXTENSIONS) %>" />
					</td>
				</tr>
				<tr>
					<td colspan="2">
						<br />
					</td>
				</tr>
				<tr>
					<td colspan="2">
						<strong><liferay-ui:message key="image-gallery" /></strong>
					</td>
				</tr>
				<tr>
					<td>
						<liferay-ui:message key="maximum-file-size" />
					</td>
					<td>
						<input class="lfr-input-text" name="<portlet:namespace />igImageMaxSize" type="text" value="<%= PrefsPropsUtil.getLong(PropsKeys.IG_IMAGE_MAX_SIZE) %>" />
					</td>
				</tr>
				<tr>
					<td>
						<liferay-ui:message key="allowed-file-extensions" />
					</td>
					<td>
						<input class="lfr-input-text" name="<portlet:namespace />igImageExtensions" type="text" value="<%= PrefsPropsUtil.getString(PropsKeys.IG_IMAGE_EXTENSIONS) %>" />
					</td>
				</tr>
				<tr>
					<td>
						<liferay-ui:message key="maximum-thumbnail-dimensions" />
					</td>
					<td>
						<input class="lfr-input-text" name="<portlet:namespace />igImageThumbnailMaxDimensions" type="text" value="<%= PrefsPropsUtil.getLong(PropsKeys.IG_IMAGE_THUMBNAIL_MAX_DIMENSION) %>" />
					</td>
				</tr>
				<tr>
					<td colspan="2">
						<br />
					</td>
				</tr>
				<tr>
					<td colspan="2">
						<strong><liferay-ui:message key="web-content-images" /></strong>
					</td>
				</tr>
				<tr>
					<td>
						<liferay-ui:message key="maximum-file-size" />
					</td>
					<td>
						<input class="lfr-input-text" name="<portlet:namespace />journalImageSmallMaxSize" type="text" value="<%= PrefsPropsUtil.getLong(PropsKeys.JOURNAL_IMAGE_SMALL_MAX_SIZE) %>" />
					</td>
				</tr>
				<tr>
					<td>
						<liferay-ui:message key="allowed-file-extensions" />
					</td>
					<td>
						<input class="lfr-input-text" name="<portlet:namespace />journalImageExtensions" type="text" value="<%= PrefsPropsUtil.getString(PropsKeys.JOURNAL_IMAGE_EXTENSIONS) %>" />
					</td>
				</tr>
				<tr>
					<td colspan="2">
						<br />
					</td>
				</tr>
				<tr>
					<td colspan="2">
						<strong><liferay-ui:message key="shopping-cart-images" /></strong>
					</td>
				</tr>
				<tr>
					<td>
						<liferay-ui:message key="maximum-file-size" /> (<liferay-ui:message key="large-image" />)
					</td>
					<td>
						<input class="lfr-input-text" name="<portlet:namespace />shoppingImageLargeMaxSize" type="text" value="<%= PrefsPropsUtil.getLong(PropsKeys.SHOPPING_IMAGE_LARGE_MAX_SIZE) %>" />
					</td>
				</tr>
				<tr>
					<td>
						<liferay-ui:message key="maximum-file-size" /> (<liferay-ui:message key="medium-image" />)
					</td>
					<td>
						<input class="lfr-input-text" name="<portlet:namespace />shoppingImageMediumMaxSize" type="text" value="<%= PrefsPropsUtil.getLong(PropsKeys.SHOPPING_IMAGE_MEDIUM_MAX_SIZE) %>" />
					</td>
				</tr>
				<tr>
					<td>
						<liferay-ui:message key="maximum-file-size" /> (<liferay-ui:message key="small-image" />)
					</td>
					<td>
						<input class="lfr-input-text" name="<portlet:namespace />shoppingImageSmallMaxSize" type="text" value="<%= PrefsPropsUtil.getLong(PropsKeys.SHOPPING_IMAGE_SMALL_MAX_SIZE) %>" />
					</td>
				</tr>
				<tr>
					<td>
						<liferay-ui:message key="allowed-file-extensions" />
					</td>
					<td>
						<input class="lfr-input-text" name="<portlet:namespace />journalImageExtensions" type="text" value="<%= PrefsPropsUtil.getString(PropsKeys.JOURNAL_IMAGE_EXTENSIONS) %>" />
					</td>
				</tr>
				<tr>
					<td colspan="2">
						<br />
					</td>
				</tr>
				<tr>
					<td colspan="2">
						<strong><liferay-ui:message key="software-catalog-images" /></strong>
					</td>
				</tr>
				<tr>
					<td>
						<liferay-ui:message key="maximum-file-size" />
					</td>
					<td>
						<input class="lfr-input-text" name="<portlet:namespace />scImageMaxSize" type="text" value="<%= PrefsPropsUtil.getLong(PropsKeys.SC_IMAGE_MAX_SIZE) %>" />
					</td>
				</tr>
				<tr>
					<td>
						<liferay-ui:message key="maximum-thumbnail-height" />
					</td>
					<td>
						<input class="lfr-input-text" name="<portlet:namespace />scImageThumbnailMaxHeight" type="text" value="<%= PrefsPropsUtil.getLong(PropsKeys.SC_IMAGE_THUMBNAIL_MAX_HEIGHT) %>" />
					</td>
				</tr>
				<tr>
					<td>
						<liferay-ui:message key="maximum-thumbnail-width" />
					</td>
					<td>
						<input class="lfr-input-text" name="<portlet:namespace />scImageThumbnailMaxWidth" type="text" value="<%= PrefsPropsUtil.getLong(PropsKeys.SC_IMAGE_THUMBNAIL_MAX_WIDTH) %>" />
					</td>
				</tr>
				<tr>
					<td colspan="2">
						<br />
					</td>
				</tr>
				<tr>
					<td colspan="2">
						<strong><liferay-ui:message key="user-images" /></strong>
					</td>
				</tr>
				<tr>
					<td>
						<liferay-ui:message key="maximum-file-size" />
					</td>
					<td>
						<input class="lfr-input-text" name="<portlet:namespace />usersImageMaxSize" type="text" value="<%= PrefsPropsUtil.getLong(PropsKeys.USERS_IMAGE_MAX_SIZE) %>" />
					</td>
				</tr>
				</table>

				<br />

				<input type="button" value="<liferay-ui:message key="save" />" onClick="<portlet:namespace />saveServer('updateFileUploads');" />
			</c:when>
			<c:when test='<%= tabs2.equals("mail") %>'>
				<liferay-ui:message key="configure-the-mail-server-settings" />

				<br /><br />

				<table class="lfr-table">
				<tr>
					<td>
						<liferay-ui:message key="incoming-pop-server" />
					</td>
					<td>
						<input class="lfr-input-text" name="<portlet:namespace />pop3Host" type="text" value="<%= PrefsPropsUtil.getString(PropsKeys.MAIL_SESSION_MAIL_POP3_HOST) %>" />
					</td>
				</tr>
				<tr>
					<td>
						<liferay-ui:message key="incoming-port" />
					</td>
					<td>
						<input class="lfr-input-text" name="<portlet:namespace />pop3Port" type="text" value="<%= PrefsPropsUtil.getString(PropsKeys.MAIL_SESSION_MAIL_POP3_PORT) %>" />
					</td>
				</tr>
				<tr>
					<td>
						<liferay-ui:message key="use-a-secure-network-connection" />
					</td>
					<td>
						<liferay-ui:input-checkbox param="pop3Secure" defaultValue='<%= PrefsPropsUtil.getString(PropsKeys.MAIL_SESSION_MAIL_STORE_PROTOCOL).equals("pop3s") %>' />
					</td>
				</tr>
				<tr>
					<td>
						<liferay-ui:message key="user-name" />
					</td>
					<td>
						<input class="lfr-input-text" name="<portlet:namespace />pop3User" type="text" value="<%= PrefsPropsUtil.getString(PropsKeys.MAIL_SESSION_MAIL_POP3_USER) %>" />
					</td>
				</tr>
				<tr>
					<td>
						<liferay-ui:message key="password" />
					</td>
					<td>
						<input class="lfr-input-text" name="<portlet:namespace />pop3Password" type="text" value="<%= PrefsPropsUtil.getString(PropsKeys.MAIL_SESSION_MAIL_POP3_PASSWORD) %>" />
					</td>
				</tr>
				<tr>
					<td colspan="2">
						<br />
					</td>
				</tr>
				<tr>
					<td>
						<liferay-ui:message key="outgoing-smtp-server" />
					</td>
					<td>
						<input class="lfr-input-text" name="<portlet:namespace />smtpHost" type="text" value="<%= PrefsPropsUtil.getString(PropsKeys.MAIL_SESSION_MAIL_SMTP_HOST) %>" />
					</td>
				</tr>
				<tr>
					<td>
						<liferay-ui:message key="outgoing-port" />
					</td>
					<td>
						<input class="lfr-input-text" name="<portlet:namespace />smtpPort" type="text" value="<%= PrefsPropsUtil.getString(PropsKeys.MAIL_SESSION_MAIL_SMTP_PORT) %>" />
					</td>
				</tr>
				<tr>
					<td>
						<liferay-ui:message key="use-a-secure-network-connection" />
					</td>
					<td>
						<liferay-ui:input-checkbox param="smtpSecure" defaultValue='<%= PrefsPropsUtil.getString(PropsKeys.MAIL_SESSION_MAIL_TRANSPORT_PROTOCOL).equals("smtps") %>' />
					</td>
				</tr>
				<tr>
					<td>
						<liferay-ui:message key="user-name" />
					</td>
					<td>
						<input class="lfr-input-text" name="<portlet:namespace />smtpUser" type="text" value="<%= PrefsPropsUtil.getString(PropsKeys.MAIL_SESSION_MAIL_SMTP_USER) %>" />
					</td>
				</tr>
				<tr>
					<td>
						<liferay-ui:message key="password" />
					</td>
					<td>
						<input class="lfr-input-text" name="<portlet:namespace />smtpPassword" type="text" value="<%= PrefsPropsUtil.getString(PropsKeys.MAIL_SESSION_MAIL_SMTP_PASSWORD) %>" />
					</td>
				</tr>
				</table>

				<br />

				<liferay-ui:message key="manually-specify-additional-javamail-properties-to-override-the-above-configuration" />

				<br /><br />

				<table class="lfr-table">
				<tr>
					<td>
						<liferay-ui:message key="advanced-properties" />
					</td>
					<td>
						<textarea class="lfr-textarea" name="<portlet:namespace />advancedProperties"><%= PrefsPropsUtil.getString(PropsKeys.MAIL_SESSION_MAIL_ADVANCED_PROPERTIES, StringPool.BLANK) %></textarea>
					</td>
				</tr>
				</table>

				<br />

				<input type="button" value="<liferay-ui:message key="save" />" onClick="<portlet:namespace />saveServer('updateMail');" />
			</c:when>
			<c:when test='<%= tabs2.equals("OpenOffice") %>'>
				<liferay-ui:message key="enabling-openoffice-integration-provides-document-conversion-functionality" />

				<br /><br />

				<table class="lfr-table">
				<tr>
					<td>
						<liferay-ui:message key="enabled" />
					</td>
					<td>
						<liferay-ui:input-checkbox param="enabled" defaultValue="<%= PrefsPropsUtil.getBoolean(PropsKeys.OPENOFFICE_SERVER_ENABLED) %>" />
					</td>
				</tr>
				<tr>
					<td>
						<liferay-ui:message key="port" />
					</td>
					<td>
						<input class="lfr-input-text" name="<portlet:namespace />port" type="text" value="<%= PrefsPropsUtil.getString(PropsKeys.OPENOFFICE_SERVER_PORT) %>" />
					</td>
				</tr>
				</table>

				<br />

				<input type="button" value="<liferay-ui:message key="save" />" onClick="<portlet:namespace />saveServer('updateOpenOffice');" />
			</c:when>
			<c:when test='<%= tabs2.equals("script") %>'>

				<%
				String language = ParamUtil.getString(renderRequest, "language", "javascript");
				String script = ParamUtil.getString(renderRequest, "script", "// ### Javascript Sample ###\n\n// number = Packages.com.liferay.portal.service.UserLocalServiceUtil.getUsersCount();\n" + "// out.println(number);");

				String scriptOutput = (String)SessionMessages.get(renderRequest, "script_output");
				%>

				<table class="lfr-table">
				<tr>
					<td>
						<liferay-ui:message key="language" />
					</td>
					<td>
						<select id="<portlet:namespace />language" name="<portlet:namespace />language">

							<%
							for (String supportedLanguage: ScriptingUtil.getSupportedLanguages()) {
							%>

								<option <%= supportedLanguage.equals(language) ? "selected" : "" %> value="<%= supportedLanguage %>"><%= TextFormatter.format(supportedLanguage, TextFormatter.J) %></option>

							<%
							}
							%>

						</select>
					</td>
				</tr>
				<tr>
					<td>
						<liferay-ui:message key="script" />
					</td>
					<td>
						<textarea class="lfr-textarea" id="<portlet:namespace />script" name="<portlet:namespace />script"><%= script %></textarea>
					</td>
				</tr>
				</table>

				<br />

				<c:if test="<%= Validator.isNotNull(scriptOutput) %>">
					<b><liferay-ui:message key="output" /></b>

					<pre><%= scriptOutput %></pre>

					<br /><br />
				</c:if>

				<input type="button" value="<liferay-ui:message key="execute" />" onClick="<portlet:namespace />saveServer('runScript');" />
			</c:when>
			<c:when test='<%= tabs2.equals("shutdown") %>'>
				<table class="lfr-table">
				<tr>
					<td>
						<liferay-ui:message key="number-of-minutes" />
					</td>
					<td>
						<input name="<portlet:namespace />minutes" size="3" type="text" />
					</td>
				</tr>
				<tr>
					<td>
						<liferay-ui:message key="custom-message" />
					</td>
					<td>
						<textarea class="lfr-textarea" name="<portlet:namespace />message"><%= GetterUtil.getString(ShutdownUtil.getMessage()) %></textarea>
					</td>
				</tr>
				</table>

				<br />

				<input type="button" value="<liferay-ui:message key="shutdown" />" onClick="<portlet:namespace />saveServer('shutdown');" />

				<c:if test="<%= ShutdownUtil.isInProcess() %>">
					<input type="button" value="<liferay-ui:message key="cancel-shutdown" />" onClick="document.<portlet:namespace />fm.<portlet:namespace />minutes.value = 0; <portlet:namespace />saveServer('shutdown');" />
				</c:if>
			</c:when>
			<c:otherwise>

				<%
				Runtime runtime = Runtime.getRuntime();

				numberFormat = NumberFormat.getInstance(locale);

				long usedMemory = runtime.totalMemory() - runtime.freeMemory();
				%>

				<div>

					<%
					DefaultValueDataset dataset = new DefaultValueDataset(usedMemory * 100 / runtime.totalMemory());

					MeterPlot plot = _getMeterPlot(dataset, pageContext);

					JFreeChart chart = _getChart(LanguageUtil.get(pageContext, "used-memory") + " / " + LanguageUtil.get(pageContext, "total-memory"), plot);
					%>

					<img border="0" src="<%= themeDisplay.getPathContext() %>/display_chart?filename=<%= ServletUtilities.saveChartAsPNG(chart, 280, 180, null, null) %>" />

					<%
					dataset = new DefaultValueDataset(usedMemory * 100 / runtime.maxMemory());

					plot = _getMeterPlot(dataset, pageContext);

					chart = _getChart(LanguageUtil.get(pageContext, "used-memory") + " / " + LanguageUtil.get(pageContext, "maximum-memory"), plot);
					%>

					<img border="0" src="<%= themeDisplay.getPathContext() %>/display_chart?filename=<%= ServletUtilities.saveChartAsPNG(chart, 280, 180, null, null) %>" />
				</div>

				<br />

				<table class="lfr-table">
				<tr>
					<td>
						<liferay-ui:message key="used-memory" />:
					</td>
					<td>
						<%= numberFormat.format(usedMemory) %> <liferay-ui:message key="bytes" />
					</td>
				</tr>
				<tr>
					<td>
						<liferay-ui:message key="total-memory" />:
					</td>
					<td>
						<%= numberFormat.format(runtime.totalMemory()) %> <liferay-ui:message key="bytes" />
					</td>
				</tr>
				<tr>
					<td>
						<liferay-ui:message key="maximum-memory" />:
					</td>
					<td>
						<%= numberFormat.format(runtime.maxMemory()) %> <liferay-ui:message key="bytes" />
					</td>
				</tr>
				</table>

				<br />

				<liferay-ui:tabs names="actions" />

				<table class="lfr-table">
				<tr>
					<td>
						<liferay-ui:message key="run-the-garbage-collector-to-free-up-memory" />
					</td>
					<td>
						<input type="button" value="<liferay-ui:message key="execute" />" onClick="<portlet:namespace />saveServer('gc');" />
					</td>
				</tr>
				<tr>
					<td>
						<liferay-ui:message key="clear-content-cached-by-this-vm" />
					</td>
					<td>
						<input type="button" value="<liferay-ui:message key="execute" />" onClick="<portlet:namespace />saveServer('cacheSingle');" />
					</td>
				</tr>
				<tr>
					<td>
						<liferay-ui:message key="clear-content-cached-across-the-cluster" />
					</td>
					<td>
						<input type="button" value="<liferay-ui:message key="execute" />" onClick="<portlet:namespace />saveServer('cacheMulti');" />
					</td>
				</tr>
				<tr>
					<td>
						<liferay-ui:message key="clear-the-database-cache" />
					</td>
					<td>
						<input type="button" value="<liferay-ui:message key="execute" />" onClick="<portlet:namespace />saveServer('cacheDb');" />
					</td>
				</tr>
				<tr>
					<td>
						<liferay-ui:message key="reindex-all-search-indexes" />
					</td>
					<td>
						<input type="button" value="<liferay-ui:message key="execute" />" onClick="<portlet:namespace />saveServer('reIndex');" />
					</td>
				</tr>
				<tr>
					<td>
						<liferay-ui:message key="generate-thread-dump" />
					</td>
					<td>
						<input type="button" value="<liferay-ui:message key="execute" />" onClick="<portlet:namespace />saveServer('threadDump');" />
					</td>
				</tr>
				</table>
			</c:otherwise>
		</c:choose>
	</c:otherwise>
</c:choose>

<%!
private JFreeChart _getChart(String title, MeterPlot plot) {
	JFreeChart chart = new JFreeChart(title, new Font(null, Font.PLAIN, 13), plot, true);

	chart.setBackgroundPaint(Color.white);

	chart.removeLegend();

	return chart;
}

private MeterPlot _getMeterPlot(DefaultValueDataset dataset, PageContext pageContext) {
	MeterPlot plot = new MeterPlot(dataset);

	plot.setDialBackgroundPaint(Color.white);
	plot.setDialShape(DialShape.PIE);
	plot.setDialOutlinePaint(Color.gray);
	plot.setTickLabelFont(new Font(null, Font.PLAIN, 10));
	plot.setTickLabelPaint(Color.darkGray);
	plot.setTickLabelsVisible(true);
	plot.setTickPaint(Color.lightGray);
	plot.setTickSize(5D);
	plot.setMeterAngle(180);
	plot.setNeedlePaint(Color.darkGray);
	plot.setRange(new Range(0.0D, 100D));
	plot.setValueFont(new Font(null, Font.PLAIN, 10));
	plot.setValuePaint(Color.black);
	plot.setUnits("%");

	plot.addInterval(new MeterInterval(LanguageUtil.get(pageContext, "normal"), new Range(0.0D, 75D), Color.lightGray, new BasicStroke(2.0F), new Color(0, 255, 0, 64)));
	plot.addInterval(new MeterInterval(LanguageUtil.get(pageContext, "warning"), new Range(75D, 90D), Color.lightGray, new BasicStroke(2.0F), new Color(255, 255, 0, 64)));
	plot.addInterval(new MeterInterval(LanguageUtil.get(pageContext, "critical"), new Range(90D, 100D), Color.lightGray, new BasicStroke(2.0F), new Color(255, 0, 0, 128)));

	return plot;
}
%>