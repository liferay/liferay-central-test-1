<%
/**
 * Copyright (c) 2000-2007 Liferay, Inc. All rights reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */
%>

<%
PortletURL[] urls = getAddURLs(permissionChecker, request, themeDisplay, entries, currentURL);
%>
<script language="JavaScript">
	function <portlet:namespace/>submit() {
		var url = document.<portlet:namespace />fm.<portlet:namespace />assetURL.value;
		if (url != '') {
			location.href = url;
		}
	}
</script>

<c:if test="<%= urls.length > 0 %>">
	<div style="float: right">
		<form name="<portlet:namespace/>fm" onchange="<portlet:namespace/>submit()">
			<select name="<portlet:namespace/>assetURL">
				<option value=""><liferay-ui:message key="add"/>...</option>
				<%
				for (int i = 0; i < ASSET_TYPES.length; i++) {
					PortletURL url = getAddURL(ASSET_TYPES[i], permissionChecker, request, themeDisplay, entries, currentURL);
					if (url != null) {
				%>

					<option value="<%= url.toString() %>"><liferay-ui:message key="<%= "model.resource." + ASSET_TYPES[i] %>"/></option>

				<%
					}
				}
				%>
			</select>
		</form>
	</div>
</c:if>

<%!
	public final String[] ASSET_TYPES = {BlogsEntry.class.getName(), BookmarksEntry.class.getName(), DLFileEntry.class.getName(), IGImage.class.getName(), JournalArticle.class.getName(), WikiPage.class.getName()};

	public PortletURL[] getAddURLs(PermissionChecker permissionChecker, HttpServletRequest request, ThemeDisplay themeDisplay, String[] entries, String currentURL) throws Exception {
		List urls = new ArrayList();
		for (int i = 0; i < ASSET_TYPES.length; i++) {
			PortletURL url = getAddURL(ASSET_TYPES[i], permissionChecker, request, themeDisplay, entries, currentURL);
			if (url != null) {
				urls.add(url);
			}
		}

		return (PortletURL[]) urls.toArray(new PortletURL[0]);
	}

	public PortletURL getAddURL(String assetType, PermissionChecker permissionChecker, HttpServletRequest request, ThemeDisplay themeDisplay, String[] entries, String currentURL) throws Exception {
		PortletURL addURL = null;

		if (assetType.equals(BlogsEntry.class.getName())) {
			if (PortletPermissionUtil.contains(permissionChecker, themeDisplay.getPlid(), PortletKeys.BLOGS, ActionKeys.ADD_ENTRY)) {
				addURL = new PortletURLImpl(request, PortletKeys.BLOGS, themeDisplay.getPlid(), false);

				addURL.setParameter("struts_action", "/blogs/edit_entry");
			}
		}
		else if (assetType.equals(BookmarksEntry.class.getName())) {
			if (PortletPermissionUtil.contains(permissionChecker, themeDisplay.getPlid(), PortletKeys.BOOKMARKS, ActionKeys.ADD_ENTRY)) {
				addURL = new PortletURLImpl(request, PortletKeys.BOOKMARKS, themeDisplay.getPlid(), false);

				addURL.setParameter("struts_action", "/bookmarks/edit_entry");
			}
		}
		else if (assetType.equals(DLFileEntry.class.getName())) {
			if (PortletPermissionUtil.contains(permissionChecker, themeDisplay.getPlid(), PortletKeys.DOCUMENT_LIBRARY, ActionKeys.ADD_ENTRY)) {
				addURL = new PortletURLImpl(request, PortletKeys.DOCUMENT_LIBRARY, themeDisplay.getPlid(), false);

				addURL.setParameter("struts_action", "/document_library/edit_file_entry");
			}
		}
		else if (assetType.equals(IGImage.class.getName())) {
			if (PortletPermissionUtil.contains(permissionChecker, themeDisplay.getPlid(), PortletKeys.IMAGE_GALLERY, ActionKeys.ADD_IMAGE)) {
				addURL = new PortletURLImpl(request, PortletKeys.IMAGE_GALLERY, themeDisplay.getPlid(), false);

				addURL.setParameter("struts_action", "/image_gallery/edit_image");
			}
		}
		else if (assetType.equals(JournalArticle.class.getName())) {
			if (PortletPermissionUtil.contains(permissionChecker, themeDisplay.getPlid(), PortletKeys.JOURNAL, ActionKeys.ADD_ARTICLE)) {
				addURL = new PortletURLImpl(request, PortletKeys.JOURNAL, themeDisplay.getPlid(), false);

				addURL.setParameter("struts_action", "/journal/edit_article");
				addURL.setParameter("groupId", Long.toString(themeDisplay.getLayout().getGroupId()));
			}
		}
		else if (assetType.equals(WikiPage.class.getName())) {
		}

		if (addURL != null) {
			addURL.setWindowState(WindowState.MAXIMIZED);
			addURL.setPortletMode(PortletMode.VIEW);

			addURL.setParameter("redirect", currentURL);
			addURL.setParameter("tagsEntries", StringUtil.merge(entries));
		}

		return addURL;
	}

%>