<%--
/**
 * Copyright (c) 2000-2011 Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */
--%>

<aui:script use="aui-datepicker,liferay-portlet-dynamic-data-mapping">
	var FormBuilderTextField = A.FormBuilderTextField;
	var FormBuilderTypes = A.FormBuilder.types;

	var DDMDateField = A.Component.create(
		{
			EXTENDS: FormBuilderTextField,

			NAME: 'ddm-list-date',

			ATTRS: {
				dataType: {
					value: 'long'
				}
			},

			prototype: {
				renderUI: function() {
					var instance = this;

					DDMDateField.superclass.renderUI.apply(instance, arguments);

					instance.datePicker = new A.DatePicker(
						{
							trigger: instance.get('templateNode')
						}
					).render();
				}

			}
		}
	);

	var DDMDecimalField = A.Component.create(
		{
			EXTENDS: FormBuilderTextField,

			NAME: 'ddm-list-decimal',

			ATTRS: {
				dataType: {
					value: 'double'
				}
			}

		}
	);

	var DDMIntegerField = A.Component.create(
		{
			EXTENDS: FormBuilderTextField,

			NAME: 'ddm-list-integer',

			ATTRS: {
				dataType: {
					value: 'integer'
				}
			}
		}
	);

	var DDMNumberField = A.Component.create(
		{
			EXTENDS: FormBuilderTextField,

			NAME: 'ddm-list-number',

			ATTRS: {
				dataType: {
					value: 'double'
				}
			}
		}
	);

	var DDMSeparatorField = A.Component.create(
		{
			ATTRS: {
				templateNode: {
					valueFn: function() {
						return A.Node.create('<div class="separator"></div>');
					}
				},
				showLabel: {
					readOnly: true,
					value: false
				}
			},

			EXTENDS: A.FormBuilderField,

			NAME: 'ddm-list-separator',

			prototype: {
				renderSettings: function() {
					var formBuilder = this.get('formBuilder');
					var formNode = formBuilder.get('settingsFormNode');

					formNode.setContent('');
				}
			}
		}
	);

	FormBuilderTypes['ddm-list-date'] = DDMDateField;
	FormBuilderTypes['ddm-list-decimal'] = DDMDecimalField;
	FormBuilderTypes['ddm-list-integer'] = DDMIntegerField;
	FormBuilderTypes['ddm-list-number'] = DDMNumberField;
	FormBuilderTypes['ddm-list-separator'] = DDMSeparatorField;
</aui:script>