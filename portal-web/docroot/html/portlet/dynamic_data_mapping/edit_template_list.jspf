<%--
/**
 * Copyright (c) 2000-2011 Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */
--%>

<%
String scriptContent = ParamUtil.getString(request, "scriptContent");

if (scriptContent != null) {
	script = JS.decodeURIComponent(script);
}
else {
	script = BeanParamUtil.getString(template, request, "script");
}

String language = BeanParamUtil.getString(template, request, "language", DDMTemplateConstants.LANG_TYPE_VM);
%>

<aui:input name="scriptContent" type="hidden" value="<%= JS.encodeURIComponent(script) %>" />

<aui:select label="language-type" name="language">

	<%
	for (int i = 0; i < DDMTemplateConstants.LANG_TYPES.length; i++) {
	%>

		<aui:option label="<%= DDMTemplateConstants.LANG_TYPES[i].toUpperCase() %>" selected="<%= language.equals(DDMTemplateConstants.LANG_TYPES[i]) %>" value="<%= DDMTemplateConstants.LANG_TYPES[i] %>" />

	<%
	}
	%>

</aui:select>

<aui:field-wrapper label="script">
	<aui:input label="" name="script" type="file" />

	<aui:button name="editorButton" value="launch-editor" />
</aui:field-wrapper>

<aui:script>
	Liferay.Util.inlineEditor(
		{
			button: '#<portlet:namespace />editorButton',
			id: '<portlet:namespace />scriptContent',
			textarea: '<portlet:namespace />scriptContent',
			title: '<liferay-ui:message key="editor" />',
			uri: '<portlet:renderURL windowState="<%= LiferayWindowState.POP_UP.toString() %>"><portlet:param name="struts_action" value="/dynamic_data_mapping/edit_template_script" /></portlet:renderURL>&<portlet:namespace />language=' + document.<portlet:namespace />fm.<portlet:namespace />language.value
		}
	);

	Liferay.provide(
		window,
		'<portlet:namespace />saveTemplate',
		function() {
			submitForm(document.<portlet:namespace />fm);
		},
		['aui-base']
	);
</aui:script>