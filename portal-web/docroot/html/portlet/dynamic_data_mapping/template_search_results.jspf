<%--
/**
 * Copyright (c) 2000-2012 Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */
--%>

<%
TemplateSearchTerms searchTerms = (TemplateSearchTerms)searchContainer.getSearchTerms();

long[] searchClassNameIds = null;
long searchClassPK = 0;

if (portletName.equals(PortletKeys.APPLICATION_DISPLAY_STYLES)) {
	searchClassNameIds = getPortletDisplayTemplateClassNameIds();
	searchClassPK = -1;
}
else {
	searchClassNameIds = new long[] {classNameId};
	searchClassPK = classPK;
}

if (searchTerms.isAdvancedSearch()) {
	results = DDMTemplateServiceUtil.search(company.getCompanyId(), scopeGroupId, searchClassNameIds, searchClassPK, searchTerms.getName(), searchTerms.getDescription(), templateTypeValue, scopeTemplateMode, null, searchTerms.isAndOperator(), searchContainer.getStart(), searchContainer.getEnd(), searchContainer.getOrderByComparator());
	total = DDMTemplateServiceUtil.searchCount(company.getCompanyId(), scopeGroupId, searchClassNameIds, searchClassPK, searchTerms.getName(), searchTerms.getDescription(), templateTypeValue, null, null, searchTerms.isAndOperator());
}
else {
	results = DDMTemplateServiceUtil.search(company.getCompanyId(), scopeGroupId, searchClassNameIds, searchClassPK, searchTerms.getKeywords(), templateTypeValue, scopeTemplateMode, searchContainer.getStart(), searchContainer.getEnd(), searchContainer.getOrderByComparator());
	total = DDMTemplateServiceUtil.searchCount(company.getCompanyId(), scopeGroupId, searchClassNameIds, searchClassPK, searchTerms.getKeywords(), templateTypeValue, scopeTemplateMode);
}

pageContext.setAttribute("results", results);
pageContext.setAttribute("total", total);
%>

<%!
private long[] getPortletDisplayTemplateClassNameIds() {
	List<PortletDisplayTemplateHandler> portletDisplayTemplateHandlers = PortletDisplayTemplateHandlerRegistryUtil.getPortletDisplayTemplateHandlers();

	long[] searchClassNameIds = new long[portletDisplayTemplateHandlers.size()];

	for (int i = 0; i < portletDisplayTemplateHandlers.size(); i++) {
		PortletDisplayTemplateHandler portletDisplayTemplateHandler = portletDisplayTemplateHandlers.get(i);

		searchClassNameIds[i] = PortalUtil.getClassNameId(portletDisplayTemplateHandler.getClassName());
	}

	return searchClassNameIds;
}
%>