<%--
/**
 * Copyright (c) 2000-2012 Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */
--%>

<%@ include file="/html/portlet/dynamic_data_mapping/custom_fields.jspf" %>

<%
String[] availableLanguageIds = LocalizationUtil.getAvailableLocales(script);
String defaultLanguageId = LocalizationUtil.getDefaultLocale(script);

Locale[] availableLocales = new Locale[availableLanguageIds.length];

for (int i = 0; i < availableLanguageIds.length; i++) {
	availableLocales[i] = LocaleUtil.fromLanguageId(availableLanguageIds[i]);
}
%>

<div class="separator"><!-- --></div>

<aui:translation-manager availableLocales="<%= availableLocales %>" canAddTranslations="<%= true %>" defaultLanguageId="<%= defaultLanguageId %>" id='<%= renderResponse.getNamespace().concat("translationManager") %>' onlyMarkup="<%= true %>" />

<div class="aui-diagram-builder" id="<portlet:namespace />formBuilder">
	<div class="aui-diagram-builder-content aui-helper-clearfix" id="<portlet:namespace />formBuilderContent">
		<div class="aui-diagram-builder-tabs">
			<div class="aui-diagram-builder-tabs-content">
				<ul class="aui-tabview-list aui-widget-hd">
					<li class="aui-state-active aui-state-default aui-tab aui-tab-active">
						<span class="aui-tab-content">
							<a class="aui-tab-label" href="javascript:;">
								<liferay-ui:message key="fields" />
							</a>
						</span>
					</li>
					<li class="aui-state-default aui-tab">
						<span class="aui-tab-content">
							<a class="aui-tab-label" href="javascript:;">
								<liferay-ui:message key="settings" />
							</a>
						</span>
					</li>
				</ul>

				<div class="aui-tabview-content aui-widget-bd">
					<div class="aui-tabview-content-item"></div>

					<div class="aui-helper-hidden aui-tabview-content-item"></div>
				</div>
			</div>
		</div>

		<div class="aui-diagram-builder-content-container"></div>
	</div>
</div>

<%
JSONArray availableLocalesJSONArray = JSONFactoryUtil.createJSONArray();

for (int i = 0; i < availableLocales.length; i++) {
	availableLocalesJSONArray.put(LanguageUtil.getLanguageId(availableLocales[i]));
}

Locale[] locales = LanguageUtil.getAvailableLocales();
JSONObject localesMapJSONObject = JSONFactoryUtil.createJSONObject();

for (int i = 0; i < locales.length; i++) {
	localesMapJSONObject.put(LocaleUtil.toLanguageId(locales[i]), locales[i].getDisplayName(locale));
}
%>

<aui:script use="aui-datepicker,json,liferay-portlet-dynamic-data-lists,liferay-portlet-dynamic-data-mapping,liferay-portlet-dynamic-data-mapping-custom-fields">
	var availableFields;

	<c:if test="<%= Validator.isNotNull(scopeAvailableFields) %>">
		availableFields = A.Object.getValue(window, '<%= HtmlUtil.escapeJS(scopeAvailableFields) %>'.split('.'));

		if (A.Lang.isFunction(availableFields)) {
			availableFields = availableFields(A, Liferay.FormBuilder);
		}
	</c:if>

	window.<portlet:namespace />formBuilder = new Liferay.FormBuilder(
		{
			availableFields: availableFields,
			boundingBox: '#<portlet:namespace />formBuilder',
			enableEditing: false,

			<c:if test="<%= scriptJSONArray != null %>">
				fields: <%= scriptJSONArray.toString() %>,
			</c:if>

			portletNamespace: '<portlet:namespace />',
			portletResourceNamespace: '<%= HtmlUtil.escapeJS(portletResourceNamespace) %>',

			translationManager: {

				<c:if test="<%= availableLocalesJSONArray.length() > 0 %>">
					availableLocales: <%= availableLocalesJSONArray.toString() %>,
				</c:if>

				boundingBox: '#<portlet:namespace />translationManager',
				defaultLocale: '<%= defaultLanguageId %>',
				localesMap: <%= localesMapJSONObject.toString() %>,
				srcNode: '#<portlet:namespace />translationManager .lfr-translation-manager-content'
			},

			srcNode: '#<portlet:namespace />formBuilderContent'
		}
	).render();

	Liferay.fire(
		'<portlet:namespace />formBuilderLoaded',
		{
			formBuilder: window.<portlet:namespace />formBuilder
		}
	);
</aui:script>