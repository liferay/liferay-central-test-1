<%
/**
 * Copyright (c) 2000-2010 Liferay, Inc. All rights reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */
%>

<%
ShoppingCategory category = (ShoppingCategory)request.getAttribute(WebKeys.SHOPPING_CATEGORY);

long categoryId = BeanParamUtil.getLong(category, request, "categoryId", ShoppingCategoryConstants.DEFAULT_PARENT_CATEGORY_ID);

PortletURL portletURL = renderResponse.createRenderURL();

portletURL.setParameter("struts_action", "/shopping/view");
portletURL.setParameter("tabs1", tabs1);
portletURL.setParameter("categoryId", String.valueOf(categoryId));
%>

<liferay-portlet:renderURL varImpl="searchURL"><portlet:param name="struts_action" value="/shopping/search" /></liferay-portlet:renderURL>

<form action="<%= searchURL %>" method="get" name="<portlet:namespace />fm1" onSubmit="submitForm(this); return false;">
<liferay-portlet:renderURLParams varImpl="searchURL" />
<input name="<portlet:namespace />redirect" type="hidden" value="<%= HtmlUtil.escapeAttribute(currentURL) %>" />
<input name="<portlet:namespace />breadcrumbsCategoryId" type="hidden" value="<%= categoryId %>" />
<input name="<portlet:namespace />searchCategoryIds" type="hidden" value="<%= categoryId %>" />

<div class="breadcrumbs">
	<%= ShoppingUtil.getBreadcrumbs(category, pageContext, renderRequest, renderResponse) %>
</div>

<%
List<String> headerNames = new ArrayList<String>();

headerNames.add("category");
headerNames.add("num-of-categories");
headerNames.add("num-of-items");
headerNames.add(StringPool.BLANK);

SearchContainer searchContainer = new SearchContainer(renderRequest, null, null, "cur1", SearchContainer.DEFAULT_DELTA, portletURL, headerNames, null);

int total = ShoppingCategoryLocalServiceUtil.getCategoriesCount(scopeGroupId, categoryId);

searchContainer.setTotal(total);

List results = ShoppingCategoryLocalServiceUtil.getCategories(scopeGroupId, categoryId, searchContainer.getStart(), searchContainer.getEnd());

searchContainer.setResults(results);

List resultRows = searchContainer.getResultRows();

for (int i = 0; i < results.size(); i++) {
	ShoppingCategory curCategory = (ShoppingCategory)results.get(i);

	curCategory = curCategory.toEscapedModel();

	ResultRow row = new ResultRow(curCategory, curCategory.getCategoryId(), i);

	PortletURL rowURL = renderResponse.createRenderURL();

	rowURL.setParameter("struts_action", "/shopping/view");
	rowURL.setParameter("categoryId", String.valueOf(curCategory.getCategoryId()));

	// Name and description

	if (Validator.isNotNull(curCategory.getDescription())) {
		row.addText(curCategory.getName().concat("<br />").concat(curCategory.getDescription()), rowURL);
	}
	else {
		row.addText(curCategory.getName(), rowURL);
	}

	// Statistics

	List subcategoryIds = new ArrayList();

	subcategoryIds.add(new Long(curCategory.getCategoryId()));

	ShoppingCategoryLocalServiceUtil.getSubcategoryIds(subcategoryIds, scopeGroupId, curCategory.getCategoryId());

	int categoriesCount = subcategoryIds.size() - 1;
	int itemsCount = ShoppingItemLocalServiceUtil.getCategoriesItemsCount(scopeGroupId, subcategoryIds);

	row.addText(String.valueOf(categoriesCount), rowURL);
	row.addText(String.valueOf(itemsCount), rowURL);

	// Action

	row.addJSP("right", SearchEntry.DEFAULT_VALIGN, "/html/portlet/shopping/category_action.jsp");

	// Add result row

	resultRows.add(row);
}

boolean showAddCategoryButton = ShoppingCategoryPermission.contains(permissionChecker, scopeGroupId, categoryId, ActionKeys.ADD_CATEGORY);
boolean showPermissionsButton = GroupPermissionUtil.contains(permissionChecker, scopeGroupId, ActionKeys.PERMISSIONS);
boolean showSearch = !results.isEmpty();
%>

<c:if test="<%= showAddCategoryButton || showPermissionsButton || showSearch %>">
	<div>
		<c:if test="<%= showSearch %>">
			<label for="<portlet:namespace />keywords1"><liferay-ui:message key="search" /></label>

			<input id="<portlet:namespace />keywords1" name="<portlet:namespace />keywords" size="30" type="text" />

			<input type="submit" value="<liferay-ui:message key="search-categories" />" />
		</c:if>

		<c:if test="<%= showAddCategoryButton %>">
			<input type="button" value="<liferay-ui:message key='<%= (category == null) ? "add-category" : "add-subcategory" %>' />" onClick="location.href = '<portlet:renderURL><portlet:param name="struts_action" value="/shopping/edit_category" /><portlet:param name="redirect" value="<%= currentURL %>" /><portlet:param name="parentCategoryId" value="<%= String.valueOf(categoryId) %>" /></portlet:renderURL>';" />
		</c:if>

		<c:if test="<%= showPermissionsButton %>">

			<%
			String modelResource = "com.liferay.portlet.shopping";
			String modelResourceDescription = themeDisplay.getScopeGroupName();
			String resourcePrimKey = String.valueOf(scopeGroupId);

			if (category != null) {
				modelResource = ShoppingCategory.class.getName();
				modelResourceDescription = category.getName();
				resourcePrimKey = String.valueOf(category.getCategoryId());
			}
			%>

			<liferay-security:permissionsURL
				modelResource="<%= modelResource %>"
				modelResourceDescription="<%= HtmlUtil.escape(modelResourceDescription) %>"
				resourcePrimKey="<%= resourcePrimKey %>"
				var="permissionsURL"
			/>

			<input type="button" value="<liferay-ui:message key="permissions" />" onClick="location.href = '<%= permissionsURL %>';" />
		</c:if>
	</div>

	<br />
</c:if>

<liferay-ui:search-iterator searchContainer="<%= searchContainer %>" />

<br />

</form>

<form action="<%= searchURL %>" method="get" name="<portlet:namespace />fm2" onSubmit="submitForm(this); return false;">
<liferay-portlet:renderURLParams varImpl="searchURL" />
<input name="<portlet:namespace />redirect" type="hidden" value="<%= HtmlUtil.escapeAttribute(currentURL) %>" />
<input name="<portlet:namespace />breadcrumbsCategoryId" type="hidden" value="<%= categoryId %>" />
<input name="<portlet:namespace />searchCategoryId" type="hidden" value="<%= categoryId %>" />

<liferay-ui:tabs names="items" />

<%
String orderByCol = ParamUtil.getString(request, "orderByCol");
String orderByType = ParamUtil.getString(request, "orderByType");

if (Validator.isNotNull(orderByCol) && Validator.isNotNull(orderByType)) {
	portalPrefs.setValue(PortletKeys.SHOPPING, "items-order-by-col", orderByCol);
	portalPrefs.setValue(PortletKeys.SHOPPING, "items-order-by-type", orderByType);
}
else {
	orderByCol = portalPrefs.getValue(PortletKeys.SHOPPING, "items-order-by-col", "sku");
	orderByType = portalPrefs.getValue(PortletKeys.SHOPPING, "items-order-by-type", "asc");
}

OrderByComparator orderByComparator = ShoppingUtil.getItemOrderByComparator(orderByCol, orderByType);

headerNames.clear();

headerNames.add("sku");
headerNames.add("description");
headerNames.add("min-qty");
headerNames.add("price");
headerNames.add(StringPool.BLANK);

Map orderableHeaders = new HashMap();

orderableHeaders.put("sku", "sku");
orderableHeaders.put("description", "name");
orderableHeaders.put("min-qty", "min-qty");
orderableHeaders.put("price", "price");

searchContainer = new SearchContainer(renderRequest, null, null, "cur2", SearchContainer.DEFAULT_DELTA, portletURL, headerNames, null);

searchContainer.setOrderableHeaders(orderableHeaders);
searchContainer.setOrderByCol(orderByCol);
searchContainer.setOrderByType(orderByType);

total = ShoppingItemLocalServiceUtil.getItemsCount(scopeGroupId, categoryId);

searchContainer.setTotal(total);

results = ShoppingItemLocalServiceUtil.getItems(scopeGroupId, categoryId, searchContainer.getStart(), searchContainer.getEnd(), orderByComparator);

searchContainer.setResults(results);

resultRows = searchContainer.getResultRows();

for (int i = 0; i < results.size(); i++) {
	ShoppingItem item = (ShoppingItem)results.get(i);

	item = item.toEscapedModel();

	ResultRow row = new ResultRow(item, item.getItemId(), i);

	PortletURL rowURL = renderResponse.createRenderURL();

	rowURL.setParameter("struts_action", "/shopping/view_item");
	rowURL.setParameter("redirect", currentURL);
	rowURL.setParameter("itemId", String.valueOf(item.getItemId()));

	// SKU and small image

	StringBundler sb = new StringBundler();

	if (item.isSmallImage()) {
		sb.append("<br />");
		sb.append("<img alt=\"");
		sb.append(item.getSku());
		sb.append("\" border=\"0\" src=\"");

		if (Validator.isNotNull(item.getSmallImageURL())) {
			sb.append(item.getSmallImageURL());
		}
		else {
			sb.append(themeDisplay.getPathImage());
			sb.append("/shopping/item?img_id=");
			sb.append(item.getSmallImageId());
			sb.append("&t=");
			sb.append(ImageServletTokenUtil.getToken(item.getSmallImageId()));
		}

		sb.append("\">");
	}
	else {
		sb.append(item.getSku());
	}

	row.addText(sb.toString(), rowURL);

	// Description

	sb = new StringBundler();

	sb.append(item.getName());

	if (Validator.isNotNull(item.getDescription())) {
		sb.append("<br />");
		sb.append(item.getDescription());
	}

	Properties props = new OrderedProperties();

	PropertiesUtil.load(props, item.getProperties());

	Enumeration enu = props.propertyNames();

	while (enu.hasMoreElements()) {
		String propsKey = (String)enu.nextElement();
		String propsValue = props.getProperty(propsKey, StringPool.BLANK);

		sb.append("<br />");
		sb.append(propsKey);
		sb.append(": ");
		sb.append(propsValue);
	}

	row.addText(sb.toString(), rowURL);

	// Minimum quantity

	row.addText(String.valueOf(item.getMinQuantity()), rowURL);

	// Price

	if (item.getDiscount() <= 0) {
		row.addText(currencyFormat.format(item.getPrice()), rowURL);
	}
	else {
		row.addText(
			"<div class=\"portlet-msg-success\">" +
				currencyFormat.format(ShoppingUtil.calculateActualPrice(item)) +
					"</div>",
			rowURL);
	}

	// Action

	row.addJSP("right", SearchEntry.DEFAULT_VALIGN, "/html/portlet/shopping/item_action.jsp");

	// Add result row

	resultRows.add(row);
}

boolean showAddItemButton = ShoppingCategoryPermission.contains(permissionChecker, scopeGroupId, categoryId, ActionKeys.ADD_ITEM);
showSearch = !results.isEmpty();
%>

<c:if test="<%= showAddItemButton || showSearch %>">
	<div>
		<c:if test="<%= showSearch %>">
			<label for="<portlet:namespace />keywords2"><liferay-ui:message key="search" /></label>

			<input id="<portlet:namespace />keywords2" name="<portlet:namespace />keywords" size="30" type="text" />

			<input type="submit" value="<liferay-ui:message key="search-this-category" />" />
		</c:if>

		<c:if test="<%= showAddItemButton %>">
			<input type="button" value="<liferay-ui:message key="add-item" />" onClick="location.href = '<portlet:renderURL><portlet:param name="struts_action" value="/shopping/edit_item" /><portlet:param name="redirect" value="<%= currentURL %>" /><portlet:param name="categoryId" value="<%= String.valueOf(categoryId) %>" /></portlet:renderURL>';" />

			<input type="button" value="<liferay-ui:message key="add-books" />" onClick="location.href = '<portlet:renderURL><portlet:param name="struts_action" value="/shopping/add_book_items" /><portlet:param name="redirect" value="<%= currentURL %>" /><portlet:param name="categoryId" value="<%= String.valueOf(categoryId) %>" /></portlet:renderURL>';" />
		</c:if>
	</div>

	<br />
</c:if>

<liferay-ui:search-iterator searchContainer="<%= searchContainer %>" />

</form>

<c:if test="<%= windowState.equals(WindowState.MAXIMIZED) %>">
	<aui:script>
		Liferay.Util.focusFormField(document.<portlet:namespace />fm2.<portlet:namespace />keywords);
		Liferay.Util.focusFormField(document.<portlet:namespace />fm1.<portlet:namespace />keywords);
	</aui:script>
</c:if>