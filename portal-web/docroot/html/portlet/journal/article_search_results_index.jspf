<%--
/**
 * Copyright (c) 2000-2010 Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */
--%>

<%@ page import="com.liferay.portal.kernel.search.Field" %>
<%@ page import="com.liferay.portal.kernel.search.Hits" %>
<%@ page import="com.liferay.portal.kernel.search.Sort" %>

<%
LinkedHashMap params = new LinkedHashMap();

params.put("assetCategoryNames", searchTerms.getKeywords());
params.put("assetTagNames", searchTerms.getKeywords());
params.put("expandoAttributes", searchTerms.getKeywords());

Sort sort = _getSort(searchContainer.getOrderByCol(), searchContainer.getOrderByType());

Hits hits = null;

if (searchTerms.isAdvancedSearch()) {
	hits = JournalArticleLocalServiceUtil.search(company.getCompanyId(), searchTerms.getGroupId(), searchTerms.getArticleId(), searchTerms.getTitle(), searchTerms.getDescription(), searchTerms.getContent(), searchTerms.getType(), searchTerms.getStatusCode(), params, searchTerms.isAndOperator(), searchContainer.getStart(), searchContainer.getEnd(), sort);
}
else {
	hits = JournalArticleLocalServiceUtil.search(company.getCompanyId(), searchTerms.getGroupId(), searchTerms.getKeywords(), null, searchTerms.getStatusCode(), params, searchContainer.getStart(), searchContainer.getEnd(), sort);
}

results = _getResults(hits);
total = hits.getLength();

searchContainer.setResults(results);
searchContainer.setTotal(total);
%>

<%!
private static List<JournalArticle> _getResults(Hits hits) throws Exception {
	List<JournalArticle> articles = new ArrayList<JournalArticle>();

	List<com.liferay.portal.kernel.search.Document> hitsList = hits.toList();

	for (com.liferay.portal.kernel.search.Document doc : hitsList) {
		long groupId = GetterUtil.getLong(doc.get(Field.GROUP_ID));
		String articleId = doc.get(Field.ENTRY_CLASS_PK);

		try {
			articles.add(JournalArticleLocalServiceUtil.getArticle(groupId, articleId));
		}
		catch (NoSuchArticleException nsae) {
			_log.error("Article " + articleId + " does not exist in the search index. Please reindex.");
		}
	}

	return articles;
}

private static Sort _getSort(String orderByCol, String orderByType) {
	String sortField = "entryClassPK";

	if (Validator.isNotNull(orderByCol)) {
		if (orderByCol.equals("id")) {
			sortField = "entryClassPK";
		}
		else if (orderByCol.equals("display-date")) {
			sortField = "displayDate";
		}
		else if (orderByCol.equals("modified-date")) {
			sortField = "modified";
		}
		else {
			sortField = orderByCol;
		}
	}

	if (Validator.isNull(orderByType)) {
		orderByType = "asc";
	}

	return new Sort(sortField, Sort.STRING_TYPE, !orderByType.equalsIgnoreCase("asc"));
}

private static Log _log = LogFactoryUtil.getLog("portal-web.docroot.html.portlet.journal.article_search_results_index.jspf");
%>