<%
/**
 * Copyright (c) 2000-2008 Liferay, Inc. All rights reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */
%>

function addPortletHTML(options) {
	var portletBoundary = null;

	var url = options.url;
	var placeHolder = options.placeHolder;
	var beforePortletLoaded = options.beforePortletLoaded;
	var onComplete = options.onComplete;

	var addPortletReturn = function(html) {
		var container = placeHolder.parentNode;

		var portletBound = jQuery('<div></div>')[0];

		portletBound.innerHTML = html;
		portletBound = portletBound.firstChild;

		var portletId = Liferay.Util.getPortletId(portletBound.id);

		portletBound.portletId = portletId;

		Liferay.Portlet.flagAjax(portletId);

		jQuery(placeHolder).hide().after(portletBound).remove();

		<c:if test="<%= (layout != null) && (LayoutPermissionUtil.contains(permissionChecker, layout, ActionKeys.UPDATE)) %>">
			if (!portletBound.isStatic) {
				Liferay.Layout.refresh(portletBound);
			}
		</c:if>

		if (Liferay.Browser.is_firefox) {
			setTimeout("Liferay.Portlet.process(\"" + portletId + "\")", 0);
		}
		else {
			Liferay.Portlet.process(portletId);
		}

		Liferay.Util.addInputType(portletBound.id);

		if (window.location.hash) {
			window.location.hash = "p_" + portletId;
		}

		portletBoundary = portletBound;

		if (onComplete) {
			onComplete(portletBoundary, portletId);
		}

		var jContainer = jQuery(container);

		if (jContainer.is('.empty')) {
			jContainer.removeClass('empty');
		}

		return portletId;
	};

	if (beforePortletLoaded) {
		beforePortletLoaded(placeHolder);
	}

	jQuery.ajax(
		{
			url: url,
			complete: function(xHR) {
				addPortletReturn(xHR.responseText);
			}
		}
	);
}