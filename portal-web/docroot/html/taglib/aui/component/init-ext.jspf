<%--
/**
 * Copyright (c) 2000-2011 Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */
--%>

<%@ page import="com.liferay.alloy.util.json.StringTransformer"%>

<%
HashMap<String, Object> optionsJSON = (HashMap<String, Object>)request.getAttribute("aui:component:optionsJSON");

Object render = String.valueOf(_options.get("render"));

if (Validator.isNull(render)) {
	render = true;
}
else if (render.equals("true") || render.equals("false")) {
	render = GetterUtil.getBoolean((Serializable)render);
}

optionsJSON.put("render", render);

String scriptPosition = GetterUtil.getString((Serializable)_options.get("scriptPosition"), "inline");

boolean useJavaScript = GetterUtil.getBoolean((Serializable)_options.get("useJavaScript"), true);

defineVar = GetterUtil.getBoolean((Serializable)_options.get("defineVar"), defineVar);

if (Validator.isNull(var)) {
	var = (String)_options.get("var");
}
%>

<%!
public String _serialize(Object value, String javaScriptAttributes) {
	StringTransformer stringTransformer = new StringTransformer();

	stringTransformer.setJavaScriptAttributes(
		Arrays.asList(StringUtil.split(javaScriptAttributes)));

	return JSONFactoryUtil.looseSerialize(value, stringTransformer, String.class);
}
%>