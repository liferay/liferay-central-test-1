/**
 * Copyright (c) 2000-2011 Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.liferay.portlet.dynamicdatamapping.model;

import com.liferay.portal.kernel.bean.AutoEscape;
import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.model.BaseModel;
import com.liferay.portal.model.GroupedModel;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;

import java.io.Serializable;

import java.util.Date;

/**
 * The base model interface for the DDMStructure service. Represents a row in the &quot;DDMStructure&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This interface and its corresponding implementation {@link com.liferay.portlet.dynamicdatamapping.model.impl.DDMStructureModelImpl} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link com.liferay.portlet.dynamicdatamapping.model.impl.DDMStructureImpl}.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see DDMStructure
 * @see com.liferay.portlet.dynamicdatamapping.model.impl.DDMStructureImpl
 * @see com.liferay.portlet.dynamicdatamapping.model.impl.DDMStructureModelImpl
 * @generated
 */
public interface DDMStructureModel extends BaseModel<DDMStructure>, GroupedModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this interface directly. All methods that expect a d d m structure model instance should use the {@link DDMStructure} interface instead.
	 */

	/**
	 * Gets the primary key of this d d m structure.
	 *
	 * @return the primary key of this d d m structure
	 */
	public long getPrimaryKey();

	/**
	 * Sets the primary key of this d d m structure
	 *
	 * @param pk the primary key of this d d m structure
	 */
	public void setPrimaryKey(long pk);

	/**
	 * Gets the uuid of this d d m structure.
	 *
	 * @return the uuid of this d d m structure
	 */
	@AutoEscape
	public String getUuid();

	/**
	 * Sets the uuid of this d d m structure.
	 *
	 * @param uuid the uuid of this d d m structure
	 */
	public void setUuid(String uuid);

	/**
	 * Gets the structure ID of this d d m structure.
	 *
	 * @return the structure ID of this d d m structure
	 */
	public long getStructureId();

	/**
	 * Sets the structure ID of this d d m structure.
	 *
	 * @param structureId the structure ID of this d d m structure
	 */
	public void setStructureId(long structureId);

	/**
	 * Gets the group ID of this d d m structure.
	 *
	 * @return the group ID of this d d m structure
	 */
	public long getGroupId();

	/**
	 * Sets the group ID of this d d m structure.
	 *
	 * @param groupId the group ID of this d d m structure
	 */
	public void setGroupId(long groupId);

	/**
	 * Gets the company ID of this d d m structure.
	 *
	 * @return the company ID of this d d m structure
	 */
	public long getCompanyId();

	/**
	 * Sets the company ID of this d d m structure.
	 *
	 * @param companyId the company ID of this d d m structure
	 */
	public void setCompanyId(long companyId);

	/**
	 * Gets the user ID of this d d m structure.
	 *
	 * @return the user ID of this d d m structure
	 */
	public long getUserId();

	/**
	 * Sets the user ID of this d d m structure.
	 *
	 * @param userId the user ID of this d d m structure
	 */
	public void setUserId(long userId);

	/**
	 * Gets the user uuid of this d d m structure.
	 *
	 * @return the user uuid of this d d m structure
	 * @throws SystemException if a system exception occurred
	 */
	public String getUserUuid() throws SystemException;

	/**
	 * Sets the user uuid of this d d m structure.
	 *
	 * @param userUuid the user uuid of this d d m structure
	 */
	public void setUserUuid(String userUuid);

	/**
	 * Gets the user name of this d d m structure.
	 *
	 * @return the user name of this d d m structure
	 */
	@AutoEscape
	public String getUserName();

	/**
	 * Sets the user name of this d d m structure.
	 *
	 * @param userName the user name of this d d m structure
	 */
	public void setUserName(String userName);

	/**
	 * Gets the create date of this d d m structure.
	 *
	 * @return the create date of this d d m structure
	 */
	public Date getCreateDate();

	/**
	 * Sets the create date of this d d m structure.
	 *
	 * @param createDate the create date of this d d m structure
	 */
	public void setCreateDate(Date createDate);

	/**
	 * Gets the modified date of this d d m structure.
	 *
	 * @return the modified date of this d d m structure
	 */
	public Date getModifiedDate();

	/**
	 * Sets the modified date of this d d m structure.
	 *
	 * @param modifiedDate the modified date of this d d m structure
	 */
	public void setModifiedDate(Date modifiedDate);

	/**
	 * Gets the class name of the model instance this d d m structure is polymorphically associated with.
	 *
	 * @return the class name of the model instance this d d m structure is polymorphically associated with
	 */
	public String getClassName();

	/**
	 * Gets the class name ID of this d d m structure.
	 *
	 * @return the class name ID of this d d m structure
	 */
	public long getClassNameId();

	/**
	 * Sets the class name ID of this d d m structure.
	 *
	 * @param classNameId the class name ID of this d d m structure
	 */
	public void setClassNameId(long classNameId);

	/**
	 * Gets the structure key of this d d m structure.
	 *
	 * @return the structure key of this d d m structure
	 */
	public String getStructureKey();

	/**
	 * Sets the structure key of this d d m structure.
	 *
	 * @param structureKey the structure key of this d d m structure
	 */
	public void setStructureKey(String structureKey);

	/**
	 * Gets the name of this d d m structure.
	 *
	 * @return the name of this d d m structure
	 */
	@AutoEscape
	public String getName();

	/**
	 * Sets the name of this d d m structure.
	 *
	 * @param name the name of this d d m structure
	 */
	public void setName(String name);

	/**
	 * Gets the description of this d d m structure.
	 *
	 * @return the description of this d d m structure
	 */
	@AutoEscape
	public String getDescription();

	/**
	 * Sets the description of this d d m structure.
	 *
	 * @param description the description of this d d m structure
	 */
	public void setDescription(String description);

	/**
	 * Gets the xsd of this d d m structure.
	 *
	 * @return the xsd of this d d m structure
	 */
	@AutoEscape
	public String getXsd();

	/**
	 * Sets the xsd of this d d m structure.
	 *
	 * @param xsd the xsd of this d d m structure
	 */
	public void setXsd(String xsd);

	/**
	 * Gets the storage type of this d d m structure.
	 *
	 * @return the storage type of this d d m structure
	 */
	@AutoEscape
	public String getStorageType();

	/**
	 * Sets the storage type of this d d m structure.
	 *
	 * @param storageType the storage type of this d d m structure
	 */
	public void setStorageType(String storageType);

	public boolean isNew();

	public void setNew(boolean n);

	public boolean isCachedModel();

	public void setCachedModel(boolean cachedModel);

	public boolean isEscapedModel();

	public void setEscapedModel(boolean escapedModel);

	public Serializable getPrimaryKeyObj();

	public ExpandoBridge getExpandoBridge();

	public void setExpandoBridgeAttributes(ServiceContext serviceContext);

	public Object clone();

	public int compareTo(DDMStructure ddmStructure);

	public int hashCode();

	public DDMStructure toEscapedModel();

	public String toString();

	public String toXmlString();
}