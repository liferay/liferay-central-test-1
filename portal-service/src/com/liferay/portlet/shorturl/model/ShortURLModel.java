/**
 * Copyright (c) 2000-2011 Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.liferay.portlet.shorturl.model;

import com.liferay.portal.kernel.bean.AutoEscape;
import com.liferay.portal.model.BaseModel;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;

import java.io.Serializable;

import java.util.Date;

/**
 * The base model interface for the ShortURL service. Represents a row in the &quot;ShortURL&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This interface and its corresponding implementation {@link com.liferay.portlet.shorturl.model.impl.ShortURLModelImpl} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link com.liferay.portlet.shorturl.model.impl.ShortURLImpl}.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see ShortURL
 * @see com.liferay.portlet.shorturl.model.impl.ShortURLImpl
 * @see com.liferay.portlet.shorturl.model.impl.ShortURLModelImpl
 * @generated
 */
public interface ShortURLModel extends BaseModel<ShortURL> {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this interface directly. All methods that expect a short u r l model instance should use the {@link ShortURL} interface instead.
	 */

	/**
	 * Gets the primary key of this short u r l.
	 *
	 * @return the primary key of this short u r l
	 */
	public long getPrimaryKey();

	/**
	 * Sets the primary key of this short u r l
	 *
	 * @param pk the primary key of this short u r l
	 */
	public void setPrimaryKey(long pk);

	/**
	 * Gets the short u r l ID of this short u r l.
	 *
	 * @return the short u r l ID of this short u r l
	 */
	public long getShortURLId();

	/**
	 * Sets the short u r l ID of this short u r l.
	 *
	 * @param shortURLId the short u r l ID of this short u r l
	 */
	public void setShortURLId(long shortURLId);

	/**
	 * Gets the create date of this short u r l.
	 *
	 * @return the create date of this short u r l
	 */
	public Date getCreateDate();

	/**
	 * Sets the create date of this short u r l.
	 *
	 * @param createDate the create date of this short u r l
	 */
	public void setCreateDate(Date createDate);

	/**
	 * Gets the modified date of this short u r l.
	 *
	 * @return the modified date of this short u r l
	 */
	public Date getModifiedDate();

	/**
	 * Sets the modified date of this short u r l.
	 *
	 * @param modifiedDate the modified date of this short u r l
	 */
	public void setModifiedDate(Date modifiedDate);

	/**
	 * Gets the original u r l of this short u r l.
	 *
	 * @return the original u r l of this short u r l
	 */
	@AutoEscape
	public String getOriginalURL();

	/**
	 * Sets the original u r l of this short u r l.
	 *
	 * @param originalURL the original u r l of this short u r l
	 */
	public void setOriginalURL(String originalURL);

	/**
	 * Gets the hash of this short u r l.
	 *
	 * @return the hash of this short u r l
	 */
	@AutoEscape
	public String getHash();

	/**
	 * Sets the hash of this short u r l.
	 *
	 * @param hash the hash of this short u r l
	 */
	public void setHash(String hash);

	/**
	 * Gets the descriptor of this short u r l.
	 *
	 * @return the descriptor of this short u r l
	 */
	@AutoEscape
	public String getDescriptor();

	/**
	 * Sets the descriptor of this short u r l.
	 *
	 * @param descriptor the descriptor of this short u r l
	 */
	public void setDescriptor(String descriptor);

	public boolean isNew();

	public void setNew(boolean n);

	public boolean isCachedModel();

	public void setCachedModel(boolean cachedModel);

	public boolean isEscapedModel();

	public void setEscapedModel(boolean escapedModel);

	public Serializable getPrimaryKeyObj();

	public ExpandoBridge getExpandoBridge();

	public void setExpandoBridgeAttributes(ServiceContext serviceContext);

	public Object clone();

	public int compareTo(ShortURL shortURL);

	public int hashCode();

	public ShortURL toEscapedModel();

	public String toString();

	public String toXmlString();
}