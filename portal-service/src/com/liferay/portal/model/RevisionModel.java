/**
 * Copyright (c) 2000-2010 Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.liferay.portal.model;

import com.liferay.portal.kernel.annotation.AutoEscape;
import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;

import java.io.Serializable;

import java.util.Date;

/**
 * The base model interface for the Revision service. Represents a row in the &quot;Revision&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This interface and its corresponding implementation {@link com.liferay.portal.model.impl.RevisionModelImpl} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link com.liferay.portal.model.impl.RevisionImpl}.
 * </p>
 *
 * <p>
 * Never modify or reference this interface directly. All methods that expect a revision model instance should use the {@link Revision} interface instead.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see Revision
 * @see com.liferay.portal.model.impl.RevisionImpl
 * @see com.liferay.portal.model.impl.RevisionModelImpl
 * @generated
 */
public interface RevisionModel extends BaseModel<Revision> {
	/**
	 * Gets the primary key of this revision.
	 *
	 * @return the primary key of this revision
	 */
	public long getPrimaryKey();

	/**
	 * Sets the primary key of this revision
	 *
	 * @param pk the primary key of this revision
	 */
	public void setPrimaryKey(long pk);

	/**
	 * Gets the revision id of this revision.
	 *
	 * @return the revision id of this revision
	 */
	public long getRevisionId();

	/**
	 * Sets the revision id of this revision.
	 *
	 * @param revisionId the revision id of this revision
	 */
	public void setRevisionId(long revisionId);

	/**
	 * Gets the group id of this revision.
	 *
	 * @return the group id of this revision
	 */
	public long getGroupId();

	/**
	 * Sets the group id of this revision.
	 *
	 * @param groupId the group id of this revision
	 */
	public void setGroupId(long groupId);

	/**
	 * Gets the company id of this revision.
	 *
	 * @return the company id of this revision
	 */
	public long getCompanyId();

	/**
	 * Sets the company id of this revision.
	 *
	 * @param companyId the company id of this revision
	 */
	public void setCompanyId(long companyId);

	/**
	 * Gets the user id of this revision.
	 *
	 * @return the user id of this revision
	 */
	public long getUserId();

	/**
	 * Sets the user id of this revision.
	 *
	 * @param userId the user id of this revision
	 */
	public void setUserId(long userId);

	/**
	 * Gets the user uuid of this revision.
	 *
	 * @return the user uuid of this revision
	 * @throws SystemException if a system exception occurred
	 */
	public String getUserUuid() throws SystemException;

	/**
	 * Sets the user uuid of this revision.
	 *
	 * @param userUuid the user uuid of this revision
	 */
	public void setUserUuid(String userUuid);

	/**
	 * Gets the user name of this revision.
	 *
	 * @return the user name of this revision
	 */
	@AutoEscape
	public String getUserName();

	/**
	 * Sets the user name of this revision.
	 *
	 * @param userName the user name of this revision
	 */
	public void setUserName(String userName);

	/**
	 * Gets the create date of this revision.
	 *
	 * @return the create date of this revision
	 */
	public Date getCreateDate();

	/**
	 * Sets the create date of this revision.
	 *
	 * @param createDate the create date of this revision
	 */
	public void setCreateDate(Date createDate);

	/**
	 * Gets the modified date of this revision.
	 *
	 * @return the modified date of this revision
	 */
	public Date getModifiedDate();

	/**
	 * Sets the modified date of this revision.
	 *
	 * @param modifiedDate the modified date of this revision
	 */
	public void setModifiedDate(Date modifiedDate);

	/**
	 * Gets the branch id of this revision.
	 *
	 * @return the branch id of this revision
	 */
	public long getBranchId();

	/**
	 * Sets the branch id of this revision.
	 *
	 * @param branchId the branch id of this revision
	 */
	public void setBranchId(long branchId);

	/**
	 * Gets the plid of this revision.
	 *
	 * @return the plid of this revision
	 */
	public long getPlid();

	/**
	 * Sets the plid of this revision.
	 *
	 * @param plid the plid of this revision
	 */
	public void setPlid(long plid);

	/**
	 * Gets the parent revision id of this revision.
	 *
	 * @return the parent revision id of this revision
	 */
	public long getParentRevisionId();

	/**
	 * Sets the parent revision id of this revision.
	 *
	 * @param parentRevisionId the parent revision id of this revision
	 */
	public void setParentRevisionId(long parentRevisionId);

	/**
	 * Gets the head of this revision.
	 *
	 * @return the head of this revision
	 */
	public boolean getHead();

	/**
	 * Determines if this revision is head.
	 *
	 * @return <code>true</code> if this revision is head; <code>false</code> otherwise
	 */
	public boolean isHead();

	/**
	 * Sets whether this revision is head.
	 *
	 * @param head the head of this revision
	 */
	public void setHead(boolean head);

	/**
	 * Gets the name of this revision.
	 *
	 * @return the name of this revision
	 */
	@AutoEscape
	public String getName();

	/**
	 * Sets the name of this revision.
	 *
	 * @param name the name of this revision
	 */
	public void setName(String name);

	/**
	 * Gets the title of this revision.
	 *
	 * @return the title of this revision
	 */
	@AutoEscape
	public String getTitle();

	/**
	 * Sets the title of this revision.
	 *
	 * @param title the title of this revision
	 */
	public void setTitle(String title);

	/**
	 * Gets the description of this revision.
	 *
	 * @return the description of this revision
	 */
	@AutoEscape
	public String getDescription();

	/**
	 * Sets the description of this revision.
	 *
	 * @param description the description of this revision
	 */
	public void setDescription(String description);

	/**
	 * Gets the type settings of this revision.
	 *
	 * @return the type settings of this revision
	 */
	@AutoEscape
	public String getTypeSettings();

	/**
	 * Sets the type settings of this revision.
	 *
	 * @param typeSettings the type settings of this revision
	 */
	public void setTypeSettings(String typeSettings);

	/**
	 * Gets the icon image of this revision.
	 *
	 * @return the icon image of this revision
	 */
	public boolean getIconImage();

	/**
	 * Determines if this revision is icon image.
	 *
	 * @return <code>true</code> if this revision is icon image; <code>false</code> otherwise
	 */
	public boolean isIconImage();

	/**
	 * Sets whether this revision is icon image.
	 *
	 * @param iconImage the icon image of this revision
	 */
	public void setIconImage(boolean iconImage);

	/**
	 * Gets the icon image id of this revision.
	 *
	 * @return the icon image id of this revision
	 */
	public long getIconImageId();

	/**
	 * Sets the icon image id of this revision.
	 *
	 * @param iconImageId the icon image id of this revision
	 */
	public void setIconImageId(long iconImageId);

	/**
	 * Gets the theme id of this revision.
	 *
	 * @return the theme id of this revision
	 */
	@AutoEscape
	public String getThemeId();

	/**
	 * Sets the theme id of this revision.
	 *
	 * @param themeId the theme id of this revision
	 */
	public void setThemeId(String themeId);

	/**
	 * Gets the color scheme id of this revision.
	 *
	 * @return the color scheme id of this revision
	 */
	@AutoEscape
	public String getColorSchemeId();

	/**
	 * Sets the color scheme id of this revision.
	 *
	 * @param colorSchemeId the color scheme id of this revision
	 */
	public void setColorSchemeId(String colorSchemeId);

	/**
	 * Gets the wap theme id of this revision.
	 *
	 * @return the wap theme id of this revision
	 */
	@AutoEscape
	public String getWapThemeId();

	/**
	 * Sets the wap theme id of this revision.
	 *
	 * @param wapThemeId the wap theme id of this revision
	 */
	public void setWapThemeId(String wapThemeId);

	/**
	 * Gets the wap color scheme id of this revision.
	 *
	 * @return the wap color scheme id of this revision
	 */
	@AutoEscape
	public String getWapColorSchemeId();

	/**
	 * Sets the wap color scheme id of this revision.
	 *
	 * @param wapColorSchemeId the wap color scheme id of this revision
	 */
	public void setWapColorSchemeId(String wapColorSchemeId);

	/**
	 * Gets the css of this revision.
	 *
	 * @return the css of this revision
	 */
	@AutoEscape
	public String getCss();

	/**
	 * Sets the css of this revision.
	 *
	 * @param css the css of this revision
	 */
	public void setCss(String css);

	/**
	 * Gets the status of this revision.
	 *
	 * @return the status of this revision
	 */
	public int getStatus();

	/**
	 * Sets the status of this revision.
	 *
	 * @param status the status of this revision
	 */
	public void setStatus(int status);

	/**
	 * Gets the status by user id of this revision.
	 *
	 * @return the status by user id of this revision
	 */
	public long getStatusByUserId();

	/**
	 * Sets the status by user id of this revision.
	 *
	 * @param statusByUserId the status by user id of this revision
	 */
	public void setStatusByUserId(long statusByUserId);

	/**
	 * Gets the status by user uuid of this revision.
	 *
	 * @return the status by user uuid of this revision
	 * @throws SystemException if a system exception occurred
	 */
	public String getStatusByUserUuid() throws SystemException;

	/**
	 * Sets the status by user uuid of this revision.
	 *
	 * @param statusByUserUuid the status by user uuid of this revision
	 */
	public void setStatusByUserUuid(String statusByUserUuid);

	/**
	 * Gets the status by user name of this revision.
	 *
	 * @return the status by user name of this revision
	 */
	@AutoEscape
	public String getStatusByUserName();

	/**
	 * Sets the status by user name of this revision.
	 *
	 * @param statusByUserName the status by user name of this revision
	 */
	public void setStatusByUserName(String statusByUserName);

	/**
	 * Gets the status date of this revision.
	 *
	 * @return the status date of this revision
	 */
	public Date getStatusDate();

	/**
	 * Sets the status date of this revision.
	 *
	 * @param statusDate the status date of this revision
	 */
	public void setStatusDate(Date statusDate);

	/**
	 * @deprecated {@link #isApproved}
	 */
	public boolean getApproved();

	/**
	 * Determines if this revision is approved.
	 *
	 * @return <code>true</code> if this revision is approved; <code>false</code> otherwise
	 */
	public boolean isApproved();

	/**
	 * Determines if this revision is a draft.
	 *
	 * @return <code>true</code> if this revision is a draft; <code>false</code> otherwise
	 */
	public boolean isDraft();

	/**
	 * Determines if this revision is expired.
	 *
	 * @return <code>true</code> if this revision is expired; <code>false</code> otherwise
	 */
	public boolean isExpired();

	/**
	 * Determines if this revision is pending.
	 *
	 * @return <code>true</code> if this revision is pending; <code>false</code> otherwise
	 */
	public boolean isPending();

	public boolean isNew();

	public void setNew(boolean n);

	public boolean isCachedModel();

	public void setCachedModel(boolean cachedModel);

	public boolean isEscapedModel();

	public void setEscapedModel(boolean escapedModel);

	public Serializable getPrimaryKeyObj();

	public ExpandoBridge getExpandoBridge();

	public void setExpandoBridgeAttributes(ServiceContext serviceContext);

	public Object clone();

	public int compareTo(Revision revision);

	public int hashCode();

	public Revision toEscapedModel();

	public String toString();

	public String toXmlString();
}