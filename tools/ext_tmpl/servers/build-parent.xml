<?xml version="1.0"?>

<project name="servers-parent">
	<import file="../build-common.xml" />

	<target name="clean-oc4j">
		<delete dir="${app.server.oc4j.dir}/oc4j" />
		<mkdir dir="${app.server.oc4j.dir}/oc4j" />
	</target>

	<target name="download-server">
		<antcall target="setproxy" />

		<if>
			<http url="${app.server.zip.url}" />
			<then>
				<get
					src="${app.server.zip.url}"
					dest="${downloads.dir}/${app.server.zip.name}"
					usetimestamp="true"
					verbose="true"
				/>
			</then>
		</if>
	</target>

	<target name="install-server">
		<antcall target="download-server" />

		<if>
			<available file="${downloads.dir}/${app.server.zip.name}" />
			<then>
				<unzip
					src="${downloads.dir}/${app.server.zip.name}"
					dest="${app.server.dest}"
				/>
			</then>
			<else>
				<echo message="Please manually download ${app.server.zip.url} to ${downloads.dir}/${app.server.zip.name}." />
			</else>
		</if>
	</target>

	<target name="install-glassfish">
		<antcall target="download-server">
			<param name="app.server.zip.url" value="${app.server.glassfish.zip.url}" />
			<param name="app.server.zip.name" value="${app.server.glassfish.zip.name}" />
		</antcall>

		<tstamp>
			<format property="tstamp.value" pattern="yyyyMMddkkmmssSSS" />
		</tstamp>

		<mkdir dir="${tstamp.value}" />

		<java
			dir="${tstamp.value}"
			fork="true"
			input="glassfish/input.txt"
			jar="${downloads.dir}/${app.server.glassfish.zip.name}"
			maxmemory="256m"
		>
			<arg value="-console" />
		</java>

		<move file="${tstamp.value}/glassfish" tofile="${app.server.glassfish.dir}" />

		<delete dir="${tstamp.value}" />

		<ant antfile="${app.server.glassfish.dir}/setup.xml" inheritAll="false" />

		<copy todir="${app.server.glassfish.dir}/domains" overwrite="yes">
			<fileset dir="glassfish/domains" />
		</copy>
	</target>

	<target name="install-jboss-jetty">
		<antcall target="install-server">
			<param name="app.server.zip.url" value="${app.server.jboss-jetty.zip.url}" />
			<param name="app.server.zip.name" value="${app.server.jboss-jetty.zip.name}" />
			<param name="app.server.dest" value="${app.server.jboss-jetty.dir}" />
		</antcall>
	</target>

	<target name="install-jboss-tomcat">
		<antcall target="install-server">
			<param name="app.server.zip.url" value="${app.server.jboss-tomcat.zip.url}" />
			<param name="app.server.zip.name" value="${app.server.jboss-tomcat.zip.name}" />
			<param name="app.server.dest" value="${app.server.jboss-tomcat.dir}" />
		</antcall>
	</target>

	<target name="install-jetty">
		<antcall target="install-server">
			<param name="app.server.zip.url" value="${app.server.jetty.zip.url}" />
			<param name="app.server.zip.name" value="${app.server.jetty.zip.name}" />
			<param name="app.server.dest" value="${app.server.jetty.dir}" />
		</antcall>
	</target>

	<target name="install-jonas-jetty">
		<antcall target="install-server">
			<param name="app.server.zip.url" value="${app.server.jonas-jetty.zip.url}" />
			<param name="app.server.zip.name" value="${app.server.jonas-jetty.zip.name}" />
			<param name="app.server.dest" value="${app.server.jonas-jetty.dir}" />
		</antcall>
	</target>

	<target name="install-jonas-tomcat">
		<antcall target="install-server">
			<param name="app.server.zip.url" value="${app.server.jonas-tomcat.zip.url}" />
			<param name="app.server.zip.name" value="${app.server.jonas-tomcat.zip.name}" />
			<param name="app.server.dest" value="${app.server.jonas-tomcat.dir}" />
		</antcall>
	</target>

	<target name="install-oc4j">
		<!--<antcall target="install-server">
			<param name="app.server.zip.url" value="${app.server.oc4j.zip.url}" />
			<param name="app.server.zip.name" value="${app.server.oc4j.zip.name}" />
			<param name="app.server.dest" value="${app.server.oc4j.dir}/oc4j" />
		</antcall>-->

		<unzip
			src="${downloads.dir}/${app.server.oc4j.zip.name}"
			dest="${app.server.oc4j.dir}/oc4j"
		/>

		<mkdir dir="${app.server.oc4j.dir}/jsp/lib/taglib" />
		<mkdir dir="${app.server.oc4j.dir}/log" />
		<mkdir dir="${app.server.oc4j.dir}/persistence/ejb" />

		<antcall target="configure-oc4j" />
	</target>

	<target name="install-pramati">
		<antcall target="download-server">
			<param name="app.server.zip.url" value="${app.server.pramati.zip.url}" />
			<param name="app.server.zip.name" value="${app.server.pramati.zip.name}" />
		</antcall>

		<copy file="pramati/silent_install.xml.template" tofile="pramati/silent_install.xml" overwrite="yes">
			<filterset>
				<filter token="install.path" value="${app.server.pramati.dir}" />
				<filter token="java.home" value="${env.JAVA_HOME}" />
			</filterset>
		</copy>

		<java jar="${downloads.dir}/${app.server.pramati.zip.name}" fork="true">
			<arg value="-silent" />
			<arg value="pramati/silent_install.xml" />
		</java>

		<replace
			file="${app.server.pramati.dir}/server/templates/deploy-config.xml"
			token="poll-interval-seconds>5"
			value="poll-interval-seconds>15"
		/>

		<exec dir="${app.server.pramati.dir}/server/bin" executable="nodecreator.bat" resolveexecutable="true">
			<arg value="-createj2ee" />
			<arg value="-name" />
			<arg value="liferay" />
			<arg value="-ip" />
			<arg value="localhost" />
			<arg value="-namingport" />
			<arg value="9191" />
			<arg value="-httpport" />
			<arg value="8080" />
		</exec>

		<copy
			file="${app.server.pramati.dir}/server/bin/runserver.bat"
			tofile="${app.server.pramati.dir}/server/bin/runliferay.bat"
		/>

		<replace file="${app.server.pramati.dir}/server/bin/runliferay.bat">
			<replacefilter
				token="-server"
				value="-Xmx768m -XX:MaxPermSize=128m -server"
			/>
			<replacefilter
				token="com.pramati.Server"
				value="com.pramati.Server -node liferay"
			/>
		</replace>

		<delete dir="${app.server.pramati.dir}/server/lf" />

		<copy todir="${app.server.pramati.dir}/server" overwrite="yes">
			<fileset dir="pramati/server" />
		</copy>
	</target>

	<target name="install-resin">
		<antcall target="install-server">
			<param name="app.server.zip.url" value="${app.server.resin.zip.url}" />
			<param name="app.server.zip.name" value="${app.server.resin.zip.name}" />
			<param name="app.server.dest" value="${app.server.resin.dir}" />
		</antcall>
	</target>

	<target name="install-tomcat">
		<antcall target="install-server">
			<param name="app.server.zip.url" value="${app.server.tomcat.zip.url}" />
			<param name="app.server.zip.name" value="${app.server.tomcat.zip.name}" />
			<param name="app.server.dest" value="${app.server.tomcat.dir}" />
		</antcall>
	</target>

	<target name="configure-oc4j">
		<replace file="${app.server.oc4j.dir}/config/server.xml">
			<replacefilter
				token="@rt.jar.path@"
				value="${env.JAVA_HOME}${file.separator}jre${file.separator}lib${file.separator}rt.jar"
			/>
		</replace>
	</target>
</project>