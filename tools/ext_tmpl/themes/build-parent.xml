<?xml version="1.0"?>

<project name="themes-parent" xmlns:antelope="antlib:ise.antelope.tasks">
	<import file="../build-common.xml" />

	<property name="common.themes.src.dir" value="${project.dir}/ext-web/tmp/html/themes" />

	<target name="clean">
		<antcall target="loop-modules">
			<param name="loop.modules.cmd" value="clean-module" />
		</antcall>
	</target>

	<target name="clean-module">
		<if>
			<available file="${module.name}.war/_diffs" />
			<then>
				<delete includeemptydirs="true" quiet="true" failonerror="false">
					<fileset
						dir="${module.name}.war"
						excludes="_diffs.*,_diffs/**,WEB-INF/**"
					/>
				</delete>
			</then>
		</if>
	</target>

	<target name="compile">
		<antcall target="loop-modules">
			<param name="loop.modules.cmd" value="compile-module" />
		</antcall>
	</target>

	<target name="compile-module">
		<if>
			<isfileselected file="${module.name}.war">
				<type type="file" />
			</isfileselected>
			<then>
				<echo>Skipping packed module ${module.name}.war</echo>
			</then>
			<else>
				<if>
					<available file="${module.name}.war/_diffs" />
					<then>
						<if>
							<available file="${module.name}.war/_diffs.unstyled" />
							<then>
								<copy todir="${module.name}.war" overwrite="yes">
									<fileset
										dir="${common.themes.src.dir}/_unstyled"
										excludes="templates/init.vm"
									/>
								</copy>
							</then>
							<else>
								<copy todir="${module.name}.war" overwrite="yes">
									<fileset
										dir="${common.themes.src.dir}/_unstyled"
										excludes="templates/init.vm"
									/>
								</copy>

								<copy todir="${module.name}.war" overwrite="yes">
									<fileset
										dir="${common.themes.src.dir}/_styled"
									/>
								</copy>
							</else>
						</if>

						<copy todir="${module.name}.war" overwrite="yes">
							<fileset
								dir="${module.name}.war/_diffs"
							/>
						</copy>
					</then>
				</if>
			</else>
		</if>
	</target>

	<target name="war" depends="compile">
		<antcall target="loop-modules">
			<param name="loop.modules.cmd" value="war-module" />
		</antcall>
	</target>

	<target name="war-module">
		<if>
			<isfileselected file="${module.name}.war">
				<type type="file" />
			</isfileselected>
			<then>
				<copy file="${module.name}.war" todir="${project.dir}/${module.name}-${lp.version.file.name}.war" />
			</then>
			<else>
				<jar
					basedir="${module.name}.war"
					destfile="${project.dir}/${module.name}-${lp.version.file.name}.war"
					excludes="_diffs.*,_diffs/**"
				/>
			</else>
		</if>
	</target>

	<target name="deploy" depends="compile">
		<if>
			<available file="${auto.deploy.dir}" />
			<then>
				<antcall target="loop-modules">
					<param name="loop.modules.cmd" value="deploy-module" />
				</antcall>
			</then>
			<else>
				<echo message="Please create ${auto.deploy.dir}" />
			</else>
		</if>
	</target>

	<target name="deploy-module">
		<if>
			<isfileselected file="${module.name}.war">
				<type type="file" />
			</isfileselected>
			<then>
				<copy file="${module.name}.war" todir="${auto.deploy.dir}" />
			</then>
			<else>
				<tstamp>
					<format property="tstamp.value" pattern="yyyyMMddkkmmssSSS" />
				</tstamp>

				<jar
					basedir="${module.name}.war"
					destfile="${tstamp.value}"
					excludes="_diffs.*,_diffs/**"
				/>

				<move file="${tstamp.value}" tofile="${auto.deploy.dir}/${module.name}.war" />
			</else>
		</if>
	</target>

	<target name="loop-modules">
		<for param="module.name">
			<path>
				<dirset dir="." excludes="${deploy.wars.excludes}" includes="${deploy.wars.includes}" />
				<fileset dir="." excludes="${deploy.wars.excludes}" includes="${deploy.wars.includes}" />
			</path>
			<sequential>
				<antelope:stringutil string="@{module.name}" property="module.name.unix">
					<replace regex="\\" replacement="/" />
				</antelope:stringutil>

				<antelope:grep in="${module.name.unix}" regex="(.*/)(.*)(\.war)" group="2" property="module.name" />

				<antcall target="${loop.modules.cmd}" />
			</sequential>
		</for>
	</target>
</project>